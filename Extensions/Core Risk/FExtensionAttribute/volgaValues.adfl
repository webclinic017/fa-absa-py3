[Core Risk]FCombInstrMapAndTrades:volgaValues = instrument :* "volgaValues" [isSplitAllGrouped, priceSource, timeBucketsSetExternally, positionTradeQuantities, volatilityGreekFilter, filterUnit, groupingSpotDiscountDate, contractSize := contractSizeWeighted];
[Core Risk]FInstrument:volgaValues = select(isSettled or noVolatilityGreekRiskFactorsExist, 
  true->baseDateZero, 
  false->select(forwardFxRateConversion, 
    true->discountAndConvertToCurrency(volgaValuesUndiscounted, discountAndConvertToBaseForwardFXConversionMoneyMarketCurve, discountAndConvertToBaseDate, 1.0, forwardFXConversionCurrencySymbol, filterUnit, discountAndConvertToBaseForwardFXConversionCurves, discountAndConvertToBaseForwardFXConversionFXRates, forwardFXConversionCurrencySymbol), 
    false->discountAndFilterCurrency(volgaValuesUndiscounted, discountAndConvertToBaseDiscountCurves, discountAndConvertToBaseDate, filterUnit)));
[Core Risk]FInstrumentAndTrades:volgaValues = openInstrument :* "collapse(volgaValues)" [isSplitAllGrouped, priceSource, positionObject, volatilityGreekFilter, filterUnit, groupingSpotDiscountDate];
[Core Risk]FMultiInstrumentAndTrades:volgaValues = sumOf(openInstruments :* "collapse(volgaValues)" [isSplitAllGrouped, priceSource, positionObject, volatilityGreekFilter, filterUnit, groupingSpotDiscountDate]);
[Core Risk]FTradeRow:volgaValues = openInstrument :* "volgaValues" [isSplitAllGrouped, priceSource, singleTradePosition, includeAllTrades, volatilityGreekFilter, filterUnit, groupingSpotDiscountDate];