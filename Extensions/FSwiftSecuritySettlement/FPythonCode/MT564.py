# C:\Projects\Code\SwiftMessagingSolution_Python3\base\extensions\SwiftIntegration\Utilities\TemplateFiles\MT564.py
# -*- coding: utf-8 -*-
# PyXB bindings for NM:96afad3d20bbfe8d040a1a097fa388d9fecd10e3
# Generated 2019-11-07 16:03:16.111364 by PyXB version 1.2.6 using Python 3.7.4.final.0
# Namespace http://www.w3schools.com


import pyxb
import pyxb.binding
import pyxb.binding.saxer
import io
import pyxb.utils.utility
import pyxb.utils.domutils
import sys
import pyxb.utils.six as _six
# Unique identifier for bindings created at the same time
_GenerationUID = pyxb.utils.utility.UniqueIdentifier('urn:uuid:01cae802-014a-11ea-9ce8-509a4c321f2f')

# Version of PyXB used to generate the bindings
_PyXBVersion = '1.2.6'
# Generated bindings are not compatible across PyXB versions
if pyxb.__version__ != _PyXBVersion:
    raise pyxb.PyXBVersionError(_PyXBVersion)

# A holder for module-level binding classes so we can access them from
# inside class definitions where property names may conflict.
_module_typeBindings = pyxb.utils.utility.Object()

# Import bindings for namespaces imported into schema
import pyxb.binding.datatypes

# NOTE: All namespace declarations are reserved within the binding
Namespace = pyxb.namespace.NamespaceForURI('http://www.w3schools.com', create_if_missing=True)
Namespace.configureCategories(['typeBinding', 'elementBinding'])

def CreateFromDocument (xml_text, default_namespace=None, location_base=None):
    """Parse the given XML and use the document element to create a
    Python instance.

    @param xml_text An XML document.  This should be data (Python 2
    str or Python 3 bytes), or a text (Python 2 unicode or Python 3
    str) in the L{pyxb._InputEncoding} encoding.

    @keyword default_namespace The L{pyxb.Namespace} instance to use as the
    default namespace where there is no default namespace in scope.
    If unspecified or C{None}, the namespace of the module containing
    this function will be used.

    @keyword location_base: An object to be recorded as the base of all
    L{pyxb.utils.utility.Location} instances associated with events and
    objects handled by the parser.  You might pass the URI from which
    the document was obtained.
    """

    if pyxb.XMLStyle_saxer != pyxb._XMLStyle:
        dom = pyxb.utils.domutils.StringToDOM(xml_text)
        return CreateFromDOM(dom.documentElement, default_namespace=default_namespace)
    if default_namespace is None:
        default_namespace = Namespace.fallbackNamespace()
    saxer = pyxb.binding.saxer.make_parser(fallback_namespace=default_namespace, location_base=location_base)
    handler = saxer.getContentHandler()
    xmld = xml_text
    if isinstance(xmld, _six.text_type):
        xmld = xmld.encode(pyxb._InputEncoding)
    saxer.parse(io.BytesIO(xmld))
    instance = handler.rootObject()
    return instance

def CreateFromDOM (node, default_namespace=None):
    """Create a Python instance from the given DOM node.
    The node tag must correspond to an element declaration in this module.

    @deprecated: Forcing use of DOM interface is unnecessary; use L{CreateFromDocument}."""
    if default_namespace is None:
        default_namespace = Namespace.fallbackNamespace()
    return pyxb.binding.basis.element.AnyCreateFromDOM(node, default_namespace)


# Atomic simple type: {http://www.w3schools.com}MT564_GENL_28E_Type_Pattern
class MT564_GENL_28E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_28E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 3, 1)
    _Documentation = None
MT564_GENL_28E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_GENL_28E_Type_Pattern._CF_pattern.addPattern(pattern='([0-9]{1,5}/(LAST|MORE|ONLY))')
MT564_GENL_28E_Type_Pattern._InitializeFacetMap(MT564_GENL_28E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_28E_Type_Pattern', MT564_GENL_28E_Type_Pattern)
_module_typeBindings.MT564_GENL_28E_Type_Pattern = MT564_GENL_28E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_GENL_20C_Type_Pattern
class MT564_GENL_20C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_20C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 16, 1)
    _Documentation = None
MT564_GENL_20C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_GENL_20C_Type_Pattern._CF_pattern.addPattern(pattern="(:(CORP|SEME|COAF)//([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,16})")
MT564_GENL_20C_Type_Pattern._InitializeFacetMap(MT564_GENL_20C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_20C_Type_Pattern', MT564_GENL_20C_Type_Pattern)
_module_typeBindings.MT564_GENL_20C_Type_Pattern = MT564_GENL_20C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_GENL_23G_Type_Pattern
class MT564_GENL_23G_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_23G_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 29, 1)
    _Documentation = None
MT564_GENL_23G_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_GENL_23G_Type_Pattern._CF_pattern.addPattern(pattern='((ADDB|CANC|NEWM|REPE|REPL|RMDR|WITH)(/(CODU|COPY|DUPL))?)')
MT564_GENL_23G_Type_Pattern._InitializeFacetMap(MT564_GENL_23G_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_23G_Type_Pattern', MT564_GENL_23G_Type_Pattern)
_module_typeBindings.MT564_GENL_23G_Type_Pattern = MT564_GENL_23G_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_GENL_22F_Type_Pattern
class MT564_GENL_22F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_22F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 42, 1)
    _Documentation = None
MT564_GENL_22F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_GENL_22F_Type_Pattern._CF_pattern.addPattern(pattern='(:(CAEP|CAEV|CAMV)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_GENL_22F_Type_Pattern._InitializeFacetMap(MT564_GENL_22F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_22F_Type_Pattern', MT564_GENL_22F_Type_Pattern)
_module_typeBindings.MT564_GENL_22F_Type_Pattern = MT564_GENL_22F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_GENL_98A_Type_Pattern
class MT564_GENL_98A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_98A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 55, 1)
    _Documentation = None
MT564_GENL_98A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_GENL_98A_Type_Pattern._CF_pattern.addPattern(pattern='(:(PREP)//[0-9]{8})')
MT564_GENL_98A_Type_Pattern._InitializeFacetMap(MT564_GENL_98A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_98A_Type_Pattern', MT564_GENL_98A_Type_Pattern)
_module_typeBindings.MT564_GENL_98A_Type_Pattern = MT564_GENL_98A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_GENL_98C_Type_Pattern
class MT564_GENL_98C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_98C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 68, 1)
    _Documentation = None
MT564_GENL_98C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_GENL_98C_Type_Pattern._CF_pattern.addPattern(pattern='(:(PREP)//[0-9]{8}[0-9]{6})')
MT564_GENL_98C_Type_Pattern._InitializeFacetMap(MT564_GENL_98C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_98C_Type_Pattern', MT564_GENL_98C_Type_Pattern)
_module_typeBindings.MT564_GENL_98C_Type_Pattern = MT564_GENL_98C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_GENL_25D_Type_Pattern
class MT564_GENL_25D_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_25D_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 81, 1)
    _Documentation = None
MT564_GENL_25D_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_GENL_25D_Type_Pattern._CF_pattern.addPattern(pattern='(:(PROC)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_GENL_25D_Type_Pattern._InitializeFacetMap(MT564_GENL_25D_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_25D_Type_Pattern', MT564_GENL_25D_Type_Pattern)
_module_typeBindings.MT564_GENL_25D_Type_Pattern = MT564_GENL_25D_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_GENL_LINK_22F_Type_Pattern
class MT564_GENL_LINK_22F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_LINK_22F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 94, 1)
    _Documentation = None
MT564_GENL_LINK_22F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_GENL_LINK_22F_Type_Pattern._CF_pattern.addPattern(pattern='(:(LINK)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_GENL_LINK_22F_Type_Pattern._InitializeFacetMap(MT564_GENL_LINK_22F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_LINK_22F_Type_Pattern', MT564_GENL_LINK_22F_Type_Pattern)
_module_typeBindings.MT564_GENL_LINK_22F_Type_Pattern = MT564_GENL_LINK_22F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_GENL_LINK_13A_Type_Pattern
class MT564_GENL_LINK_13A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_LINK_13A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 107, 1)
    _Documentation = None
MT564_GENL_LINK_13A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_GENL_LINK_13A_Type_Pattern._CF_pattern.addPattern(pattern='(:(LINK)//[A-Z0-9]{3})')
MT564_GENL_LINK_13A_Type_Pattern._InitializeFacetMap(MT564_GENL_LINK_13A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_LINK_13A_Type_Pattern', MT564_GENL_LINK_13A_Type_Pattern)
_module_typeBindings.MT564_GENL_LINK_13A_Type_Pattern = MT564_GENL_LINK_13A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_GENL_LINK_13B_Type_Pattern
class MT564_GENL_LINK_13B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_LINK_13B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 120, 1)
    _Documentation = None
MT564_GENL_LINK_13B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_GENL_LINK_13B_Type_Pattern._CF_pattern.addPattern(pattern="(:(LINK)/([A-Z0-9]{1,8})?/([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,30})")
MT564_GENL_LINK_13B_Type_Pattern._InitializeFacetMap(MT564_GENL_LINK_13B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_LINK_13B_Type_Pattern', MT564_GENL_LINK_13B_Type_Pattern)
_module_typeBindings.MT564_GENL_LINK_13B_Type_Pattern = MT564_GENL_LINK_13B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_GENL_LINK_20C_Type_Pattern
class MT564_GENL_LINK_20C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_LINK_20C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 133, 1)
    _Documentation = None
MT564_GENL_LINK_20C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_GENL_LINK_20C_Type_Pattern._CF_pattern.addPattern(pattern="(:(CORP|PREV|RELA|CANC|COAF)//([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,16})")
MT564_GENL_LINK_20C_Type_Pattern._InitializeFacetMap(MT564_GENL_LINK_20C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_LINK_20C_Type_Pattern', MT564_GENL_LINK_20C_Type_Pattern)
_module_typeBindings.MT564_GENL_LINK_20C_Type_Pattern = MT564_GENL_LINK_20C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_35B_Type_Pattern
class MT564_USECU_35B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_35B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 146, 1)
    _Documentation = None
MT564_USECU_35B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_35B_Type_Pattern._CF_pattern.addPattern(pattern="((ISIN {1}[A-Z0-9]{12})?(\\n)?((([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,35}\\n?){1,4})?)")
MT564_USECU_35B_Type_Pattern._InitializeFacetMap(MT564_USECU_35B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_35B_Type_Pattern', MT564_USECU_35B_Type_Pattern)
_module_typeBindings.MT564_USECU_35B_Type_Pattern = MT564_USECU_35B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_FIA_94B_Type_Pattern
class MT564_USECU_FIA_94B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_94B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 159, 1)
    _Documentation = None
MT564_USECU_FIA_94B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_FIA_94B_Type_Pattern._CF_pattern.addPattern(pattern="(:(PLIS)/([A-Z0-9]{1,8})?/[A-Z0-9]{4}(/([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,30})?)")
MT564_USECU_FIA_94B_Type_Pattern._InitializeFacetMap(MT564_USECU_FIA_94B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_94B_Type_Pattern', MT564_USECU_FIA_94B_Type_Pattern)
_module_typeBindings.MT564_USECU_FIA_94B_Type_Pattern = MT564_USECU_FIA_94B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_FIA_22F_Type_Pattern
class MT564_USECU_FIA_22F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_22F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 172, 1)
    _Documentation = None
MT564_USECU_FIA_22F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_FIA_22F_Type_Pattern._CF_pattern.addPattern(pattern='(:(MICO)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_USECU_FIA_22F_Type_Pattern._InitializeFacetMap(MT564_USECU_FIA_22F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_22F_Type_Pattern', MT564_USECU_FIA_22F_Type_Pattern)
_module_typeBindings.MT564_USECU_FIA_22F_Type_Pattern = MT564_USECU_FIA_22F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_FIA_12A_Type_Pattern
class MT564_USECU_FIA_12A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_12A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 185, 1)
    _Documentation = None
MT564_USECU_FIA_12A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_FIA_12A_Type_Pattern._CF_pattern.addPattern(pattern="(:(CLAS)/([A-Z0-9]{1,8})?/([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,30})")
MT564_USECU_FIA_12A_Type_Pattern._InitializeFacetMap(MT564_USECU_FIA_12A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_12A_Type_Pattern', MT564_USECU_FIA_12A_Type_Pattern)
_module_typeBindings.MT564_USECU_FIA_12A_Type_Pattern = MT564_USECU_FIA_12A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_FIA_12B_Type_Pattern
class MT564_USECU_FIA_12B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_12B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 198, 1)
    _Documentation = None
MT564_USECU_FIA_12B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_FIA_12B_Type_Pattern._CF_pattern.addPattern(pattern='(:(OPST)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_USECU_FIA_12B_Type_Pattern._InitializeFacetMap(MT564_USECU_FIA_12B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_12B_Type_Pattern', MT564_USECU_FIA_12B_Type_Pattern)
_module_typeBindings.MT564_USECU_FIA_12B_Type_Pattern = MT564_USECU_FIA_12B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_FIA_12C_Type_Pattern
class MT564_USECU_FIA_12C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_12C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 211, 1)
    _Documentation = None
MT564_USECU_FIA_12C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_FIA_12C_Type_Pattern._CF_pattern.addPattern(pattern='(:(CLAS)//[A-Z0-9]{6})')
MT564_USECU_FIA_12C_Type_Pattern._InitializeFacetMap(MT564_USECU_FIA_12C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_12C_Type_Pattern', MT564_USECU_FIA_12C_Type_Pattern)
_module_typeBindings.MT564_USECU_FIA_12C_Type_Pattern = MT564_USECU_FIA_12C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_FIA_11A_Type_Pattern
class MT564_USECU_FIA_11A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_11A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 224, 1)
    _Documentation = None
MT564_USECU_FIA_11A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_FIA_11A_Type_Pattern._CF_pattern.addPattern(pattern='(:(DENO)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD))')
MT564_USECU_FIA_11A_Type_Pattern._InitializeFacetMap(MT564_USECU_FIA_11A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_11A_Type_Pattern', MT564_USECU_FIA_11A_Type_Pattern)
_module_typeBindings.MT564_USECU_FIA_11A_Type_Pattern = MT564_USECU_FIA_11A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_FIA_98A_Type_Pattern
class MT564_USECU_FIA_98A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_98A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 237, 1)
    _Documentation = None
MT564_USECU_FIA_98A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_FIA_98A_Type_Pattern._CF_pattern.addPattern(pattern='(:(COUP|EXPI|FRNR|MATU|ISSU|CALD|PUTT|DDTE|CONV)//[0-9]{8})')
MT564_USECU_FIA_98A_Type_Pattern._InitializeFacetMap(MT564_USECU_FIA_98A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_98A_Type_Pattern', MT564_USECU_FIA_98A_Type_Pattern)
_module_typeBindings.MT564_USECU_FIA_98A_Type_Pattern = MT564_USECU_FIA_98A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_FIA_92A_Type_Pattern
class MT564_USECU_FIA_92A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_92A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 250, 1)
    _Documentation = None
MT564_USECU_FIA_92A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_FIA_92A_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRFC|NWFC|INTR|NXRT|DECL)//(N)?[0-9,(?0-9)]{1,15})')
MT564_USECU_FIA_92A_Type_Pattern._InitializeFacetMap(MT564_USECU_FIA_92A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_92A_Type_Pattern', MT564_USECU_FIA_92A_Type_Pattern)
_module_typeBindings.MT564_USECU_FIA_92A_Type_Pattern = MT564_USECU_FIA_92A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_FIA_92D_Type_Pattern
class MT564_USECU_FIA_92D_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_92D_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 263, 1)
    _Documentation = None
MT564_USECU_FIA_92D_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_FIA_92D_Type_Pattern._CF_pattern.addPattern(pattern='(:(WAPA)//[0-9,(?0-9)]{1,15}/[0-9,(?0-9)]{1,15})')
MT564_USECU_FIA_92D_Type_Pattern._InitializeFacetMap(MT564_USECU_FIA_92D_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_92D_Type_Pattern', MT564_USECU_FIA_92D_Type_Pattern)
_module_typeBindings.MT564_USECU_FIA_92D_Type_Pattern = MT564_USECU_FIA_92D_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_FIA_92K_Type_Pattern
class MT564_USECU_FIA_92K_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_92K_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 276, 1)
    _Documentation = None
MT564_USECU_FIA_92K_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_FIA_92K_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRFC|NWFC|INTR|NXRT|DECL)//(UKWN))')
MT564_USECU_FIA_92K_Type_Pattern._InitializeFacetMap(MT564_USECU_FIA_92K_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_92K_Type_Pattern', MT564_USECU_FIA_92K_Type_Pattern)
_module_typeBindings.MT564_USECU_FIA_92K_Type_Pattern = MT564_USECU_FIA_92K_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_FIA_36B_Type_Pattern
class MT564_USECU_FIA_36B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_36B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 289, 1)
    _Documentation = None
MT564_USECU_FIA_36B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_FIA_36B_Type_Pattern._CF_pattern.addPattern(pattern='(:(MINO|SIZE)//(AMOR|FAMT|UNIT)/[0-9,(?0-9)]{1,15})')
MT564_USECU_FIA_36B_Type_Pattern._InitializeFacetMap(MT564_USECU_FIA_36B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_36B_Type_Pattern', MT564_USECU_FIA_36B_Type_Pattern)
_module_typeBindings.MT564_USECU_FIA_36B_Type_Pattern = MT564_USECU_FIA_36B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_ACCTINFO_95P_Type_Pattern
class MT564_USECU_ACCTINFO_95P_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_95P_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 302, 1)
    _Documentation = None
MT564_USECU_ACCTINFO_95P_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_ACCTINFO_95P_Type_Pattern._CF_pattern.addPattern(pattern='(:(ACOW)//[A-Z]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3})?)')
MT564_USECU_ACCTINFO_95P_Type_Pattern._InitializeFacetMap(MT564_USECU_ACCTINFO_95P_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_95P_Type_Pattern', MT564_USECU_ACCTINFO_95P_Type_Pattern)
_module_typeBindings.MT564_USECU_ACCTINFO_95P_Type_Pattern = MT564_USECU_ACCTINFO_95P_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_ACCTINFO_95R_Type_Pattern
class MT564_USECU_ACCTINFO_95R_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_95R_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 315, 1)
    _Documentation = None
MT564_USECU_ACCTINFO_95R_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_ACCTINFO_95R_Type_Pattern._CF_pattern.addPattern(pattern="(:(ACOW)/[A-Z0-9]{1,8}/([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,34})")
MT564_USECU_ACCTINFO_95R_Type_Pattern._InitializeFacetMap(MT564_USECU_ACCTINFO_95R_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_95R_Type_Pattern', MT564_USECU_ACCTINFO_95R_Type_Pattern)
_module_typeBindings.MT564_USECU_ACCTINFO_95R_Type_Pattern = MT564_USECU_ACCTINFO_95R_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_ACCTINFO_97A_Type_Pattern
class MT564_USECU_ACCTINFO_97A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_97A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 328, 1)
    _Documentation = None
MT564_USECU_ACCTINFO_97A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_ACCTINFO_97A_Type_Pattern._CF_pattern.addPattern(pattern="(:(SAFE)//([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,35})")
MT564_USECU_ACCTINFO_97A_Type_Pattern._InitializeFacetMap(MT564_USECU_ACCTINFO_97A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_97A_Type_Pattern', MT564_USECU_ACCTINFO_97A_Type_Pattern)
_module_typeBindings.MT564_USECU_ACCTINFO_97A_Type_Pattern = MT564_USECU_ACCTINFO_97A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_ACCTINFO_97C_Type_Pattern
class MT564_USECU_ACCTINFO_97C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_97C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 341, 1)
    _Documentation = None
MT564_USECU_ACCTINFO_97C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_ACCTINFO_97C_Type_Pattern._CF_pattern.addPattern(pattern='(:(SAFE)//(GENR))')
MT564_USECU_ACCTINFO_97C_Type_Pattern._InitializeFacetMap(MT564_USECU_ACCTINFO_97C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_97C_Type_Pattern', MT564_USECU_ACCTINFO_97C_Type_Pattern)
_module_typeBindings.MT564_USECU_ACCTINFO_97C_Type_Pattern = MT564_USECU_ACCTINFO_97C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_ACCTINFO_94B_Type_Pattern
class MT564_USECU_ACCTINFO_94B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_94B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 354, 1)
    _Documentation = None
MT564_USECU_ACCTINFO_94B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_ACCTINFO_94B_Type_Pattern._CF_pattern.addPattern(pattern="(:(SAFE)/([A-Z0-9]{1,8})?/[A-Z0-9]{4}(/([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,30})?)")
MT564_USECU_ACCTINFO_94B_Type_Pattern._InitializeFacetMap(MT564_USECU_ACCTINFO_94B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_94B_Type_Pattern', MT564_USECU_ACCTINFO_94B_Type_Pattern)
_module_typeBindings.MT564_USECU_ACCTINFO_94B_Type_Pattern = MT564_USECU_ACCTINFO_94B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_ACCTINFO_94C_Type_Pattern
class MT564_USECU_ACCTINFO_94C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_94C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 367, 1)
    _Documentation = None
MT564_USECU_ACCTINFO_94C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_ACCTINFO_94C_Type_Pattern._CF_pattern.addPattern(pattern='(:(SAFE)//[A-Z]{2})')
MT564_USECU_ACCTINFO_94C_Type_Pattern._InitializeFacetMap(MT564_USECU_ACCTINFO_94C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_94C_Type_Pattern', MT564_USECU_ACCTINFO_94C_Type_Pattern)
_module_typeBindings.MT564_USECU_ACCTINFO_94C_Type_Pattern = MT564_USECU_ACCTINFO_94C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_ACCTINFO_94F_Type_Pattern
class MT564_USECU_ACCTINFO_94F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_94F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 380, 1)
    _Documentation = None
MT564_USECU_ACCTINFO_94F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_ACCTINFO_94F_Type_Pattern._CF_pattern.addPattern(pattern='(:(SAFE)//(CUST|ICSD|NCSD|SHHE)/[A-Z]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3})?)')
MT564_USECU_ACCTINFO_94F_Type_Pattern._InitializeFacetMap(MT564_USECU_ACCTINFO_94F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_94F_Type_Pattern', MT564_USECU_ACCTINFO_94F_Type_Pattern)
_module_typeBindings.MT564_USECU_ACCTINFO_94F_Type_Pattern = MT564_USECU_ACCTINFO_94F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_ACCTINFO_93B_Type_Pattern
class MT564_USECU_ACCTINFO_93B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_93B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 393, 1)
    _Documentation = None
MT564_USECU_ACCTINFO_93B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_ACCTINFO_93B_Type_Pattern._CF_pattern.addPattern(pattern='(:(ELIG|BLOK|BORR|COLI|COLO|LOAN|PEND|PENR|REGO|SETT|SPOS|TRAD|TRAN|NOMI|UNBA|INBA|OBAL|AFFB|UNAF)/([A-Z0-9]{1,8})?/[A-Z0-9]{4}/(N)?[0-9,(?0-9)]{1,15})')
MT564_USECU_ACCTINFO_93B_Type_Pattern._InitializeFacetMap(MT564_USECU_ACCTINFO_93B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_93B_Type_Pattern', MT564_USECU_ACCTINFO_93B_Type_Pattern)
_module_typeBindings.MT564_USECU_ACCTINFO_93B_Type_Pattern = MT564_USECU_ACCTINFO_93B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_USECU_ACCTINFO_93C_Type_Pattern
class MT564_USECU_ACCTINFO_93C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_93C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 406, 1)
    _Documentation = None
MT564_USECU_ACCTINFO_93C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_USECU_ACCTINFO_93C_Type_Pattern._CF_pattern.addPattern(pattern='(:(ELIG|BLOK|BORR|COLI|COLO|LOAN|PEND|PENR|REGO|SETT|SPOS|TRAD|TRAN|NOMI|UNBA|INBA|OBAL|AFFB|UNAF)//(AMOR|FAMT|UNIT)/[A-Z0-9]{4}/(N)?[0-9,(?0-9)]{1,15})')
MT564_USECU_ACCTINFO_93C_Type_Pattern._InitializeFacetMap(MT564_USECU_ACCTINFO_93C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_93C_Type_Pattern', MT564_USECU_ACCTINFO_93C_Type_Pattern)
_module_typeBindings.MT564_USECU_ACCTINFO_93C_Type_Pattern = MT564_USECU_ACCTINFO_93C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_35B_Type_Pattern
class MT564_INTSEC_35B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_35B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 419, 1)
    _Documentation = None
MT564_INTSEC_35B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_35B_Type_Pattern._CF_pattern.addPattern(pattern="((ISIN {1}[A-Z0-9]{12})?(\\n)?((([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,35}\\n?){1,4})?)")
MT564_INTSEC_35B_Type_Pattern._InitializeFacetMap(MT564_INTSEC_35B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_35B_Type_Pattern', MT564_INTSEC_35B_Type_Pattern)
_module_typeBindings.MT564_INTSEC_35B_Type_Pattern = MT564_INTSEC_35B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_36B_Type_Pattern
class MT564_INTSEC_36B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_36B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 432, 1)
    _Documentation = None
MT564_INTSEC_36B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_36B_Type_Pattern._CF_pattern.addPattern(pattern='(:(QINT)//(UNIT)/[0-9,(?0-9)]{1,15})')
MT564_INTSEC_36B_Type_Pattern._InitializeFacetMap(MT564_INTSEC_36B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_36B_Type_Pattern', MT564_INTSEC_36B_Type_Pattern)
_module_typeBindings.MT564_INTSEC_36B_Type_Pattern = MT564_INTSEC_36B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_36E_Type_Pattern
class MT564_INTSEC_36E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_36E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 445, 1)
    _Documentation = None
MT564_INTSEC_36E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_36E_Type_Pattern._CF_pattern.addPattern(pattern='(:(QINT)//(UNIT)/(N)?[0-9,(?0-9)]{1,15})')
MT564_INTSEC_36E_Type_Pattern._InitializeFacetMap(MT564_INTSEC_36E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_36E_Type_Pattern', MT564_INTSEC_36E_Type_Pattern)
_module_typeBindings.MT564_INTSEC_36E_Type_Pattern = MT564_INTSEC_36E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_93B_Type_Pattern
class MT564_INTSEC_93B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_93B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 458, 1)
    _Documentation = None
MT564_INTSEC_93B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_93B_Type_Pattern._CF_pattern.addPattern(pattern='(:(UNBA|INBA)/([A-Z0-9]{1,8})?/[A-Z0-9]{4}/(N)?[0-9,(?0-9)]{1,15})')
MT564_INTSEC_93B_Type_Pattern._InitializeFacetMap(MT564_INTSEC_93B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_93B_Type_Pattern', MT564_INTSEC_93B_Type_Pattern)
_module_typeBindings.MT564_INTSEC_93B_Type_Pattern = MT564_INTSEC_93B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_93C_Type_Pattern
class MT564_INTSEC_93C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_93C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 471, 1)
    _Documentation = None
MT564_INTSEC_93C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_93C_Type_Pattern._CF_pattern.addPattern(pattern='(:(UNBA|INBA)//(AMOR|FAMT|UNIT)/(ELIG|NELG)/(N)?[0-9,(?0-9)]{1,15})')
MT564_INTSEC_93C_Type_Pattern._InitializeFacetMap(MT564_INTSEC_93C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_93C_Type_Pattern', MT564_INTSEC_93C_Type_Pattern)
_module_typeBindings.MT564_INTSEC_93C_Type_Pattern = MT564_INTSEC_93C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_22F-4!c_Type_Pattern
class MT564_INTSEC_22F_4c_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_22F-4!c_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 484, 1)
    _Documentation = None
MT564_INTSEC_22F_4c_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_22F_4c_Type_Pattern._CF_pattern.addPattern(pattern='(:(DISF|SELL)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_INTSEC_22F_4c_Type_Pattern._InitializeFacetMap(MT564_INTSEC_22F_4c_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_22F-4!c_Type_Pattern', MT564_INTSEC_22F_4c_Type_Pattern)
_module_typeBindings.MT564_INTSEC_22F_4c_Type_Pattern = MT564_INTSEC_22F_4c_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_92D_Type_Pattern
class MT564_INTSEC_92D_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_92D_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 497, 1)
    _Documentation = None
MT564_INTSEC_92D_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_92D_Type_Pattern._CF_pattern.addPattern(pattern='(:(RTUN)//[0-9,(?0-9)]{1,15}/[0-9,(?0-9)]{1,15})')
MT564_INTSEC_92D_Type_Pattern._InitializeFacetMap(MT564_INTSEC_92D_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_92D_Type_Pattern', MT564_INTSEC_92D_Type_Pattern)
_module_typeBindings.MT564_INTSEC_92D_Type_Pattern = MT564_INTSEC_92D_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_90B_Type_Pattern
class MT564_INTSEC_90B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_90B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 510, 1)
    _Documentation = None
MT564_INTSEC_90B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_90B_Type_Pattern._CF_pattern.addPattern(pattern='(:(MRKT)//(ACTU)/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_INTSEC_90B_Type_Pattern._InitializeFacetMap(MT564_INTSEC_90B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_90B_Type_Pattern', MT564_INTSEC_90B_Type_Pattern)
_module_typeBindings.MT564_INTSEC_90B_Type_Pattern = MT564_INTSEC_90B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_98A_Type_Pattern
class MT564_INTSEC_98A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_98A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 523, 1)
    _Documentation = None
MT564_INTSEC_98A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_98A_Type_Pattern._CF_pattern.addPattern(pattern='(:(EXPI|POST)//[0-9]{8})')
MT564_INTSEC_98A_Type_Pattern._InitializeFacetMap(MT564_INTSEC_98A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_98A_Type_Pattern', MT564_INTSEC_98A_Type_Pattern)
_module_typeBindings.MT564_INTSEC_98A_Type_Pattern = MT564_INTSEC_98A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_98B_Type_Pattern
class MT564_INTSEC_98B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_98B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 536, 1)
    _Documentation = None
MT564_INTSEC_98B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_98B_Type_Pattern._CF_pattern.addPattern(pattern='(:(EXPI|POST)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_INTSEC_98B_Type_Pattern._InitializeFacetMap(MT564_INTSEC_98B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_98B_Type_Pattern', MT564_INTSEC_98B_Type_Pattern)
_module_typeBindings.MT564_INTSEC_98B_Type_Pattern = MT564_INTSEC_98B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_69A_Type_Pattern
class MT564_INTSEC_69A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_69A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 549, 1)
    _Documentation = None
MT564_INTSEC_69A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_69A_Type_Pattern._CF_pattern.addPattern(pattern='(:(TRDP)//[0-9]{8}/[0-9]{8})')
MT564_INTSEC_69A_Type_Pattern._InitializeFacetMap(MT564_INTSEC_69A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_69A_Type_Pattern', MT564_INTSEC_69A_Type_Pattern)
_module_typeBindings.MT564_INTSEC_69A_Type_Pattern = MT564_INTSEC_69A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_69B_Type_Pattern
class MT564_INTSEC_69B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_69B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 562, 1)
    _Documentation = None
MT564_INTSEC_69B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_69B_Type_Pattern._CF_pattern.addPattern(pattern='(:(TRDP)//[0-9]{8}[0-9]{6}/[0-9]{8}[0-9]{6})')
MT564_INTSEC_69B_Type_Pattern._InitializeFacetMap(MT564_INTSEC_69B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_69B_Type_Pattern', MT564_INTSEC_69B_Type_Pattern)
_module_typeBindings.MT564_INTSEC_69B_Type_Pattern = MT564_INTSEC_69B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_69C_Type_Pattern
class MT564_INTSEC_69C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_69C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 575, 1)
    _Documentation = None
MT564_INTSEC_69C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_69C_Type_Pattern._CF_pattern.addPattern(pattern='(:(TRDP)//[0-9]{8}/(ONGO|UKWN))')
MT564_INTSEC_69C_Type_Pattern._InitializeFacetMap(MT564_INTSEC_69C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_69C_Type_Pattern', MT564_INTSEC_69C_Type_Pattern)
_module_typeBindings.MT564_INTSEC_69C_Type_Pattern = MT564_INTSEC_69C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_69D_Type_Pattern
class MT564_INTSEC_69D_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_69D_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 588, 1)
    _Documentation = None
MT564_INTSEC_69D_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_69D_Type_Pattern._CF_pattern.addPattern(pattern='(:(TRDP)//[0-9]{8}[0-9]{6}/(ONGO|UKWN))')
MT564_INTSEC_69D_Type_Pattern._InitializeFacetMap(MT564_INTSEC_69D_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_69D_Type_Pattern', MT564_INTSEC_69D_Type_Pattern)
_module_typeBindings.MT564_INTSEC_69D_Type_Pattern = MT564_INTSEC_69D_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_69E_Type_Pattern
class MT564_INTSEC_69E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_69E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 601, 1)
    _Documentation = None
MT564_INTSEC_69E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_69E_Type_Pattern._CF_pattern.addPattern(pattern='(:(TRDP)//(ONGO|UKWN)/[0-9]{8})')
MT564_INTSEC_69E_Type_Pattern._InitializeFacetMap(MT564_INTSEC_69E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_69E_Type_Pattern', MT564_INTSEC_69E_Type_Pattern)
_module_typeBindings.MT564_INTSEC_69E_Type_Pattern = MT564_INTSEC_69E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_INTSEC_69F_Type_Pattern
class MT564_INTSEC_69F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_69F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 614, 1)
    _Documentation = None
MT564_INTSEC_69F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_INTSEC_69F_Type_Pattern._CF_pattern.addPattern(pattern='(:(TRDP)//(ONGO|UKWN)/[0-9]{8}[0-9]{6})')
MT564_INTSEC_69F_Type_Pattern._InitializeFacetMap(MT564_INTSEC_69F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_69F_Type_Pattern', MT564_INTSEC_69F_Type_Pattern)
_module_typeBindings.MT564_INTSEC_69F_Type_Pattern = MT564_INTSEC_69F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_98A_Type_Pattern
class MT564_CADETL_98A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_98A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 627, 1)
    _Documentation = None
MT564_CADETL_98A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_98A_Type_Pattern._CF_pattern.addPattern(pattern='(:(ANOU|CERT|XDTE|EFFD|FDAT|PROD|REGI|RESU|SPLT|MEET|RDTE|TAXB|TSDT|LOTO|UNCO|WUCO|MET2|MET3|EQUL|ECDT|IFIX|MFIX|COAP|MATU|OAPD|SXDT|GUPA|ECPD|LAPD|MCTD|PAYD|TPDT|ETPD|PLDT|FILL|HEAR|ECRD)//[0-9]{8})')
MT564_CADETL_98A_Type_Pattern._InitializeFacetMap(MT564_CADETL_98A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_98A_Type_Pattern', MT564_CADETL_98A_Type_Pattern)
_module_typeBindings.MT564_CADETL_98A_Type_Pattern = MT564_CADETL_98A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_98B_Type_Pattern
class MT564_CADETL_98B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_98B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 640, 1)
    _Documentation = None
MT564_CADETL_98B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_98B_Type_Pattern._CF_pattern.addPattern(pattern='(:(ANOU|CERT|XDTE|EFFD|FDAT|PROD|REGI|RESU|SPLT|MEET|RDTE|TAXB|TSDT|LOTO|UNCO|WUCO|MET2|MET3|EQUL|ECDT|IFIX|MFIX|COAP|MATU|OAPD|SXDT|GUPA|ECPD|LAPD|MCTD|PAYD|TPDT|ETPD|PLDT|FILL|HEAR|ECRD)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_CADETL_98B_Type_Pattern._InitializeFacetMap(MT564_CADETL_98B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_98B_Type_Pattern', MT564_CADETL_98B_Type_Pattern)
_module_typeBindings.MT564_CADETL_98B_Type_Pattern = MT564_CADETL_98B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_98C_Type_Pattern
class MT564_CADETL_98C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_98C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 653, 1)
    _Documentation = None
MT564_CADETL_98C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_98C_Type_Pattern._CF_pattern.addPattern(pattern='(:(ANOU|CERT|XDTE|EFFD|FDAT|PROD|REGI|RESU|SPLT|MEET|RDTE|TAXB|TSDT|LOTO|UNCO|WUCO|MET2|MET3|EQUL|ECDT|IFIX|MFIX|COAP|MATU|OAPD|SXDT|GUPA|ECPD|LAPD|MCTD|PAYD|TPDT|ETPD|PLDT|ECRD)//[0-9]{8}[0-9]{6})')
MT564_CADETL_98C_Type_Pattern._InitializeFacetMap(MT564_CADETL_98C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_98C_Type_Pattern', MT564_CADETL_98C_Type_Pattern)
_module_typeBindings.MT564_CADETL_98C_Type_Pattern = MT564_CADETL_98C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_98E_Type_Pattern
class MT564_CADETL_98E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_98E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 666, 1)
    _Documentation = None
MT564_CADETL_98E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_98E_Type_Pattern._CF_pattern.addPattern(pattern='(:(MEET|MET2|MET3|MCTD|PLDT|)//[0-9]{8}[0-9]{6}(,[0-9]{1,3})?(/(N)?[0-9]{2}([0-9]{2})?)?)')
MT564_CADETL_98E_Type_Pattern._InitializeFacetMap(MT564_CADETL_98E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_98E_Type_Pattern', MT564_CADETL_98E_Type_Pattern)
_module_typeBindings.MT564_CADETL_98E_Type_Pattern = MT564_CADETL_98E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_69A_Type_Pattern
class MT564_CADETL_69A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_69A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 679, 1)
    _Documentation = None
MT564_CADETL_69A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_69A_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRIC|INPE|CSPD|BLOK|CLCP|DSWN|DSDE|DSBT|DSDA|DSWA|DSPL|DSSE|DSWS|BOCL|CODS|SPLP)//[0-9]{8}/[0-9]{8})')
MT564_CADETL_69A_Type_Pattern._InitializeFacetMap(MT564_CADETL_69A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_69A_Type_Pattern', MT564_CADETL_69A_Type_Pattern)
_module_typeBindings.MT564_CADETL_69A_Type_Pattern = MT564_CADETL_69A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_69B_Type_Pattern
class MT564_CADETL_69B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_69B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 692, 1)
    _Documentation = None
MT564_CADETL_69B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_69B_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRIC|INPE|CSPD|BLOK|CLCP|DSWN|DSDE|DSBT|DSDA|DSWA|DSPL|DSSE|DSWS|BOCL|CODS|SPLP)//[0-9]{8}[0-9]{6}/[0-9]{8}[0-9]{6})')
MT564_CADETL_69B_Type_Pattern._InitializeFacetMap(MT564_CADETL_69B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_69B_Type_Pattern', MT564_CADETL_69B_Type_Pattern)
_module_typeBindings.MT564_CADETL_69B_Type_Pattern = MT564_CADETL_69B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_69C_Type_Pattern
class MT564_CADETL_69C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_69C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 705, 1)
    _Documentation = None
MT564_CADETL_69C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_69C_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRIC|INPE|CSPD|BLOK|CLCP|DSWN|DSDE|DSBT|DSDA|DSWA|DSPL|DSSE|DSWS|BOCL|CODS|SPLP)//[0-9]{8}/(ONGO|UKWN))')
MT564_CADETL_69C_Type_Pattern._InitializeFacetMap(MT564_CADETL_69C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_69C_Type_Pattern', MT564_CADETL_69C_Type_Pattern)
_module_typeBindings.MT564_CADETL_69C_Type_Pattern = MT564_CADETL_69C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_69D_Type_Pattern
class MT564_CADETL_69D_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_69D_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 718, 1)
    _Documentation = None
MT564_CADETL_69D_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_69D_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRIC|INPE|CSPD|BLOK|CLCP|DSWN|DSDE|DSBT|DSDA|DSWA|DSPL|DSSE|DSWS|BOCL|CODS|SPLP)//[0-9]{8}[0-9]{6}/(ONGO|UKWN))')
MT564_CADETL_69D_Type_Pattern._InitializeFacetMap(MT564_CADETL_69D_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_69D_Type_Pattern', MT564_CADETL_69D_Type_Pattern)
_module_typeBindings.MT564_CADETL_69D_Type_Pattern = MT564_CADETL_69D_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_69E_Type_Pattern
class MT564_CADETL_69E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_69E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 731, 1)
    _Documentation = None
MT564_CADETL_69E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_69E_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRIC|INPE|CSPD|BLOK|CLCP|DSWN|DSDE|DSBT|DSDA|DSWA|DSPL|DSSE|DSWS|BOCL|CODS|SPLP)//(ONGO|UKWN)/[0-9]{8})')
MT564_CADETL_69E_Type_Pattern._InitializeFacetMap(MT564_CADETL_69E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_69E_Type_Pattern', MT564_CADETL_69E_Type_Pattern)
_module_typeBindings.MT564_CADETL_69E_Type_Pattern = MT564_CADETL_69E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_69F_Type_Pattern
class MT564_CADETL_69F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_69F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 744, 1)
    _Documentation = None
MT564_CADETL_69F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_69F_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRIC|INPE|CSPD|BLOK|CLCP|DSWN|DSDE|DSBT|DSDA|DSWA|DSPL|DSSE|DSWS|BOCL|CODS|SPLP)//(ONGO|UKWN)/[0-9]{8}[0-9]{6})')
MT564_CADETL_69F_Type_Pattern._InitializeFacetMap(MT564_CADETL_69F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_69F_Type_Pattern', MT564_CADETL_69F_Type_Pattern)
_module_typeBindings.MT564_CADETL_69F_Type_Pattern = MT564_CADETL_69F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_69J_Type_Pattern
class MT564_CADETL_69J_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_69J_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 757, 1)
    _Documentation = None
MT564_CADETL_69J_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_69J_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRIC|INPE|CSPD|BLOK|CLCP|DSWN|DSDE|DSBT|DSDA|DSWA|DSPL|DSSE|DSWS|BOCL|CODS|SPLP)//(ONGO|UKWN))')
MT564_CADETL_69J_Type_Pattern._InitializeFacetMap(MT564_CADETL_69J_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_69J_Type_Pattern', MT564_CADETL_69J_Type_Pattern)
_module_typeBindings.MT564_CADETL_69J_Type_Pattern = MT564_CADETL_69J_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_99A_Type_Pattern
class MT564_CADETL_99A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_99A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 770, 1)
    _Documentation = None
MT564_CADETL_99A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_99A_Type_Pattern._CF_pattern.addPattern(pattern='(:(DAAC)//(N)?[0-9]{3})')
MT564_CADETL_99A_Type_Pattern._InitializeFacetMap(MT564_CADETL_99A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_99A_Type_Pattern', MT564_CADETL_99A_Type_Pattern)
_module_typeBindings.MT564_CADETL_99A_Type_Pattern = MT564_CADETL_99A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_92A_Type_Pattern
class MT564_CADETL_92A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_92A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 783, 1)
    _Documentation = None
MT564_CADETL_92A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_92A_Type_Pattern._CF_pattern.addPattern(pattern='(:(RDIS|INTR|BIDI|NWFC|PTSC|PRFC|RINR|RSPR|SHRT|RLOS|DEVI)//(N)?[0-9,(?0-9)]{1,15})')
MT564_CADETL_92A_Type_Pattern._InitializeFacetMap(MT564_CADETL_92A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_92A_Type_Pattern', MT564_CADETL_92A_Type_Pattern)
_module_typeBindings.MT564_CADETL_92A_Type_Pattern = MT564_CADETL_92A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_92F_Type_Pattern
class MT564_CADETL_92F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_92F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 796, 1)
    _Documentation = None
MT564_CADETL_92F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_92F_Type_Pattern._CF_pattern.addPattern(pattern='(:(INTR|BIDI|SHRT|RLOS|DEVI)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_CADETL_92F_Type_Pattern._InitializeFacetMap(MT564_CADETL_92F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_92F_Type_Pattern', MT564_CADETL_92F_Type_Pattern)
_module_typeBindings.MT564_CADETL_92F_Type_Pattern = MT564_CADETL_92F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_92K_Type_Pattern
class MT564_CADETL_92K_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_92K_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 809, 1)
    _Documentation = None
MT564_CADETL_92K_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_92K_Type_Pattern._CF_pattern.addPattern(pattern='(:(RDIS|INTR|BIDI|NWFC|PTSC|PRFC|RINR|RSPR)//[A-Z0-9]{4})')
MT564_CADETL_92K_Type_Pattern._InitializeFacetMap(MT564_CADETL_92K_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_92K_Type_Pattern', MT564_CADETL_92K_Type_Pattern)
_module_typeBindings.MT564_CADETL_92K_Type_Pattern = MT564_CADETL_92K_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_92P_Type_Pattern
class MT564_CADETL_92P_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_92P_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 822, 1)
    _Documentation = None
MT564_CADETL_92P_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_92P_Type_Pattern._CF_pattern.addPattern(pattern='(:(BIDI)//[0-9,(?0-9)]{1,15})')
MT564_CADETL_92P_Type_Pattern._InitializeFacetMap(MT564_CADETL_92P_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_92P_Type_Pattern', MT564_CADETL_92P_Type_Pattern)
_module_typeBindings.MT564_CADETL_92P_Type_Pattern = MT564_CADETL_92P_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_90A_Type_Pattern
class MT564_CADETL_90A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_90A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 835, 1)
    _Documentation = None
MT564_CADETL_90A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_90A_Type_Pattern._CF_pattern.addPattern(pattern='(:(MAXP|MINP)//(DISC|PRCT|PREM|YIEL)/(N)?[0-9,(?0-9)]{1,15})')
MT564_CADETL_90A_Type_Pattern._InitializeFacetMap(MT564_CADETL_90A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_90A_Type_Pattern', MT564_CADETL_90A_Type_Pattern)
_module_typeBindings.MT564_CADETL_90A_Type_Pattern = MT564_CADETL_90A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_90B_Type_Pattern
class MT564_CADETL_90B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_90B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 848, 1)
    _Documentation = None
MT564_CADETL_90B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_90B_Type_Pattern._CF_pattern.addPattern(pattern='(:(MAXP|MINP)//(ACTU|DISC|PLOT|PREM)/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_CADETL_90B_Type_Pattern._InitializeFacetMap(MT564_CADETL_90B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_90B_Type_Pattern', MT564_CADETL_90B_Type_Pattern)
_module_typeBindings.MT564_CADETL_90B_Type_Pattern = MT564_CADETL_90B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_90E_Type_Pattern
class MT564_CADETL_90E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_90E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 861, 1)
    _Documentation = None
MT564_CADETL_90E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_90E_Type_Pattern._CF_pattern.addPattern(pattern='(:(MAXP|MINP)//(UKWN))')
MT564_CADETL_90E_Type_Pattern._InitializeFacetMap(MT564_CADETL_90E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_90E_Type_Pattern', MT564_CADETL_90E_Type_Pattern)
_module_typeBindings.MT564_CADETL_90E_Type_Pattern = MT564_CADETL_90E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_90L_Type_Pattern
class MT564_CADETL_90L_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_90L_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 874, 1)
    _Documentation = None
MT564_CADETL_90L_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_90L_Type_Pattern._CF_pattern.addPattern(pattern='(:(MAXP|MINP)//(N)?[0-9,(?0-9)]{1,15})')
MT564_CADETL_90L_Type_Pattern._InitializeFacetMap(MT564_CADETL_90L_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_90L_Type_Pattern', MT564_CADETL_90L_Type_Pattern)
_module_typeBindings.MT564_CADETL_90L_Type_Pattern = MT564_CADETL_90L_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_36B_Type_Pattern
class MT564_CADETL_36B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_36B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 887, 1)
    _Documentation = None
MT564_CADETL_36B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_36B_Type_Pattern._CF_pattern.addPattern(pattern='(:(MQSO|QTSO|NBLT|NEWD|BASE|INCR)//(AMOR|FAMT|UNIT)/[0-9,(?0-9)]{1,15})')
MT564_CADETL_36B_Type_Pattern._InitializeFacetMap(MT564_CADETL_36B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_36B_Type_Pattern', MT564_CADETL_36B_Type_Pattern)
_module_typeBindings.MT564_CADETL_36B_Type_Pattern = MT564_CADETL_36B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_36C_Type_Pattern
class MT564_CADETL_36C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_36C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 900, 1)
    _Documentation = None
MT564_CADETL_36C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_36C_Type_Pattern._CF_pattern.addPattern(pattern='(:(MQSO|QTSO|NBLT|NEWD|BASE|INCR)//[A-Z0-9]{4})')
MT564_CADETL_36C_Type_Pattern._InitializeFacetMap(MT564_CADETL_36C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_36C_Type_Pattern', MT564_CADETL_36C_Type_Pattern)
_module_typeBindings.MT564_CADETL_36C_Type_Pattern = MT564_CADETL_36C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_13A_Type_Pattern
class MT564_CADETL_13A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_13A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 913, 1)
    _Documentation = None
MT564_CADETL_13A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_13A_Type_Pattern._CF_pattern.addPattern(pattern='(:(COUP)//[A-Z0-9]{3})')
MT564_CADETL_13A_Type_Pattern._InitializeFacetMap(MT564_CADETL_13A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_13A_Type_Pattern', MT564_CADETL_13A_Type_Pattern)
_module_typeBindings.MT564_CADETL_13A_Type_Pattern = MT564_CADETL_13A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_13B_Type_Pattern
class MT564_CADETL_13B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_13B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 926, 1)
    _Documentation = None
MT564_CADETL_13B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_13B_Type_Pattern._CF_pattern.addPattern(pattern="(:(COUP)/([A-Z0-9]{1,8})?/([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,30})")
MT564_CADETL_13B_Type_Pattern._InitializeFacetMap(MT564_CADETL_13B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_13B_Type_Pattern', MT564_CADETL_13B_Type_Pattern)
_module_typeBindings.MT564_CADETL_13B_Type_Pattern = MT564_CADETL_13B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_17B_Type_Pattern
class MT564_CADETL_17B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_17B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 939, 1)
    _Documentation = None
MT564_CADETL_17B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_17B_Type_Pattern._CF_pattern.addPattern(pattern='([A-Z0-9]{4}//[A-Z]{1})')
MT564_CADETL_17B_Type_Pattern._InitializeFacetMap(MT564_CADETL_17B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_17B_Type_Pattern', MT564_CADETL_17B_Type_Pattern)
_module_typeBindings.MT564_CADETL_17B_Type_Pattern = MT564_CADETL_17B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_22F_Type_Pattern
class MT564_CADETL_22F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_22F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 952, 1)
    _Documentation = None
MT564_CADETL_22F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_22F_Type_Pattern._CF_pattern.addPattern(pattern='(:(DIVI|CONV|DITY|OFFE|SELL|ESTA|ADDB|CHAN|RHDI|ECIO|TDTA|ELCT|LOTO|CEFI|CONS|INFO)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_CADETL_22F_Type_Pattern._InitializeFacetMap(MT564_CADETL_22F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_22F_Type_Pattern', MT564_CADETL_22F_Type_Pattern)
_module_typeBindings.MT564_CADETL_22F_Type_Pattern = MT564_CADETL_22F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_94E_Type_Pattern
class MT564_CADETL_94E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_94E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 965, 1)
    _Documentation = None
MT564_CADETL_94E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_94E_Type_Pattern._CF_pattern.addPattern(pattern="([A-Z0-9]{4}//(([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,35}\\n?){1,10})")
MT564_CADETL_94E_Type_Pattern._InitializeFacetMap(MT564_CADETL_94E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_94E_Type_Pattern', MT564_CADETL_94E_Type_Pattern)
_module_typeBindings.MT564_CADETL_94E_Type_Pattern = MT564_CADETL_94E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_70E_Type_Pattern
class MT564_CADETL_70E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_70E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 978, 1)
    _Documentation = None
MT564_CADETL_70E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_70E_Type_Pattern._CF_pattern.addPattern(pattern="(:(OFFO|WEBB|NAME)//(([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,35}\\n?){1,10})")
MT564_CADETL_70E_Type_Pattern._InitializeFacetMap(MT564_CADETL_70E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_70E_Type_Pattern', MT564_CADETL_70E_Type_Pattern)
_module_typeBindings.MT564_CADETL_70E_Type_Pattern = MT564_CADETL_70E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CADETL_70G_Type_Pattern
class MT564_CADETL_70G_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_70G_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 991, 1)
    _Documentation = None
MT564_CADETL_70G_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CADETL_70G_Type_Pattern._CF_pattern.addPattern(pattern='(:(WEBB)//(([a-zA-Z0-9]|\\.|,|-|\\(|\\)|/|=|\'|\\+|:|\\?|!|"|%|&|\\*|<|>|;|\\{|@|#|_|\\n|\\s){1,35}\\n?){1,10})')
MT564_CADETL_70G_Type_Pattern._InitializeFacetMap(MT564_CADETL_70G_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_70G_Type_Pattern', MT564_CADETL_70G_Type_Pattern)
_module_typeBindings.MT564_CADETL_70G_Type_Pattern = MT564_CADETL_70G_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_13A_Type_Pattern
class MT564_CAOPTN_13A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_13A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1004, 1)
    _Documentation = None
MT564_CAOPTN_13A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_13A_Type_Pattern._CF_pattern.addPattern(pattern='(:(CAON)//[A-Z0-9]{3})')
MT564_CAOPTN_13A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_13A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_13A_Type_Pattern', MT564_CAOPTN_13A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_13A_Type_Pattern = MT564_CAOPTN_13A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_22F_Type_Pattern
class MT564_CAOPTN_22F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_22F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1017, 1)
    _Documentation = None
MT564_CAOPTN_22F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_22F_Type_Pattern._CF_pattern.addPattern(pattern='(:(CAOP|DISF|OFFE|OPTF|OSTA|CETI)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_CAOPTN_22F_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_22F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_22F_Type_Pattern', MT564_CAOPTN_22F_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_22F_Type_Pattern = MT564_CAOPTN_22F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_94C_Type_Pattern
class MT564_CAOPTN_94C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_94C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1030, 1)
    _Documentation = None
MT564_CAOPTN_94C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_94C_Type_Pattern._CF_pattern.addPattern(pattern='(:(NDOM|DOMI)//[A-Z]{2})')
MT564_CAOPTN_94C_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_94C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_94C_Type_Pattern', MT564_CAOPTN_94C_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_94C_Type_Pattern = MT564_CAOPTN_94C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_11A_Type_Pattern
class MT564_CAOPTN_11A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_11A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1043, 1)
    _Documentation = None
MT564_CAOPTN_11A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_11A_Type_Pattern._CF_pattern.addPattern(pattern='(:(OPTN)//[A-Z]{3})')
MT564_CAOPTN_11A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_11A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_11A_Type_Pattern', MT564_CAOPTN_11A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_11A_Type_Pattern = MT564_CAOPTN_11A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_17B_Type_Pattern
class MT564_CAOPTN_17B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_17B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1056, 1)
    _Documentation = None
MT564_CAOPTN_17B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_17B_Type_Pattern._CF_pattern.addPattern(pattern='(:(DFLT|STIN|RCHG|CERT|WTHD|CHAN|APLI)//(N|Y))')
MT564_CAOPTN_17B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_17B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_17B_Type_Pattern', MT564_CAOPTN_17B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_17B_Type_Pattern = MT564_CAOPTN_17B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_35B_Type_Pattern
class MT564_CAOPTN_35B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_35B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1069, 1)
    _Documentation = None
MT564_CAOPTN_35B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_35B_Type_Pattern._CF_pattern.addPattern(pattern="((ISIN {1}[A-Z0-9]{12})?(\\n)?((([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,35}\\n?){1,4})?)")
MT564_CAOPTN_35B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_35B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_35B_Type_Pattern', MT564_CAOPTN_35B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_35B_Type_Pattern = MT564_CAOPTN_35B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_98A_Type_Pattern
class MT564_CAOPTN_98A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_98A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1082, 1)
    _Documentation = None
MT564_CAOPTN_98A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_98A_Type_Pattern._CF_pattern.addPattern(pattern='(:(DVCP|EARD|EXPI|MKDT|PODT|SUBS|RDDT|CVPR|BORD)//[0-9]{8})')
MT564_CAOPTN_98A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_98A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_98A_Type_Pattern', MT564_CAOPTN_98A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_98A_Type_Pattern = MT564_CAOPTN_98A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_98B_Type_Pattern
class MT564_CAOPTN_98B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_98B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1095, 1)
    _Documentation = None
MT564_CAOPTN_98B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_98B_Type_Pattern._CF_pattern.addPattern(pattern='(:(DVCP|EARD|EXPI|MKDT|PODT|SUBS|RDDT|CVPR|BORD)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_CAOPTN_98B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_98B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_98B_Type_Pattern', MT564_CAOPTN_98B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_98B_Type_Pattern = MT564_CAOPTN_98B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_98C_Type_Pattern
class MT564_CAOPTN_98C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_98C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1108, 1)
    _Documentation = None
MT564_CAOPTN_98C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_98C_Type_Pattern._CF_pattern.addPattern(pattern='(:(DVCP|EARD|EXPI|MKDT|PODT|SUBS|RDDT|CVPR|BORD)//[0-9]{8}[0-9]{6})')
MT564_CAOPTN_98C_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_98C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_98C_Type_Pattern', MT564_CAOPTN_98C_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_98C_Type_Pattern = MT564_CAOPTN_98C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_98E_Type_Pattern
class MT564_CAOPTN_98E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_98E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1121, 1)
    _Documentation = None
MT564_CAOPTN_98E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_98E_Type_Pattern._CF_pattern.addPattern(pattern='(:(EARD|MKDT|PODT|RDDT|CVPR|BORD)//[0-9]{8}[0-9]{6}(,[0-9]{1,3})?(/(N)?[0-9]{2}([0-9]{2})?)?)')
MT564_CAOPTN_98E_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_98E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_98E_Type_Pattern', MT564_CAOPTN_98E_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_98E_Type_Pattern = MT564_CAOPTN_98E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_98F_Type_Pattern
class MT564_CAOPTN_98F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_98F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1134, 1)
    _Documentation = None
MT564_CAOPTN_98F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_98F_Type_Pattern._CF_pattern.addPattern(pattern='(:(RDDT)/([A-Z0-9]{1,8})?/[A-Z0-9]{4}[0-9]{6})')
MT564_CAOPTN_98F_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_98F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_98F_Type_Pattern', MT564_CAOPTN_98F_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_98F_Type_Pattern = MT564_CAOPTN_98F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_98J_Type_Pattern
class MT564_CAOPTN_98J_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_98J_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1147, 1)
    _Documentation = None
MT564_CAOPTN_98J_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_98J_Type_Pattern._CF_pattern.addPattern(pattern='(:(BORD)//[A-Z]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3})?//[0-9]{8}[0-9]{6})')
MT564_CAOPTN_98J_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_98J_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_98J_Type_Pattern', MT564_CAOPTN_98J_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_98J_Type_Pattern = MT564_CAOPTN_98J_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_98K_Type_Pattern
class MT564_CAOPTN_98K_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_98K_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1160, 1)
    _Documentation = None
MT564_CAOPTN_98K_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_98K_Type_Pattern._CF_pattern.addPattern(pattern="(:(BORD)/[A-Z0-9]{1,8}/([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,34}//[0-9]{8}[0-9]{6})")
MT564_CAOPTN_98K_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_98K_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_98K_Type_Pattern', MT564_CAOPTN_98K_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_98K_Type_Pattern = MT564_CAOPTN_98K_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_69A_Type_Pattern
class MT564_CAOPTN_69A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_69A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1173, 1)
    _Documentation = None
MT564_CAOPTN_69A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_69A_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRIC|REVO|PWAL|PARL|SUSP|AREV|DSWO)//[0-9]{8}/[0-9]{8})')
MT564_CAOPTN_69A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_69A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_69A_Type_Pattern', MT564_CAOPTN_69A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_69A_Type_Pattern = MT564_CAOPTN_69A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_69B_Type_Pattern
class MT564_CAOPTN_69B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_69B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1186, 1)
    _Documentation = None
MT564_CAOPTN_69B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_69B_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRIC|REVO|PWAL|PARL|SUSP|AREV|DSWO)//[0-9]{8}[0-9]{6}/[0-9]{8}[0-9]{6})')
MT564_CAOPTN_69B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_69B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_69B_Type_Pattern', MT564_CAOPTN_69B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_69B_Type_Pattern = MT564_CAOPTN_69B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_69C_Type_Pattern
class MT564_CAOPTN_69C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_69C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1199, 1)
    _Documentation = None
MT564_CAOPTN_69C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_69C_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRIC|REVO|PWAL|PARL|SUSP|AREV|DSWO)//[0-9]{8}/(ONGO|UKWN))')
MT564_CAOPTN_69C_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_69C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_69C_Type_Pattern', MT564_CAOPTN_69C_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_69C_Type_Pattern = MT564_CAOPTN_69C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_69D_Type_Pattern
class MT564_CAOPTN_69D_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_69D_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1212, 1)
    _Documentation = None
MT564_CAOPTN_69D_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_69D_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRIC|REVO|PWAL|PARL|SUSP|AREV|DSWO)//[0-9]{8}[0-9]{6}/(ONGO|UKWN))')
MT564_CAOPTN_69D_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_69D_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_69D_Type_Pattern', MT564_CAOPTN_69D_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_69D_Type_Pattern = MT564_CAOPTN_69D_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_69E_Type_Pattern
class MT564_CAOPTN_69E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_69E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1225, 1)
    _Documentation = None
MT564_CAOPTN_69E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_69E_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRIC|REVO|PWAL|PARL|SUSP|AREV|DSWO)//(ONGO|UKWN)/[0-9]{8})')
MT564_CAOPTN_69E_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_69E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_69E_Type_Pattern', MT564_CAOPTN_69E_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_69E_Type_Pattern = MT564_CAOPTN_69E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_69F_Type_Pattern
class MT564_CAOPTN_69F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_69F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1238, 1)
    _Documentation = None
MT564_CAOPTN_69F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_69F_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRIC|REVO|PWAL|PARL|SUSP|AREV|DSWO)//(ONGO|UKWN)/[0-9]{8}[0-9]{6})')
MT564_CAOPTN_69F_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_69F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_69F_Type_Pattern', MT564_CAOPTN_69F_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_69F_Type_Pattern = MT564_CAOPTN_69F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_69J_Type_Pattern
class MT564_CAOPTN_69J_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_69J_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1251, 1)
    _Documentation = None
MT564_CAOPTN_69J_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_69J_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRIC|REVO|PWAL|PARL|SUSP|AREV|DSWO)//(ONGO|UKWN))')
MT564_CAOPTN_69J_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_69J_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_69J_Type_Pattern', MT564_CAOPTN_69J_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_69J_Type_Pattern = MT564_CAOPTN_69J_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_92A_Type_Pattern
class MT564_CAOPTN_92A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_92A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1264, 1)
    _Documentation = None
MT564_CAOPTN_92A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_92A_Type_Pattern._CF_pattern.addPattern(pattern='(:(TAXR|ATAX|INDX|OVEP|PROR|INTP|TXIN|WITL)//(N)?[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_92A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_92A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_92A_Type_Pattern', MT564_CAOPTN_92A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_92A_Type_Pattern = MT564_CAOPTN_92A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_92B_Type_Pattern
class MT564_CAOPTN_92B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_92B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1277, 1)
    _Documentation = None
MT564_CAOPTN_92B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_92B_Type_Pattern._CF_pattern.addPattern(pattern='(:(IDFX)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)/[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_92B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_92B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_92B_Type_Pattern', MT564_CAOPTN_92B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_92B_Type_Pattern = MT564_CAOPTN_92B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_92F_Type_Pattern
class MT564_CAOPTN_92F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_92F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1290, 1)
    _Documentation = None
MT564_CAOPTN_92F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_92F_Type_Pattern._CF_pattern.addPattern(pattern='(:(GRSS|TAXR|ATAX|INDX|INTP|NETT|TXIN|WITL)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_92F_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_92F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_92F_Type_Pattern', MT564_CAOPTN_92F_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_92F_Type_Pattern = MT564_CAOPTN_92F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_92H_Type_Pattern
class MT564_CAOPTN_92H_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_92H_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1303, 1)
    _Documentation = None
MT564_CAOPTN_92H_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_92H_Type_Pattern._CF_pattern.addPattern(pattern='(:(NETT|GRSS)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15}/(ACTU|INDI))')
MT564_CAOPTN_92H_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_92H_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_92H_Type_Pattern', MT564_CAOPTN_92H_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_92H_Type_Pattern = MT564_CAOPTN_92H_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_92J_Type_Pattern
class MT564_CAOPTN_92J_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_92J_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1316, 1)
    _Documentation = None
MT564_CAOPTN_92J_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_92J_Type_Pattern._CF_pattern.addPattern(pattern='(:(GRSS|NETT|TDMT|INTP)/([A-Z0-9]{1,8})?/[A-Z0-9]{4}/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15}(/[A-Z0-9]{4})?)')
MT564_CAOPTN_92J_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_92J_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_92J_Type_Pattern', MT564_CAOPTN_92J_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_92J_Type_Pattern = MT564_CAOPTN_92J_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_92K_Type_Pattern
class MT564_CAOPTN_92K_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_92K_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1329, 1)
    _Documentation = None
MT564_CAOPTN_92K_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_92K_Type_Pattern._CF_pattern.addPattern(pattern='(:(GRSS|TAXR|ATAX|INDX|OVEP|PROR|INTP|NETT|TXIN|WITL)//[A-Z0-9]{4})')
MT564_CAOPTN_92K_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_92K_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_92K_Type_Pattern', MT564_CAOPTN_92K_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_92K_Type_Pattern = MT564_CAOPTN_92K_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_92R_Type_Pattern
class MT564_CAOPTN_92R_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_92R_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1342, 1)
    _Documentation = None
MT564_CAOPTN_92R_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_92R_Type_Pattern._CF_pattern.addPattern(pattern='(:(WITL|TAXR)/([A-Z0-9]{1,8})?/[A-Z0-9]{4}/[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_92R_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_92R_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_92R_Type_Pattern', MT564_CAOPTN_92R_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_92R_Type_Pattern = MT564_CAOPTN_92R_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_90A_Type_Pattern
class MT564_CAOPTN_90A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_90A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1355, 1)
    _Documentation = None
MT564_CAOPTN_90A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_90A_Type_Pattern._CF_pattern.addPattern(pattern='(:(CINL|OSUB)//(DISC|PRCT|PREM|YIEL)/(N)?[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_90A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_90A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_90A_Type_Pattern', MT564_CAOPTN_90A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_90A_Type_Pattern = MT564_CAOPTN_90A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_90B_Type_Pattern
class MT564_CAOPTN_90B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_90B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1368, 1)
    _Documentation = None
MT564_CAOPTN_90B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_90B_Type_Pattern._CF_pattern.addPattern(pattern='(:(CINL|OSUB)//(ACTU|DISC|PLOT|PREM)/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_90B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_90B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_90B_Type_Pattern', MT564_CAOPTN_90B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_90B_Type_Pattern = MT564_CAOPTN_90B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_90E_Type_Pattern
class MT564_CAOPTN_90E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_90E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1381, 1)
    _Documentation = None
MT564_CAOPTN_90E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_90E_Type_Pattern._CF_pattern.addPattern(pattern='(:(CINL|OSUB)//(UKWN))')
MT564_CAOPTN_90E_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_90E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_90E_Type_Pattern', MT564_CAOPTN_90E_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_90E_Type_Pattern = MT564_CAOPTN_90E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_36B_Type_Pattern
class MT564_CAOPTN_36B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_36B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1394, 1)
    _Documentation = None
MT564_CAOPTN_36B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_36B_Type_Pattern._CF_pattern.addPattern(pattern='(:(MAEX|MIEX|MILT|NBLT|NEWD|BOLQ|FOLQ)//(AMOR|FAMT|UNIT)/[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_36B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_36B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_36B_Type_Pattern', MT564_CAOPTN_36B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_36B_Type_Pattern = MT564_CAOPTN_36B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_36C_Type_Pattern
class MT564_CAOPTN_36C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_36C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1407, 1)
    _Documentation = None
MT564_CAOPTN_36C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_36C_Type_Pattern._CF_pattern.addPattern(pattern='(:(MAEX|MIEX|MILT|NBLT|NEWD|BOLQ|FOLQ)//[A-Z0-9]{4})')
MT564_CAOPTN_36C_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_36C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_36C_Type_Pattern', MT564_CAOPTN_36C_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_36C_Type_Pattern = MT564_CAOPTN_36C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_22F_Type_Pattern
class MT564_CAOPTN_SECMOVE_22F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_22F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1420, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_22F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_22F_Type_Pattern._CF_pattern.addPattern(pattern='(:(TEMP|NELP|TXAP|ITYP|ETYP)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})|(:(DISF)/([A-Z0-9]{1,8})?/(BUYU|CINL|DIST|RDDN|RDUP|STAN|UKWN))')
MT564_CAOPTN_SECMOVE_22F_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_22F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_22F_Type_Pattern', MT564_CAOPTN_SECMOVE_22F_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_22F_Type_Pattern = MT564_CAOPTN_SECMOVE_22F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_22H_Type_Pattern
class MT564_CAOPTN_SECMOVE_22H_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_22H_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1433, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_22H_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_22H_Type_Pattern._CF_pattern.addPattern(pattern='(:(CRDB|NSIS)//[A-Z0-9]{4})')
MT564_CAOPTN_SECMOVE_22H_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_22H_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_22H_Type_Pattern', MT564_CAOPTN_SECMOVE_22H_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_22H_Type_Pattern = MT564_CAOPTN_SECMOVE_22H_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_35B_Type_Pattern
class MT564_CAOPTN_SECMOVE_35B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_35B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1446, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_35B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_35B_Type_Pattern._CF_pattern.addPattern(pattern="((ISIN {1}[A-Z0-9]{12})?(\\n)?((([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,35}\\n?){1,4})?)")
MT564_CAOPTN_SECMOVE_35B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_35B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_35B_Type_Pattern', MT564_CAOPTN_SECMOVE_35B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_35B_Type_Pattern = MT564_CAOPTN_SECMOVE_35B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_94B_Type_Pattern
class MT564_CAOPTN_SECMOVE_FIA_94B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_94B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1459, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_FIA_94B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_FIA_94B_Type_Pattern._CF_pattern.addPattern(pattern="(:(PLIS)/([A-Z0-9]{1,8})?/[A-Z0-9]{4}(/([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,30})?)")
MT564_CAOPTN_SECMOVE_FIA_94B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_FIA_94B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_94B_Type_Pattern', MT564_CAOPTN_SECMOVE_FIA_94B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_94B_Type_Pattern = MT564_CAOPTN_SECMOVE_FIA_94B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_22F_Type_Pattern
class MT564_CAOPTN_SECMOVE_FIA_22F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_22F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1472, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_FIA_22F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_FIA_22F_Type_Pattern._CF_pattern.addPattern(pattern='(:(MICO)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_CAOPTN_SECMOVE_FIA_22F_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_FIA_22F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_22F_Type_Pattern', MT564_CAOPTN_SECMOVE_FIA_22F_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_22F_Type_Pattern = MT564_CAOPTN_SECMOVE_FIA_22F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_12A_Type_Pattern
class MT564_CAOPTN_SECMOVE_FIA_12A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_12A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1485, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_FIA_12A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_FIA_12A_Type_Pattern._CF_pattern.addPattern(pattern="(:(CLAS)/([A-Z0-9]{1,8})?/([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,30})")
MT564_CAOPTN_SECMOVE_FIA_12A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_FIA_12A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_12A_Type_Pattern', MT564_CAOPTN_SECMOVE_FIA_12A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_12A_Type_Pattern = MT564_CAOPTN_SECMOVE_FIA_12A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_12B_Type_Pattern
class MT564_CAOPTN_SECMOVE_FIA_12B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_12B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1498, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_FIA_12B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_FIA_12B_Type_Pattern._CF_pattern.addPattern(pattern='(:(OPST)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_CAOPTN_SECMOVE_FIA_12B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_FIA_12B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_12B_Type_Pattern', MT564_CAOPTN_SECMOVE_FIA_12B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_12B_Type_Pattern = MT564_CAOPTN_SECMOVE_FIA_12B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_12C_Type_Pattern
class MT564_CAOPTN_SECMOVE_FIA_12C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_12C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1511, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_FIA_12C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_FIA_12C_Type_Pattern._CF_pattern.addPattern(pattern='(:(CLAS)//[A-Z0-9]{6})')
MT564_CAOPTN_SECMOVE_FIA_12C_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_FIA_12C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_12C_Type_Pattern', MT564_CAOPTN_SECMOVE_FIA_12C_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_12C_Type_Pattern = MT564_CAOPTN_SECMOVE_FIA_12C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_11A_Type_Pattern
class MT564_CAOPTN_SECMOVE_FIA_11A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_11A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1524, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_FIA_11A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_FIA_11A_Type_Pattern._CF_pattern.addPattern(pattern='(:(DENO)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD))')
MT564_CAOPTN_SECMOVE_FIA_11A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_FIA_11A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_11A_Type_Pattern', MT564_CAOPTN_SECMOVE_FIA_11A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_11A_Type_Pattern = MT564_CAOPTN_SECMOVE_FIA_11A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_98A_Type_Pattern
class MT564_CAOPTN_SECMOVE_FIA_98A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_98A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1537, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_FIA_98A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_FIA_98A_Type_Pattern._CF_pattern.addPattern(pattern='(:(COUP|FRNR|MATU|ISSU|CALD|PUTT|DDTE|CONV)//[0-9]{8})')
MT564_CAOPTN_SECMOVE_FIA_98A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_FIA_98A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_98A_Type_Pattern', MT564_CAOPTN_SECMOVE_FIA_98A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_98A_Type_Pattern = MT564_CAOPTN_SECMOVE_FIA_98A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_90A_Type_Pattern
class MT564_CAOPTN_SECMOVE_FIA_90A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_90A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1550, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_FIA_90A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_FIA_90A_Type_Pattern._CF_pattern.addPattern(pattern='(:(ISSU)//(DISC|PRCT|PREM|YIEL)/(N)?[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_FIA_90A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_FIA_90A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_90A_Type_Pattern', MT564_CAOPTN_SECMOVE_FIA_90A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_90A_Type_Pattern = MT564_CAOPTN_SECMOVE_FIA_90A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_90B_Type_Pattern
class MT564_CAOPTN_SECMOVE_FIA_90B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_90B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1563, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_FIA_90B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_FIA_90B_Type_Pattern._CF_pattern.addPattern(pattern='(:(ISSU)//(ACTU|DISC|PLOT|PREM)/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_FIA_90B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_FIA_90B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_90B_Type_Pattern', MT564_CAOPTN_SECMOVE_FIA_90B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_90B_Type_Pattern = MT564_CAOPTN_SECMOVE_FIA_90B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_90E_Type_Pattern
class MT564_CAOPTN_SECMOVE_FIA_90E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_90E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1576, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_FIA_90E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_FIA_90E_Type_Pattern._CF_pattern.addPattern(pattern='(:(ISSU)//(UKWN))')
MT564_CAOPTN_SECMOVE_FIA_90E_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_FIA_90E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_90E_Type_Pattern', MT564_CAOPTN_SECMOVE_FIA_90E_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_90E_Type_Pattern = MT564_CAOPTN_SECMOVE_FIA_90E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_92A_Type_Pattern
class MT564_CAOPTN_SECMOVE_FIA_92A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_92A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1589, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_FIA_92A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_FIA_92A_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRFC|NWFC|INTR|NXRT)//(N)?[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_FIA_92A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_FIA_92A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_92A_Type_Pattern', MT564_CAOPTN_SECMOVE_FIA_92A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_92A_Type_Pattern = MT564_CAOPTN_SECMOVE_FIA_92A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_92K_Type_Pattern
class MT564_CAOPTN_SECMOVE_FIA_92K_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_92K_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1602, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_FIA_92K_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_FIA_92K_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRFC|NWFC|INTR|NXRT)//(UKWN))')
MT564_CAOPTN_SECMOVE_FIA_92K_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_FIA_92K_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_92K_Type_Pattern', MT564_CAOPTN_SECMOVE_FIA_92K_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_92K_Type_Pattern = MT564_CAOPTN_SECMOVE_FIA_92K_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_36B_Type_Pattern
class MT564_CAOPTN_SECMOVE_FIA_36B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_36B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1615, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_FIA_36B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_FIA_36B_Type_Pattern._CF_pattern.addPattern(pattern='(:(MINO|MIEX|MILT|SIZE)//(AMOR|FAMT|UNIT)/[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_FIA_36B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_FIA_36B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_36B_Type_Pattern', MT564_CAOPTN_SECMOVE_FIA_36B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_36B_Type_Pattern = MT564_CAOPTN_SECMOVE_FIA_36B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_36B_Type_Pattern
class MT564_CAOPTN_SECMOVE_36B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_36B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1628, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_36B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_36B_Type_Pattern._CF_pattern.addPattern(pattern='(:(ENTL)//(AMOR|FAMT|UNIT)/[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_36B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_36B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_36B_Type_Pattern', MT564_CAOPTN_SECMOVE_36B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_36B_Type_Pattern = MT564_CAOPTN_SECMOVE_36B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_94B_Type_Pattern
class MT564_CAOPTN_SECMOVE_94B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_94B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1641, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_94B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_94B_Type_Pattern._CF_pattern.addPattern(pattern="(:(SAFE)/([A-Z0-9]{1,8})?/[A-Z0-9]{4}(/([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,30})?)")
MT564_CAOPTN_SECMOVE_94B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_94B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_94B_Type_Pattern', MT564_CAOPTN_SECMOVE_94B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_94B_Type_Pattern = MT564_CAOPTN_SECMOVE_94B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_94C_Type_Pattern
class MT564_CAOPTN_SECMOVE_94C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_94C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1654, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_94C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_94C_Type_Pattern._CF_pattern.addPattern(pattern='(:(SAFE|COIN)//[A-Z]{2})')
MT564_CAOPTN_SECMOVE_94C_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_94C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_94C_Type_Pattern', MT564_CAOPTN_SECMOVE_94C_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_94C_Type_Pattern = MT564_CAOPTN_SECMOVE_94C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_94F_Type_Pattern
class MT564_CAOPTN_SECMOVE_94F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_94F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1667, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_94F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_94F_Type_Pattern._CF_pattern.addPattern(pattern='(:(SAFE)//[A-Z0-9]{4}/[A-Z]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3})?)')
MT564_CAOPTN_SECMOVE_94F_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_94F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_94F_Type_Pattern', MT564_CAOPTN_SECMOVE_94F_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_94F_Type_Pattern = MT564_CAOPTN_SECMOVE_94F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_11A_Type_Pattern
class MT564_CAOPTN_SECMOVE_11A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_11A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1680, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_11A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_11A_Type_Pattern._CF_pattern.addPattern(pattern='(:(OPTN)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD))')
MT564_CAOPTN_SECMOVE_11A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_11A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_11A_Type_Pattern', MT564_CAOPTN_SECMOVE_11A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_11A_Type_Pattern = MT564_CAOPTN_SECMOVE_11A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69A_Type_Pattern
class MT564_CAOPTN_SECMOVE_69A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_69A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1693, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_69A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_69A_Type_Pattern._CF_pattern.addPattern(pattern='(:(TRDP)//[0-9]{8}/[0-9]{8})')
MT564_CAOPTN_SECMOVE_69A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_69A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_69A_Type_Pattern', MT564_CAOPTN_SECMOVE_69A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_69A_Type_Pattern = MT564_CAOPTN_SECMOVE_69A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69B_Type_Pattern
class MT564_CAOPTN_SECMOVE_69B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_69B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1706, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_69B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_69B_Type_Pattern._CF_pattern.addPattern(pattern='(:(TRDP)//[0-9]{8}[0-9]{6}/[0-9]{8}[0-9]{6})')
MT564_CAOPTN_SECMOVE_69B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_69B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_69B_Type_Pattern', MT564_CAOPTN_SECMOVE_69B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_69B_Type_Pattern = MT564_CAOPTN_SECMOVE_69B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69C_Type_Pattern
class MT564_CAOPTN_SECMOVE_69C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_69C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1719, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_69C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_69C_Type_Pattern._CF_pattern.addPattern(pattern='(:(TRDP)//[0-9]{8}/(ONGO|UKWN))')
MT564_CAOPTN_SECMOVE_69C_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_69C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_69C_Type_Pattern', MT564_CAOPTN_SECMOVE_69C_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_69C_Type_Pattern = MT564_CAOPTN_SECMOVE_69C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69D_Type_Pattern
class MT564_CAOPTN_SECMOVE_69D_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_69D_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1732, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_69D_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_69D_Type_Pattern._CF_pattern.addPattern(pattern='(:(TRDP)//[0-9]{8}[0-9]{6}/(ONGO|UKWN))')
MT564_CAOPTN_SECMOVE_69D_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_69D_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_69D_Type_Pattern', MT564_CAOPTN_SECMOVE_69D_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_69D_Type_Pattern = MT564_CAOPTN_SECMOVE_69D_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69E_Type_Pattern
class MT564_CAOPTN_SECMOVE_69E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_69E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1745, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_69E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_69E_Type_Pattern._CF_pattern.addPattern(pattern='(:(TRDP)//(ONGO|UKWN)/[0-9]{8})')
MT564_CAOPTN_SECMOVE_69E_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_69E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_69E_Type_Pattern', MT564_CAOPTN_SECMOVE_69E_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_69E_Type_Pattern = MT564_CAOPTN_SECMOVE_69E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69F_Type_Pattern
class MT564_CAOPTN_SECMOVE_69F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_69F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1758, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_69F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_69F_Type_Pattern._CF_pattern.addPattern(pattern='(:(TRDP)//(ONGO|UKWN)/[0-9]{8}[0-9]{6})')
MT564_CAOPTN_SECMOVE_69F_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_69F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_69F_Type_Pattern', MT564_CAOPTN_SECMOVE_69F_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_69F_Type_Pattern = MT564_CAOPTN_SECMOVE_69F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69J_Type_Pattern
class MT564_CAOPTN_SECMOVE_69J_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_69J_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1771, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_69J_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_69J_Type_Pattern._CF_pattern.addPattern(pattern='(:(TRDP)//(ONGO|UKWN))')
MT564_CAOPTN_SECMOVE_69J_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_69J_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_69J_Type_Pattern', MT564_CAOPTN_SECMOVE_69J_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_69J_Type_Pattern = MT564_CAOPTN_SECMOVE_69J_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90A_Type_Pattern
class MT564_CAOPTN_SECMOVE_90A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_90A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1784, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_90A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_90A_Type_Pattern._CF_pattern.addPattern(pattern='(:(INDC|MRKT|CINL|OFFR|PRPP)//(DISC|PRCT|PREM|YIEL)/(N)?[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_90A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_90A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_90A_Type_Pattern', MT564_CAOPTN_SECMOVE_90A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_90A_Type_Pattern = MT564_CAOPTN_SECMOVE_90A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90B_Type_Pattern
class MT564_CAOPTN_SECMOVE_90B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_90B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1797, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_90B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_90B_Type_Pattern._CF_pattern.addPattern(pattern='(:(INDC|MRKT|CINL|OFFR|PRPP|CAVA)//[A-Z0-9]{4}/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_90B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_90B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_90B_Type_Pattern', MT564_CAOPTN_SECMOVE_90B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_90B_Type_Pattern = MT564_CAOPTN_SECMOVE_90B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90E_Type_Pattern
class MT564_CAOPTN_SECMOVE_90E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_90E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1810, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_90E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_90E_Type_Pattern._CF_pattern.addPattern(pattern='(:(INDC|MRKT|CINL|OFFR|PRPP|CAVA)//[A-Z0-9]{4})')
MT564_CAOPTN_SECMOVE_90E_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_90E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_90E_Type_Pattern', MT564_CAOPTN_SECMOVE_90E_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_90E_Type_Pattern = MT564_CAOPTN_SECMOVE_90E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90F_Type_Pattern
class MT564_CAOPTN_SECMOVE_90F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_90F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1823, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_90F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_90F_Type_Pattern._CF_pattern.addPattern(pattern='(:(OFFR)//(AMOR|FAMT|UNIT)/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15}/[A-Z0-9]{4}/[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_90F_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_90F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_90F_Type_Pattern', MT564_CAOPTN_SECMOVE_90F_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_90F_Type_Pattern = MT564_CAOPTN_SECMOVE_90F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90J_Type_Pattern
class MT564_CAOPTN_SECMOVE_90J_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_90J_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1836, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_90J_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_90J_Type_Pattern._CF_pattern.addPattern(pattern='(:(OFFR)//[A-Z0-9]{4}/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15}/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_90J_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_90J_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_90J_Type_Pattern', MT564_CAOPTN_SECMOVE_90J_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_90J_Type_Pattern = MT564_CAOPTN_SECMOVE_90J_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90K_Type_Pattern
class MT564_CAOPTN_SECMOVE_90K_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_90K_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1849, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_90K_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_90K_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRPP)//[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_90K_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_90K_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_90K_Type_Pattern', MT564_CAOPTN_SECMOVE_90K_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_90K_Type_Pattern = MT564_CAOPTN_SECMOVE_90K_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90L_Type_Pattern
class MT564_CAOPTN_SECMOVE_90L_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_90L_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1862, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_90L_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_90L_Type_Pattern._CF_pattern.addPattern(pattern='(:(OFFR)//(N)?[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_90L_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_90L_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_90L_Type_Pattern', MT564_CAOPTN_SECMOVE_90L_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_90L_Type_Pattern = MT564_CAOPTN_SECMOVE_90L_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92A_Type_Pattern
class MT564_CAOPTN_SECMOVE_92A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1875, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_92A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_92A_Type_Pattern._CF_pattern.addPattern(pattern='(:(TRAT|CHAR|FISC|RATE|TAXC|TRAX)//(N)?[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_92A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_92A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92A_Type_Pattern', MT564_CAOPTN_SECMOVE_92A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_92A_Type_Pattern = MT564_CAOPTN_SECMOVE_92A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92D_Type_Pattern
class MT564_CAOPTN_SECMOVE_92D_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92D_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1888, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_92D_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_92D_Type_Pattern._CF_pattern.addPattern(pattern='(:(ADEX|NEWO|ADSR)//[0-9,(?0-9)]{1,15}/[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_92D_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_92D_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92D_Type_Pattern', MT564_CAOPTN_SECMOVE_92D_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_92D_Type_Pattern = MT564_CAOPTN_SECMOVE_92D_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92F_Type_Pattern
class MT564_CAOPTN_SECMOVE_92F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1901, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_92F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_92F_Type_Pattern._CF_pattern.addPattern(pattern='(:(CHAR|TAXC)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_92F_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_92F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92F_Type_Pattern', MT564_CAOPTN_SECMOVE_92F_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_92F_Type_Pattern = MT564_CAOPTN_SECMOVE_92F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92J_Type_Pattern
class MT564_CAOPTN_SECMOVE_92J_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92J_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1914, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_92J_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_92J_Type_Pattern._CF_pattern.addPattern(pattern='(:(TAXC)/([A-Z0-9]{1,8})?/[A-Z0-9]{4}/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15}(/[A-Z0-9]{4})?)')
MT564_CAOPTN_SECMOVE_92J_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_92J_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92J_Type_Pattern', MT564_CAOPTN_SECMOVE_92J_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_92J_Type_Pattern = MT564_CAOPTN_SECMOVE_92J_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92K_Type_Pattern
class MT564_CAOPTN_SECMOVE_92K_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92K_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1927, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_92K_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_92K_Type_Pattern._CF_pattern.addPattern(pattern='(:(ADEX|NEWO|ADSR|CHAR|FISC|RATE|TAXC|TRAX)//(UKWN))')
MT564_CAOPTN_SECMOVE_92K_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_92K_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92K_Type_Pattern', MT564_CAOPTN_SECMOVE_92K_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_92K_Type_Pattern = MT564_CAOPTN_SECMOVE_92K_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92L_Type_Pattern
class MT564_CAOPTN_SECMOVE_92L_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92L_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1940, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_92L_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_92L_Type_Pattern._CF_pattern.addPattern(pattern='(:(ADEX|NEWO|ADSR)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15}/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_92L_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_92L_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92L_Type_Pattern', MT564_CAOPTN_SECMOVE_92L_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_92L_Type_Pattern = MT564_CAOPTN_SECMOVE_92L_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92M_Type_Pattern
class MT564_CAOPTN_SECMOVE_92M_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92M_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1953, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_92M_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_92M_Type_Pattern._CF_pattern.addPattern(pattern='(:(NEWO)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15}/[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_92M_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_92M_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92M_Type_Pattern', MT564_CAOPTN_SECMOVE_92M_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_92M_Type_Pattern = MT564_CAOPTN_SECMOVE_92M_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92N_Type_Pattern
class MT564_CAOPTN_SECMOVE_92N_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92N_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1966, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_92N_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_92N_Type_Pattern._CF_pattern.addPattern(pattern='(:(NEWO)//[0-9,(?0-9)]{1,15}/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_SECMOVE_92N_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_92N_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92N_Type_Pattern', MT564_CAOPTN_SECMOVE_92N_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_92N_Type_Pattern = MT564_CAOPTN_SECMOVE_92N_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_98A_Type_Pattern
class MT564_CAOPTN_SECMOVE_98A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_98A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1979, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_98A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_98A_Type_Pattern._CF_pattern.addPattern(pattern='(:(PAYD|AVAL|DIVR|EARL|PPDT|LTRD)//[0-9]{8})')
MT564_CAOPTN_SECMOVE_98A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_98A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_98A_Type_Pattern', MT564_CAOPTN_SECMOVE_98A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_98A_Type_Pattern = MT564_CAOPTN_SECMOVE_98A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_98B_Type_Pattern
class MT564_CAOPTN_SECMOVE_98B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_98B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1992, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_98B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_98B_Type_Pattern._CF_pattern.addPattern(pattern='(:(PAYD|AVAL|DIVR|EARL|PPDT|LTRD)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_CAOPTN_SECMOVE_98B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_98B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_98B_Type_Pattern', MT564_CAOPTN_SECMOVE_98B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_98B_Type_Pattern = MT564_CAOPTN_SECMOVE_98B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_98C_Type_Pattern
class MT564_CAOPTN_SECMOVE_98C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_98C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2005, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_98C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_98C_Type_Pattern._CF_pattern.addPattern(pattern='(:(PAYD|AVAL|DIVR|EARL|PPDT|LTRD)//[0-9]{8}[0-9]{6})')
MT564_CAOPTN_SECMOVE_98C_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_98C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_98C_Type_Pattern', MT564_CAOPTN_SECMOVE_98C_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_98C_Type_Pattern = MT564_CAOPTN_SECMOVE_98C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_98E_Type_Pattern
class MT564_CAOPTN_SECMOVE_98E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_98E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2018, 1)
    _Documentation = None
MT564_CAOPTN_SECMOVE_98E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_SECMOVE_98E_Type_Pattern._CF_pattern.addPattern(pattern='(:(EARL)//[0-9]{8}[0-9]{6}(,[0-9]{1,3})?(/(N)?[0-9]{2}([0-9]{2})?)?)')
MT564_CAOPTN_SECMOVE_98E_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_SECMOVE_98E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_98E_Type_Pattern', MT564_CAOPTN_SECMOVE_98E_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_SECMOVE_98E_Type_Pattern = MT564_CAOPTN_SECMOVE_98E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_22F_Type_Pattern
class MT564_CAOPTN_CASHMOVE_22F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_22F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2031, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_22F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_22F_Type_Pattern._CF_pattern.addPattern(pattern='(:(NELP|ITYP|TXAP|ETYP)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_CAOPTN_CASHMOVE_22F_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_22F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_22F_Type_Pattern', MT564_CAOPTN_CASHMOVE_22F_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_22F_Type_Pattern = MT564_CAOPTN_CASHMOVE_22F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_22H_Type_Pattern
class MT564_CAOPTN_CASHMOVE_22H_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_22H_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2044, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_22H_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_22H_Type_Pattern._CF_pattern.addPattern(pattern='(:(CRDB|CONT)//[A-Z0-9]{4})')
MT564_CAOPTN_CASHMOVE_22H_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_22H_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_22H_Type_Pattern', MT564_CAOPTN_CASHMOVE_22H_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_22H_Type_Pattern = MT564_CAOPTN_CASHMOVE_22H_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_94C_Type_Pattern
class MT564_CAOPTN_CASHMOVE_94C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_94C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2057, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_94C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_94C_Type_Pattern._CF_pattern.addPattern(pattern='(:(COIN)//[A-Z]{2})')
MT564_CAOPTN_CASHMOVE_94C_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_94C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_94C_Type_Pattern', MT564_CAOPTN_CASHMOVE_94C_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_94C_Type_Pattern = MT564_CAOPTN_CASHMOVE_94C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_97A_Type_Pattern
class MT564_CAOPTN_CASHMOVE_97A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_97A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2070, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_97A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_97A_Type_Pattern._CF_pattern.addPattern(pattern="(:(CASH)//([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,35})")
MT564_CAOPTN_CASHMOVE_97A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_97A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_97A_Type_Pattern', MT564_CAOPTN_CASHMOVE_97A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_97A_Type_Pattern = MT564_CAOPTN_CASHMOVE_97A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_97E_Type_Pattern
class MT564_CAOPTN_CASHMOVE_97E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_97E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2083, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_97E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_97E_Type_Pattern._CF_pattern.addPattern(pattern="(:(CASH)//([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,34})")
MT564_CAOPTN_CASHMOVE_97E_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_97E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_97E_Type_Pattern', MT564_CAOPTN_CASHMOVE_97E_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_97E_Type_Pattern = MT564_CAOPTN_CASHMOVE_97E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_19B_Type_Pattern
class MT564_CAOPTN_CASHMOVE_19B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_19B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2096, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_19B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_19B_Type_Pattern._CF_pattern.addPattern(pattern='(:(ENTL|RESU|OCMT|CAPG|INDM|CINL|CHAR|FLFR|UNFR|TXFR|TXDF|SOIC|GRSS|INTR|MKTC|NETT|PRIN|REIN|TAXC|TAXR|WITL|REDP|ATAX|INCO|EXEC|LOCO|PAMM|REGF|SHIP|SOFE|STAM|STEX|VATA|FISC|MFDV|TXRC|EUTR|ACRU|EQUL|FTCA|NRAT|BWIT|TXIN|TRAX|DEDI|DEEM|DEFP|DEIT|DERY)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_CASHMOVE_19B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_19B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_19B_Type_Pattern', MT564_CAOPTN_CASHMOVE_19B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_19B_Type_Pattern = MT564_CAOPTN_CASHMOVE_19B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_98A_Type_Pattern
class MT564_CAOPTN_CASHMOVE_98A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_98A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2109, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_98A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_98A_Type_Pattern._CF_pattern.addPattern(pattern='(:(PAYD|VALU|EARL|FXDT)//[0-9]{8})')
MT564_CAOPTN_CASHMOVE_98A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_98A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_98A_Type_Pattern', MT564_CAOPTN_CASHMOVE_98A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_98A_Type_Pattern = MT564_CAOPTN_CASHMOVE_98A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_98B_Type_Pattern
class MT564_CAOPTN_CASHMOVE_98B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_98B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2122, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_98B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_98B_Type_Pattern._CF_pattern.addPattern(pattern='(:(PAYD|VALU|EARL|FXDT)/([A-Z0-9]{1,8})?/[A-Z0-9]{4})')
MT564_CAOPTN_CASHMOVE_98B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_98B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_98B_Type_Pattern', MT564_CAOPTN_CASHMOVE_98B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_98B_Type_Pattern = MT564_CAOPTN_CASHMOVE_98B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_98C_Type_Pattern
class MT564_CAOPTN_CASHMOVE_98C_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_98C_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2135, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_98C_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_98C_Type_Pattern._CF_pattern.addPattern(pattern='(:(PAYD|VALU|EARL|FXDT)//[0-9]{8}[0-9]{6})')
MT564_CAOPTN_CASHMOVE_98C_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_98C_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_98C_Type_Pattern', MT564_CAOPTN_CASHMOVE_98C_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_98C_Type_Pattern = MT564_CAOPTN_CASHMOVE_98C_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_98E_Type_Pattern
class MT564_CAOPTN_CASHMOVE_98E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_98E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2148, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_98E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_98E_Type_Pattern._CF_pattern.addPattern(pattern='(:(EARL)//[0-9]{8}[0-9]{6}(,[0-9]{1,3})?(/(N)?[0-9]{2}([0-9]{2})?)?)')
MT564_CAOPTN_CASHMOVE_98E_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_98E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_98E_Type_Pattern', MT564_CAOPTN_CASHMOVE_98E_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_98E_Type_Pattern = MT564_CAOPTN_CASHMOVE_98E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92A_Type_Pattern
class MT564_CAOPTN_CASHMOVE_92A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2161, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_92A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_92A_Type_Pattern._CF_pattern.addPattern(pattern='(:(ATAX|CHAR|ESOF|FLFR|FISC|INCE|INTP|NRES|RATE|SOFE|TAXC|TAXR|TXIN|TXPR|TXRC|WITL)//(N)?[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_CASHMOVE_92A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_92A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92A_Type_Pattern', MT564_CAOPTN_CASHMOVE_92A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92A_Type_Pattern = MT564_CAOPTN_CASHMOVE_92A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92B_Type_Pattern
class MT564_CAOPTN_CASHMOVE_92B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2174, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_92B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_92B_Type_Pattern._CF_pattern.addPattern(pattern='(:(EXCH)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)/[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_CASHMOVE_92B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_92B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92B_Type_Pattern', MT564_CAOPTN_CASHMOVE_92B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92B_Type_Pattern = MT564_CAOPTN_CASHMOVE_92B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92F_Type_Pattern
class MT564_CAOPTN_CASHMOVE_92F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2187, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_92F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_92F_Type_Pattern._CF_pattern.addPattern(pattern='(:(ATAX|CHAR|EQUL|ESOF|FLFR|GRSS|INCE|INTP|NETT|NRES|SOFE|TAXC|TAXR|TXIN|WITL)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_CASHMOVE_92F_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_92F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92F_Type_Pattern', MT564_CAOPTN_CASHMOVE_92F_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92F_Type_Pattern = MT564_CAOPTN_CASHMOVE_92F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92H_Type_Pattern
class MT564_CAOPTN_CASHMOVE_92H_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92H_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2200, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_92H_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_92H_Type_Pattern._CF_pattern.addPattern(pattern='(:(NETT|GRSS)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15}/[A-Z0-9]{4})')
MT564_CAOPTN_CASHMOVE_92H_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_92H_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92H_Type_Pattern', MT564_CAOPTN_CASHMOVE_92H_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92H_Type_Pattern = MT564_CAOPTN_CASHMOVE_92H_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92J_Type_Pattern
class MT564_CAOPTN_CASHMOVE_92J_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92J_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2213, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_92J_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_92J_Type_Pattern._CF_pattern.addPattern(pattern='(:(GRSS|NETT|TAXC|INTP)/([A-Z0-9]{1,8})?/[A-Z0-9]{4}/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15}(/[A-Z0-9]{4})?)')
MT564_CAOPTN_CASHMOVE_92J_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_92J_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92J_Type_Pattern', MT564_CAOPTN_CASHMOVE_92J_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92J_Type_Pattern = MT564_CAOPTN_CASHMOVE_92J_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92K_Type_Pattern
class MT564_CAOPTN_CASHMOVE_92K_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92K_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2226, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_92K_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_92K_Type_Pattern._CF_pattern.addPattern(pattern='(:(WITL|TXRC|TXPR|TXIN|TAXR|TAXC|SOFE|RATE|NRES|NETT|INTP|INCE|GRSS|FISC|FLFR|ESOF|EQUL|CHAR|ATAX)//[A-Z0-9]{4})')
MT564_CAOPTN_CASHMOVE_92K_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_92K_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92K_Type_Pattern', MT564_CAOPTN_CASHMOVE_92K_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92K_Type_Pattern = MT564_CAOPTN_CASHMOVE_92K_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92M_Type_Pattern
class MT564_CAOPTN_CASHMOVE_92M_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92M_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2239, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_92M_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_92M_Type_Pattern._CF_pattern.addPattern(pattern='(:(ESOF|SOFE)//(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15}/[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_CASHMOVE_92M_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_92M_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92M_Type_Pattern', MT564_CAOPTN_CASHMOVE_92M_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92M_Type_Pattern = MT564_CAOPTN_CASHMOVE_92M_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92R_Type_Pattern
class MT564_CAOPTN_CASHMOVE_92R_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92R_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2252, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_92R_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_92R_Type_Pattern._CF_pattern.addPattern(pattern='(:(WITL|TAXR)/([A-Z0-9]{1,8})?/[A-Z0-9]{4}/[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_CASHMOVE_92R_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_92R_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92R_Type_Pattern', MT564_CAOPTN_CASHMOVE_92R_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92R_Type_Pattern = MT564_CAOPTN_CASHMOVE_92R_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90A_Type_Pattern
class MT564_CAOPTN_CASHMOVE_90A_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_90A_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2265, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_90A_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_90A_Type_Pattern._CF_pattern.addPattern(pattern='(:(OFFR|PRPP)//(DISC|PRCT|PREM|YIEL)/(N)?[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_CASHMOVE_90A_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_90A_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_90A_Type_Pattern', MT564_CAOPTN_CASHMOVE_90A_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_90A_Type_Pattern = MT564_CAOPTN_CASHMOVE_90A_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90B_Type_Pattern
class MT564_CAOPTN_CASHMOVE_90B_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_90B_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2278, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_90B_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_90B_Type_Pattern._CF_pattern.addPattern(pattern='(:(OFFR|PRPP)//(ACTU|DISC|PLOT|PREM)/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_CASHMOVE_90B_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_90B_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_90B_Type_Pattern', MT564_CAOPTN_CASHMOVE_90B_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_90B_Type_Pattern = MT564_CAOPTN_CASHMOVE_90B_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90E_Type_Pattern
class MT564_CAOPTN_CASHMOVE_90E_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_90E_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2291, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_90E_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_90E_Type_Pattern._CF_pattern.addPattern(pattern='(:(OFFR|PRPP)//[A-Z0-9]{4})')
MT564_CAOPTN_CASHMOVE_90E_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_90E_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_90E_Type_Pattern', MT564_CAOPTN_CASHMOVE_90E_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_90E_Type_Pattern = MT564_CAOPTN_CASHMOVE_90E_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90F_Type_Pattern
class MT564_CAOPTN_CASHMOVE_90F_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_90F_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2304, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_90F_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_90F_Type_Pattern._CF_pattern.addPattern(pattern='(:(OFFR)//(AMOR|FAMT|UNIT)/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15}/[A-Z0-9]{4}/[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_CASHMOVE_90F_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_90F_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_90F_Type_Pattern', MT564_CAOPTN_CASHMOVE_90F_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_90F_Type_Pattern = MT564_CAOPTN_CASHMOVE_90F_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90J_Type_Pattern
class MT564_CAOPTN_CASHMOVE_90J_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_90J_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2317, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_90J_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_90J_Type_Pattern._CF_pattern.addPattern(pattern='(:(OFFR)//(ACTU|DISC|PLOT|PREM)/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15}/(AED|AFN|ALL|AMD|ANG|AOA|ARS|AUD|AWG|AZN|BAM|BBD|BDT|BGN|BHD|BIF|BMD|BND|BOB|BRL|BSD|BTN|BWP|BYN|BZD|CAD|CDF|CHF|CLP|CNY|COP|CRC|CUC|CUP|CVE|CZK|DJF|DKK|DOP|DZD|EGP|ERN|ETB|EUR|FJD|FKP|GBP|GEL|GGP|GHS|GIP|GMD|GNF|GTQ|GYD|HKD|HNL|HRK|HTG|HUF|IDR|ILS|IMP|INR|IQD|IRR|ISK|JEP|JMD|JOD|JPY|KES|KGS|KHR|KMF|KPW|KRW|KWD|KYD|KZT|LAK|LBP|LKR|LRD|LSL|LYD|MAD|MDL|MGA|MKD|MMK|MNT|MOP|MRO|MUR|MVR|MWK|MXN|MYR|MZN|NAD|NGN|NIO|NOK|NPR|NZD|OMR|PAB|PEN|PGK|PHP|PKR|PLN|PYG|QAR|RON|RSD|RUB|RWF|SAR|SBD|SCR|SDG|SEK|SGD|SHP|SLL|SOS|SPL|SRD|STD|SVC|SYP|SZL|THB|TJS|TMT|TND|TOP|TRY|TTD|TVD|TWD|TZS|UAH|UGX|USD|UYU|UZS|VEF|VND|VUV|WST|XAF|XCD|XDR|XOF|XPF|YER|ZAR|ZMW|ZWD)[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_CASHMOVE_90J_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_90J_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_90J_Type_Pattern', MT564_CAOPTN_CASHMOVE_90J_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_90J_Type_Pattern = MT564_CAOPTN_CASHMOVE_90J_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90K_Type_Pattern
class MT564_CAOPTN_CASHMOVE_90K_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_90K_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2330, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_90K_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_90K_Type_Pattern._CF_pattern.addPattern(pattern='(:(PRPP)//[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_CASHMOVE_90K_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_90K_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_90K_Type_Pattern', MT564_CAOPTN_CASHMOVE_90K_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_90K_Type_Pattern = MT564_CAOPTN_CASHMOVE_90K_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90L_Type_Pattern
class MT564_CAOPTN_CASHMOVE_90L_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_90L_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2343, 1)
    _Documentation = None
MT564_CAOPTN_CASHMOVE_90L_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_CASHMOVE_90L_Type_Pattern._CF_pattern.addPattern(pattern='(:(OFFR)//(N)?[0-9,(?0-9)]{1,15})')
MT564_CAOPTN_CASHMOVE_90L_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_CASHMOVE_90L_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_90L_Type_Pattern', MT564_CAOPTN_CASHMOVE_90L_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_CASHMOVE_90L_Type_Pattern = MT564_CAOPTN_CASHMOVE_90L_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_CAOPTN_70E-4!c_Type_Pattern
class MT564_CAOPTN_70E_4c_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_70E-4!c_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2356, 1)
    _Documentation = None
MT564_CAOPTN_70E_4c_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_CAOPTN_70E_4c_Type_Pattern._CF_pattern.addPattern(pattern="(:(ADTX|TXNR|INCO|COMP|NSER|TAXE|DISC|CETI)//(([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,35}\\n?){1,10})")
MT564_CAOPTN_70E_4c_Type_Pattern._InitializeFacetMap(MT564_CAOPTN_70E_4c_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_70E-4!c_Type_Pattern', MT564_CAOPTN_70E_4c_Type_Pattern)
_module_typeBindings.MT564_CAOPTN_70E_4c_Type_Pattern = MT564_CAOPTN_70E_4c_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_ADDINFO_70E-4!c_Type_Pattern
class MT564_ADDINFO_70E_4c_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_ADDINFO_70E-4!c_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2369, 1)
    _Documentation = None
MT564_ADDINFO_70E_4c_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_ADDINFO_70E_4c_Type_Pattern._CF_pattern.addPattern(pattern="(:(ADTX|TXNR|REGI|INCO|COMP|PACO|TAXE|DISC|BAIN|CETI)//(([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,35}\\n?){1,10})")
MT564_ADDINFO_70E_4c_Type_Pattern._InitializeFacetMap(MT564_ADDINFO_70E_4c_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_ADDINFO_70E-4!c_Type_Pattern', MT564_ADDINFO_70E_4c_Type_Pattern)
_module_typeBindings.MT564_ADDINFO_70E_4c_Type_Pattern = MT564_ADDINFO_70E_4c_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_ADDINFO_95L_Type_Pattern
class MT564_ADDINFO_95L_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_ADDINFO_95L_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2382, 1)
    _Documentation = None
MT564_ADDINFO_95L_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_ADDINFO_95L_Type_Pattern._CF_pattern.addPattern(pattern='(:(ISAG|ISSU|OFFO|TAGT)//[A-Z0-9]{18}[0-9]{2})')
MT564_ADDINFO_95L_Type_Pattern._InitializeFacetMap(MT564_ADDINFO_95L_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_ADDINFO_95L_Type_Pattern', MT564_ADDINFO_95L_Type_Pattern)
_module_typeBindings.MT564_ADDINFO_95L_Type_Pattern = MT564_ADDINFO_95L_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_ADDINFO_95P_Type_Pattern
class MT564_ADDINFO_95P_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_ADDINFO_95P_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2395, 1)
    _Documentation = None
MT564_ADDINFO_95P_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_ADDINFO_95P_Type_Pattern._CF_pattern.addPattern(pattern='(:(MEOR|MERE|ISAG|PAYA|CODO|REGR|DROP|PSAG|RESA|SOLA|INFA|ISSU|OFFO|TAGT)//[A-Z]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3})?)')
MT564_ADDINFO_95P_Type_Pattern._InitializeFacetMap(MT564_ADDINFO_95P_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_ADDINFO_95P_Type_Pattern', MT564_ADDINFO_95P_Type_Pattern)
_module_typeBindings.MT564_ADDINFO_95P_Type_Pattern = MT564_ADDINFO_95P_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_ADDINFO_95Q_Type_Pattern
class MT564_ADDINFO_95Q_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_ADDINFO_95Q_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2408, 1)
    _Documentation = None
MT564_ADDINFO_95Q_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_ADDINFO_95Q_Type_Pattern._CF_pattern.addPattern(pattern="(:(MEOR|MERE|ISAG|PAYA|CODO|REGR|DROP|PSAG|RESA|SOLA|INFA|ISSU|OFFO|TAGT)//(([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,35}\\n?){1,4})")
MT564_ADDINFO_95Q_Type_Pattern._InitializeFacetMap(MT564_ADDINFO_95Q_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_ADDINFO_95Q_Type_Pattern', MT564_ADDINFO_95Q_Type_Pattern)
_module_typeBindings.MT564_ADDINFO_95Q_Type_Pattern = MT564_ADDINFO_95Q_Type_Pattern

# Atomic simple type: {http://www.w3schools.com}MT564_ADDINFO_95R_Type_Pattern
class MT564_ADDINFO_95R_Type_Pattern (pyxb.binding.datatypes.string):

    """An atomic simple type."""

    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_ADDINFO_95R_Type_Pattern')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2421, 1)
    _Documentation = None
MT564_ADDINFO_95R_Type_Pattern._CF_pattern = pyxb.binding.facets.CF_pattern()
MT564_ADDINFO_95R_Type_Pattern._CF_pattern.addPattern(pattern="(:(MEOR|MERE|ISAG|PAYA|CODO|REGR|DROP|PSAG|RESA|SOLA|INFA|ISSU|OFFO|TAGT)/[A-Z0-9]{1,8}/([a-zA-Z0-9]|/|-|\\?|:|\\(|\\)|\\.|,|'|\\+|\\n|\\s){1,34})")
MT564_ADDINFO_95R_Type_Pattern._InitializeFacetMap(MT564_ADDINFO_95R_Type_Pattern._CF_pattern)
Namespace.addCategoryObject('typeBinding', 'MT564_ADDINFO_95R_Type_Pattern', MT564_ADDINFO_95R_Type_Pattern)
_module_typeBindings.MT564_ADDINFO_95R_Type_Pattern = MT564_ADDINFO_95R_Type_Pattern

# Complex type {http://www.w3schools.com}MT564_GENL with content type ELEMENT_ONLY
class MT564_GENL (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_GENL with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2434, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.w3schools.com}ContinuationIndicator uses Python identifier ContinuationIndicator
    __ContinuationIndicator = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ContinuationIndicator'), 'ContinuationIndicator', '__httpwww_w3schools_com_MT564_GENL_httpwww_w3schools_comContinuationIndicator', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2436, 3), )

    
    ContinuationIndicator = property(__ContinuationIndicator.value, __ContinuationIndicator.set, None, None)

    
    # Element {http://www.w3schools.com}Reference uses Python identifier Reference
    __Reference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Reference'), 'Reference', '__httpwww_w3schools_com_MT564_GENL_httpwww_w3schools_comReference', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2437, 3), )

    
    Reference = property(__Reference.value, __Reference.set, None, None)

    
    # Element {http://www.w3schools.com}FunctionOfMessage uses Python identifier FunctionOfMessage
    __FunctionOfMessage = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'FunctionOfMessage'), 'FunctionOfMessage', '__httpwww_w3schools_com_MT564_GENL_httpwww_w3schools_comFunctionOfMessage', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2438, 3), )

    
    FunctionOfMessage = property(__FunctionOfMessage.value, __FunctionOfMessage.set, None, None)

    
    # Element {http://www.w3schools.com}Indicator uses Python identifier Indicator
    __Indicator = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Indicator'), 'Indicator', '__httpwww_w3schools_com_MT564_GENL_httpwww_w3schools_comIndicator', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2439, 3), )

    
    Indicator = property(__Indicator.value, __Indicator.set, None, None)

    
    # Element {http://www.w3schools.com}PreparationDateTime_A uses Python identifier PreparationDateTime_A
    __PreparationDateTime_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PreparationDateTime_A'), 'PreparationDateTime_A', '__httpwww_w3schools_com_MT564_GENL_httpwww_w3schools_comPreparationDateTime_A', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2441, 4), )

    
    PreparationDateTime_A = property(__PreparationDateTime_A.value, __PreparationDateTime_A.set, None, None)

    
    # Element {http://www.w3schools.com}PreparationDateTime_C uses Python identifier PreparationDateTime_C
    __PreparationDateTime_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PreparationDateTime_C'), 'PreparationDateTime_C', '__httpwww_w3schools_com_MT564_GENL_httpwww_w3schools_comPreparationDateTime_C', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2442, 4), )

    
    PreparationDateTime_C = property(__PreparationDateTime_C.value, __PreparationDateTime_C.set, None, None)

    
    # Element {http://www.w3schools.com}ProcessingStatus uses Python identifier ProcessingStatus
    __ProcessingStatus = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ProcessingStatus'), 'ProcessingStatus', '__httpwww_w3schools_com_MT564_GENL_httpwww_w3schools_comProcessingStatus', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2444, 3), )

    
    ProcessingStatus = property(__ProcessingStatus.value, __ProcessingStatus.set, None, None)

    
    # Element {http://www.w3schools.com}LINK uses Python identifier LINK
    __LINK = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'LINK'), 'LINK', '__httpwww_w3schools_com_MT564_GENL_httpwww_w3schools_comLINK', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2445, 3), )

    
    LINK = property(__LINK.value, __LINK.set, None, None)

    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_GENL_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='16R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2447, 2)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2447, 2)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_GENL_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2448, 2)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2448, 2)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    
    # Attribute formatTag uses Python identifier formatTag
    __formatTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'formatTag'), 'formatTag', '__httpwww_w3schools_com_MT564_GENL_formatTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='GENL')
    __formatTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2449, 2)
    __formatTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2449, 2)
    
    formatTag = property(__formatTag.value, __formatTag.set, None, None)

    _ElementMap.update({
        __ContinuationIndicator.name() : __ContinuationIndicator,
        __Reference.name() : __Reference,
        __FunctionOfMessage.name() : __FunctionOfMessage,
        __Indicator.name() : __Indicator,
        __PreparationDateTime_A.name() : __PreparationDateTime_A,
        __PreparationDateTime_C.name() : __PreparationDateTime_C,
        __ProcessingStatus.name() : __ProcessingStatus,
        __LINK.name() : __LINK
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory,
        __formatTag.name() : __formatTag
    })
_module_typeBindings.MT564_GENL = MT564_GENL
Namespace.addCategoryObject('typeBinding', 'MT564_GENL', MT564_GENL)


# Complex type {http://www.w3schools.com}MT564_GENL_LINK with content type ELEMENT_ONLY
class MT564_GENL_LINK (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_GENL_LINK with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_LINK')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2451, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.w3schools.com}LinkageTypeIndicator uses Python identifier LinkageTypeIndicator
    __LinkageTypeIndicator = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'LinkageTypeIndicator'), 'LinkageTypeIndicator', '__httpwww_w3schools_com_MT564_GENL_LINK_httpwww_w3schools_comLinkageTypeIndicator', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2453, 3), )

    
    LinkageTypeIndicator = property(__LinkageTypeIndicator.value, __LinkageTypeIndicator.set, None, None)

    
    # Element {http://www.w3schools.com}LinkedMessage_A uses Python identifier LinkedMessage_A
    __LinkedMessage_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'LinkedMessage_A'), 'LinkedMessage_A', '__httpwww_w3schools_com_MT564_GENL_LINK_httpwww_w3schools_comLinkedMessage_A', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2455, 4), )

    
    LinkedMessage_A = property(__LinkedMessage_A.value, __LinkedMessage_A.set, None, None)

    
    # Element {http://www.w3schools.com}LinkedMessage_B uses Python identifier LinkedMessage_B
    __LinkedMessage_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'LinkedMessage_B'), 'LinkedMessage_B', '__httpwww_w3schools_com_MT564_GENL_LINK_httpwww_w3schools_comLinkedMessage_B', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2456, 4), )

    
    LinkedMessage_B = property(__LinkedMessage_B.value, __LinkedMessage_B.set, None, None)

    
    # Element {http://www.w3schools.com}Reference uses Python identifier Reference
    __Reference = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Reference'), 'Reference', '__httpwww_w3schools_com_MT564_GENL_LINK_httpwww_w3schools_comReference', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2458, 3), )

    
    Reference = property(__Reference.value, __Reference.set, None, None)

    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_GENL_LINK_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='16R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2460, 2)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2460, 2)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_GENL_LINK_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2461, 2)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2461, 2)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    
    # Attribute formatTag uses Python identifier formatTag
    __formatTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'formatTag'), 'formatTag', '__httpwww_w3schools_com_MT564_GENL_LINK_formatTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='LINK')
    __formatTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2462, 2)
    __formatTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2462, 2)
    
    formatTag = property(__formatTag.value, __formatTag.set, None, None)

    _ElementMap.update({
        __LinkageTypeIndicator.name() : __LinkageTypeIndicator,
        __LinkedMessage_A.name() : __LinkedMessage_A,
        __LinkedMessage_B.name() : __LinkedMessage_B,
        __Reference.name() : __Reference
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory,
        __formatTag.name() : __formatTag
    })
_module_typeBindings.MT564_GENL_LINK = MT564_GENL_LINK
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_LINK', MT564_GENL_LINK)


# Complex type {http://www.w3schools.com}MT564_USECU with content type ELEMENT_ONLY
class MT564_USECU (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2464, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.w3schools.com}IdentificationOfFinancialInstrument uses Python identifier IdentificationOfFinancialInstrument
    __IdentificationOfFinancialInstrument = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'IdentificationOfFinancialInstrument'), 'IdentificationOfFinancialInstrument', '__httpwww_w3schools_com_MT564_USECU_httpwww_w3schools_comIdentificationOfFinancialInstrument', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2466, 3), )

    
    IdentificationOfFinancialInstrument = property(__IdentificationOfFinancialInstrument.value, __IdentificationOfFinancialInstrument.set, None, None)

    
    # Element {http://www.w3schools.com}FIA uses Python identifier FIA
    __FIA = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'FIA'), 'FIA', '__httpwww_w3schools_com_MT564_USECU_httpwww_w3schools_comFIA', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2467, 3), )

    
    FIA = property(__FIA.value, __FIA.set, None, None)

    
    # Element {http://www.w3schools.com}ACCTINFO uses Python identifier ACCTINFO
    __ACCTINFO = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ACCTINFO'), 'ACCTINFO', '__httpwww_w3schools_com_MT564_USECU_httpwww_w3schools_comACCTINFO', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2468, 3), )

    
    ACCTINFO = property(__ACCTINFO.value, __ACCTINFO.set, None, None)

    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='16R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2470, 2)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2470, 2)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2471, 2)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2471, 2)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    
    # Attribute formatTag uses Python identifier formatTag
    __formatTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'formatTag'), 'formatTag', '__httpwww_w3schools_com_MT564_USECU_formatTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='USECU')
    __formatTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2472, 2)
    __formatTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2472, 2)
    
    formatTag = property(__formatTag.value, __formatTag.set, None, None)

    _ElementMap.update({
        __IdentificationOfFinancialInstrument.name() : __IdentificationOfFinancialInstrument,
        __FIA.name() : __FIA,
        __ACCTINFO.name() : __ACCTINFO
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory,
        __formatTag.name() : __formatTag
    })
_module_typeBindings.MT564_USECU = MT564_USECU
Namespace.addCategoryObject('typeBinding', 'MT564_USECU', MT564_USECU)


# Complex type {http://www.w3schools.com}MT564_USECU_FIA with content type ELEMENT_ONLY
class MT564_USECU_FIA (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_FIA with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2474, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.w3schools.com}PlaceOfListing uses Python identifier PlaceOfListing
    __PlaceOfListing = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfListing'), 'PlaceOfListing', '__httpwww_w3schools_com_MT564_USECU_FIA_httpwww_w3schools_comPlaceOfListing', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2476, 3), )

    
    PlaceOfListing = property(__PlaceOfListing.value, __PlaceOfListing.set, None, None)

    
    # Element {http://www.w3schools.com}MethodOfInterestComputationIndicator uses Python identifier MethodOfInterestComputationIndicator
    __MethodOfInterestComputationIndicator = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MethodOfInterestComputationIndicator'), 'MethodOfInterestComputationIndicator', '__httpwww_w3schools_com_MT564_USECU_FIA_httpwww_w3schools_comMethodOfInterestComputationIndicator', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2477, 3), )

    
    MethodOfInterestComputationIndicator = property(__MethodOfInterestComputationIndicator.value, __MethodOfInterestComputationIndicator.set, None, None)

    
    # Element {http://www.w3schools.com}TypeOfFinancialInstrument_A uses Python identifier TypeOfFinancialInstrument_A
    __TypeOfFinancialInstrument_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_A'), 'TypeOfFinancialInstrument_A', '__httpwww_w3schools_com_MT564_USECU_FIA_httpwww_w3schools_comTypeOfFinancialInstrument_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2479, 4), )

    
    TypeOfFinancialInstrument_A = property(__TypeOfFinancialInstrument_A.value, __TypeOfFinancialInstrument_A.set, None, None)

    
    # Element {http://www.w3schools.com}TypeOfFinancialInstrument_B uses Python identifier TypeOfFinancialInstrument_B
    __TypeOfFinancialInstrument_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_B'), 'TypeOfFinancialInstrument_B', '__httpwww_w3schools_com_MT564_USECU_FIA_httpwww_w3schools_comTypeOfFinancialInstrument_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2480, 4), )

    
    TypeOfFinancialInstrument_B = property(__TypeOfFinancialInstrument_B.value, __TypeOfFinancialInstrument_B.set, None, None)

    
    # Element {http://www.w3schools.com}TypeOfFinancialInstrument_C uses Python identifier TypeOfFinancialInstrument_C
    __TypeOfFinancialInstrument_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_C'), 'TypeOfFinancialInstrument_C', '__httpwww_w3schools_com_MT564_USECU_FIA_httpwww_w3schools_comTypeOfFinancialInstrument_C', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2481, 4), )

    
    TypeOfFinancialInstrument_C = property(__TypeOfFinancialInstrument_C.value, __TypeOfFinancialInstrument_C.set, None, None)

    
    # Element {http://www.w3schools.com}CurrencyOfDenomination uses Python identifier CurrencyOfDenomination
    __CurrencyOfDenomination = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CurrencyOfDenomination'), 'CurrencyOfDenomination', '__httpwww_w3schools_com_MT564_USECU_FIA_httpwww_w3schools_comCurrencyOfDenomination', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2483, 3), )

    
    CurrencyOfDenomination = property(__CurrencyOfDenomination.value, __CurrencyOfDenomination.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime uses Python identifier DateTime
    __DateTime = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime'), 'DateTime', '__httpwww_w3schools_com_MT564_USECU_FIA_httpwww_w3schools_comDateTime', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2484, 3), )

    
    DateTime = property(__DateTime.value, __DateTime.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_A uses Python identifier Rate_A
    __Rate_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_A'), 'Rate_A', '__httpwww_w3schools_com_MT564_USECU_FIA_httpwww_w3schools_comRate_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2486, 4), )

    
    Rate_A = property(__Rate_A.value, __Rate_A.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_D uses Python identifier Rate_D
    __Rate_D = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_D'), 'Rate_D', '__httpwww_w3schools_com_MT564_USECU_FIA_httpwww_w3schools_comRate_D', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2487, 4), )

    
    Rate_D = property(__Rate_D.value, __Rate_D.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_K uses Python identifier Rate_K
    __Rate_K = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_K'), 'Rate_K', '__httpwww_w3schools_com_MT564_USECU_FIA_httpwww_w3schools_comRate_K', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2488, 4), )

    
    Rate_K = property(__Rate_K.value, __Rate_K.set, None, None)

    
    # Element {http://www.w3schools.com}QuantityOfFinancialInstrument uses Python identifier QuantityOfFinancialInstrument
    __QuantityOfFinancialInstrument = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument'), 'QuantityOfFinancialInstrument', '__httpwww_w3schools_com_MT564_USECU_FIA_httpwww_w3schools_comQuantityOfFinancialInstrument', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2490, 3), )

    
    QuantityOfFinancialInstrument = property(__QuantityOfFinancialInstrument.value, __QuantityOfFinancialInstrument.set, None, None)

    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_FIA_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='16R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2492, 2)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2492, 2)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_FIA_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2493, 2)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2493, 2)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    
    # Attribute formatTag uses Python identifier formatTag
    __formatTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'formatTag'), 'formatTag', '__httpwww_w3schools_com_MT564_USECU_FIA_formatTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='FIA')
    __formatTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2494, 2)
    __formatTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2494, 2)
    
    formatTag = property(__formatTag.value, __formatTag.set, None, None)

    _ElementMap.update({
        __PlaceOfListing.name() : __PlaceOfListing,
        __MethodOfInterestComputationIndicator.name() : __MethodOfInterestComputationIndicator,
        __TypeOfFinancialInstrument_A.name() : __TypeOfFinancialInstrument_A,
        __TypeOfFinancialInstrument_B.name() : __TypeOfFinancialInstrument_B,
        __TypeOfFinancialInstrument_C.name() : __TypeOfFinancialInstrument_C,
        __CurrencyOfDenomination.name() : __CurrencyOfDenomination,
        __DateTime.name() : __DateTime,
        __Rate_A.name() : __Rate_A,
        __Rate_D.name() : __Rate_D,
        __Rate_K.name() : __Rate_K,
        __QuantityOfFinancialInstrument.name() : __QuantityOfFinancialInstrument
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory,
        __formatTag.name() : __formatTag
    })
_module_typeBindings.MT564_USECU_FIA = MT564_USECU_FIA
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA', MT564_USECU_FIA)


# Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO with content type ELEMENT_ONLY
class MT564_USECU_ACCTINFO (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2496, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.w3schools.com}AccountOwner_P uses Python identifier AccountOwner_P
    __AccountOwner_P = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AccountOwner_P'), 'AccountOwner_P', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_httpwww_w3schools_comAccountOwner_P', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2499, 4), )

    
    AccountOwner_P = property(__AccountOwner_P.value, __AccountOwner_P.set, None, None)

    
    # Element {http://www.w3schools.com}AccountOwner_R uses Python identifier AccountOwner_R
    __AccountOwner_R = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'AccountOwner_R'), 'AccountOwner_R', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_httpwww_w3schools_comAccountOwner_R', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2500, 4), )

    
    AccountOwner_R = property(__AccountOwner_R.value, __AccountOwner_R.set, None, None)

    
    # Element {http://www.w3schools.com}SafekeepingAccount_A uses Python identifier SafekeepingAccount_A
    __SafekeepingAccount_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SafekeepingAccount_A'), 'SafekeepingAccount_A', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_httpwww_w3schools_comSafekeepingAccount_A', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2503, 4), )

    
    SafekeepingAccount_A = property(__SafekeepingAccount_A.value, __SafekeepingAccount_A.set, None, None)

    
    # Element {http://www.w3schools.com}SafekeepingAccount_C uses Python identifier SafekeepingAccount_C
    __SafekeepingAccount_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SafekeepingAccount_C'), 'SafekeepingAccount_C', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_httpwww_w3schools_comSafekeepingAccount_C', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2504, 4), )

    
    SafekeepingAccount_C = property(__SafekeepingAccount_C.value, __SafekeepingAccount_C.set, None, None)

    
    # Element {http://www.w3schools.com}PlaceofSafekeeping_B uses Python identifier PlaceofSafekeeping_B
    __PlaceofSafekeeping_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PlaceofSafekeeping_B'), 'PlaceofSafekeeping_B', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_httpwww_w3schools_comPlaceofSafekeeping_B', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2507, 4), )

    
    PlaceofSafekeeping_B = property(__PlaceofSafekeeping_B.value, __PlaceofSafekeeping_B.set, None, None)

    
    # Element {http://www.w3schools.com}PlaceofSafekeeping_C uses Python identifier PlaceofSafekeeping_C
    __PlaceofSafekeeping_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PlaceofSafekeeping_C'), 'PlaceofSafekeeping_C', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_httpwww_w3schools_comPlaceofSafekeeping_C', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2508, 4), )

    
    PlaceofSafekeeping_C = property(__PlaceofSafekeeping_C.value, __PlaceofSafekeeping_C.set, None, None)

    
    # Element {http://www.w3schools.com}PlaceofSafekeeping_F uses Python identifier PlaceofSafekeeping_F
    __PlaceofSafekeeping_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PlaceofSafekeeping_F'), 'PlaceofSafekeeping_F', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_httpwww_w3schools_comPlaceofSafekeeping_F', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2509, 4), )

    
    PlaceofSafekeeping_F = property(__PlaceofSafekeeping_F.value, __PlaceofSafekeeping_F.set, None, None)

    
    # Element {http://www.w3schools.com}Balance_B uses Python identifier Balance_B
    __Balance_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Balance_B'), 'Balance_B', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_httpwww_w3schools_comBalance_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2512, 4), )

    
    Balance_B = property(__Balance_B.value, __Balance_B.set, None, None)

    
    # Element {http://www.w3schools.com}Balance_C uses Python identifier Balance_C
    __Balance_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Balance_C'), 'Balance_C', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_httpwww_w3schools_comBalance_C', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2513, 4), )

    
    Balance_C = property(__Balance_C.value, __Balance_C.set, None, None)

    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='16R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2516, 2)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2516, 2)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2517, 2)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2517, 2)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    
    # Attribute formatTag uses Python identifier formatTag
    __formatTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'formatTag'), 'formatTag', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_formatTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='ACCTINFO')
    __formatTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2518, 2)
    __formatTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2518, 2)
    
    formatTag = property(__formatTag.value, __formatTag.set, None, None)

    _ElementMap.update({
        __AccountOwner_P.name() : __AccountOwner_P,
        __AccountOwner_R.name() : __AccountOwner_R,
        __SafekeepingAccount_A.name() : __SafekeepingAccount_A,
        __SafekeepingAccount_C.name() : __SafekeepingAccount_C,
        __PlaceofSafekeeping_B.name() : __PlaceofSafekeeping_B,
        __PlaceofSafekeeping_C.name() : __PlaceofSafekeeping_C,
        __PlaceofSafekeeping_F.name() : __PlaceofSafekeeping_F,
        __Balance_B.name() : __Balance_B,
        __Balance_C.name() : __Balance_C
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory,
        __formatTag.name() : __formatTag
    })
_module_typeBindings.MT564_USECU_ACCTINFO = MT564_USECU_ACCTINFO
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO', MT564_USECU_ACCTINFO)


# Complex type {http://www.w3schools.com}MT564_INTSEC with content type ELEMENT_ONLY
class MT564_INTSEC (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2520, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.w3schools.com}IdentificationOfFinancialInstrument uses Python identifier IdentificationOfFinancialInstrument
    __IdentificationOfFinancialInstrument = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'IdentificationOfFinancialInstrument'), 'IdentificationOfFinancialInstrument', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comIdentificationOfFinancialInstrument', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2522, 3), )

    
    IdentificationOfFinancialInstrument = property(__IdentificationOfFinancialInstrument.value, __IdentificationOfFinancialInstrument.set, None, None)

    
    # Element {http://www.w3schools.com}QuantityOfIntermediateSecurities_B uses Python identifier QuantityOfIntermediateSecurities_B
    __QuantityOfIntermediateSecurities_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfIntermediateSecurities_B'), 'QuantityOfIntermediateSecurities_B', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comQuantityOfIntermediateSecurities_B', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2524, 4), )

    
    QuantityOfIntermediateSecurities_B = property(__QuantityOfIntermediateSecurities_B.value, __QuantityOfIntermediateSecurities_B.set, None, None)

    
    # Element {http://www.w3schools.com}QuantityOfIntermediateSecurities_E uses Python identifier QuantityOfIntermediateSecurities_E
    __QuantityOfIntermediateSecurities_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfIntermediateSecurities_E'), 'QuantityOfIntermediateSecurities_E', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comQuantityOfIntermediateSecurities_E', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2525, 4), )

    
    QuantityOfIntermediateSecurities_E = property(__QuantityOfIntermediateSecurities_E.value, __QuantityOfIntermediateSecurities_E.set, None, None)

    
    # Element {http://www.w3schools.com}Balance_B uses Python identifier Balance_B
    __Balance_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Balance_B'), 'Balance_B', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comBalance_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2528, 4), )

    
    Balance_B = property(__Balance_B.value, __Balance_B.set, None, None)

    
    # Element {http://www.w3schools.com}Balance_C uses Python identifier Balance_C
    __Balance_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Balance_C'), 'Balance_C', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comBalance_C', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2529, 4), )

    
    Balance_C = property(__Balance_C.value, __Balance_C.set, None, None)

    
    # Element {http://www.w3schools.com}Indicator uses Python identifier Indicator
    __Indicator = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Indicator'), 'Indicator', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comIndicator', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2531, 3), )

    
    Indicator = property(__Indicator.value, __Indicator.set, None, None)

    
    # Element {http://www.w3schools.com}IntermediateSecuritiesToUnderlying uses Python identifier IntermediateSecuritiesToUnderlying
    __IntermediateSecuritiesToUnderlying = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'IntermediateSecuritiesToUnderlying'), 'IntermediateSecuritiesToUnderlying', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comIntermediateSecuritiesToUnderlying', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2532, 3), )

    
    IntermediateSecuritiesToUnderlying = property(__IntermediateSecuritiesToUnderlying.value, __IntermediateSecuritiesToUnderlying.set, None, None)

    
    # Element {http://www.w3schools.com}MarketPrice uses Python identifier MarketPrice
    __MarketPrice = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MarketPrice'), 'MarketPrice', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comMarketPrice', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2533, 3), )

    
    MarketPrice = property(__MarketPrice.value, __MarketPrice.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_A uses Python identifier DateTime_A
    __DateTime_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A'), 'DateTime_A', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comDateTime_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2535, 4), )

    
    DateTime_A = property(__DateTime_A.value, __DateTime_A.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_B uses Python identifier DateTime_B
    __DateTime_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B'), 'DateTime_B', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comDateTime_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2536, 4), )

    
    DateTime_B = property(__DateTime_B.value, __DateTime_B.set, None, None)

    
    # Element {http://www.w3schools.com}TradingPeriod_A uses Python identifier TradingPeriod_A
    __TradingPeriod_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_A'), 'TradingPeriod_A', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comTradingPeriod_A', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2539, 4), )

    
    TradingPeriod_A = property(__TradingPeriod_A.value, __TradingPeriod_A.set, None, None)

    
    # Element {http://www.w3schools.com}TradingPeriod_B uses Python identifier TradingPeriod_B
    __TradingPeriod_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_B'), 'TradingPeriod_B', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comTradingPeriod_B', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2540, 4), )

    
    TradingPeriod_B = property(__TradingPeriod_B.value, __TradingPeriod_B.set, None, None)

    
    # Element {http://www.w3schools.com}TradingPeriod_C uses Python identifier TradingPeriod_C
    __TradingPeriod_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_C'), 'TradingPeriod_C', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comTradingPeriod_C', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2541, 4), )

    
    TradingPeriod_C = property(__TradingPeriod_C.value, __TradingPeriod_C.set, None, None)

    
    # Element {http://www.w3schools.com}TradingPeriod_D uses Python identifier TradingPeriod_D
    __TradingPeriod_D = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_D'), 'TradingPeriod_D', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comTradingPeriod_D', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2542, 4), )

    
    TradingPeriod_D = property(__TradingPeriod_D.value, __TradingPeriod_D.set, None, None)

    
    # Element {http://www.w3schools.com}TradingPeriod_E uses Python identifier TradingPeriod_E
    __TradingPeriod_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_E'), 'TradingPeriod_E', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comTradingPeriod_E', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2543, 4), )

    
    TradingPeriod_E = property(__TradingPeriod_E.value, __TradingPeriod_E.set, None, None)

    
    # Element {http://www.w3schools.com}TradingPeriod_F uses Python identifier TradingPeriod_F
    __TradingPeriod_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_F'), 'TradingPeriod_F', '__httpwww_w3schools_com_MT564_INTSEC_httpwww_w3schools_comTradingPeriod_F', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2544, 4), )

    
    TradingPeriod_F = property(__TradingPeriod_F.value, __TradingPeriod_F.set, None, None)

    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='16R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2547, 2)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2547, 2)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2548, 2)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2548, 2)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    
    # Attribute formatTag uses Python identifier formatTag
    __formatTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'formatTag'), 'formatTag', '__httpwww_w3schools_com_MT564_INTSEC_formatTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='INTSEC')
    __formatTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2549, 2)
    __formatTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2549, 2)
    
    formatTag = property(__formatTag.value, __formatTag.set, None, None)

    _ElementMap.update({
        __IdentificationOfFinancialInstrument.name() : __IdentificationOfFinancialInstrument,
        __QuantityOfIntermediateSecurities_B.name() : __QuantityOfIntermediateSecurities_B,
        __QuantityOfIntermediateSecurities_E.name() : __QuantityOfIntermediateSecurities_E,
        __Balance_B.name() : __Balance_B,
        __Balance_C.name() : __Balance_C,
        __Indicator.name() : __Indicator,
        __IntermediateSecuritiesToUnderlying.name() : __IntermediateSecuritiesToUnderlying,
        __MarketPrice.name() : __MarketPrice,
        __DateTime_A.name() : __DateTime_A,
        __DateTime_B.name() : __DateTime_B,
        __TradingPeriod_A.name() : __TradingPeriod_A,
        __TradingPeriod_B.name() : __TradingPeriod_B,
        __TradingPeriod_C.name() : __TradingPeriod_C,
        __TradingPeriod_D.name() : __TradingPeriod_D,
        __TradingPeriod_E.name() : __TradingPeriod_E,
        __TradingPeriod_F.name() : __TradingPeriod_F
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory,
        __formatTag.name() : __formatTag
    })
_module_typeBindings.MT564_INTSEC = MT564_INTSEC
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC', MT564_INTSEC)


# Complex type {http://www.w3schools.com}MT564_CADETL with content type ELEMENT_ONLY
class MT564_CADETL (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2551, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.w3schools.com}DateTime_A uses Python identifier DateTime_A
    __DateTime_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A'), 'DateTime_A', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comDateTime_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2554, 4), )

    
    DateTime_A = property(__DateTime_A.value, __DateTime_A.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_B uses Python identifier DateTime_B
    __DateTime_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B'), 'DateTime_B', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comDateTime_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2555, 4), )

    
    DateTime_B = property(__DateTime_B.value, __DateTime_B.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_C uses Python identifier DateTime_C
    __DateTime_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_C'), 'DateTime_C', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comDateTime_C', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2556, 4), )

    
    DateTime_C = property(__DateTime_C.value, __DateTime_C.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_E uses Python identifier DateTime_E
    __DateTime_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_E'), 'DateTime_E', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comDateTime_E', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2557, 4), )

    
    DateTime_E = property(__DateTime_E.value, __DateTime_E.set, None, None)

    
    # Element {http://www.w3schools.com}Period_A uses Python identifier Period_A
    __Period_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Period_A'), 'Period_A', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comPeriod_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2560, 4), )

    
    Period_A = property(__Period_A.value, __Period_A.set, None, None)

    
    # Element {http://www.w3schools.com}Period_B uses Python identifier Period_B
    __Period_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Period_B'), 'Period_B', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comPeriod_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2561, 4), )

    
    Period_B = property(__Period_B.value, __Period_B.set, None, None)

    
    # Element {http://www.w3schools.com}Period_C uses Python identifier Period_C
    __Period_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Period_C'), 'Period_C', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comPeriod_C', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2562, 4), )

    
    Period_C = property(__Period_C.value, __Period_C.set, None, None)

    
    # Element {http://www.w3schools.com}Period_D uses Python identifier Period_D
    __Period_D = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Period_D'), 'Period_D', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comPeriod_D', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2563, 4), )

    
    Period_D = property(__Period_D.value, __Period_D.set, None, None)

    
    # Element {http://www.w3schools.com}Period_E uses Python identifier Period_E
    __Period_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Period_E'), 'Period_E', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comPeriod_E', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2564, 4), )

    
    Period_E = property(__Period_E.value, __Period_E.set, None, None)

    
    # Element {http://www.w3schools.com}Period_F uses Python identifier Period_F
    __Period_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Period_F'), 'Period_F', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comPeriod_F', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2565, 4), )

    
    Period_F = property(__Period_F.value, __Period_F.set, None, None)

    
    # Element {http://www.w3schools.com}Period_J uses Python identifier Period_J
    __Period_J = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Period_J'), 'Period_J', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comPeriod_J', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2566, 4), )

    
    Period_J = property(__Period_J.value, __Period_J.set, None, None)

    
    # Element {http://www.w3schools.com}NumberofDaysAccrued uses Python identifier NumberofDaysAccrued
    __NumberofDaysAccrued = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'NumberofDaysAccrued'), 'NumberofDaysAccrued', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comNumberofDaysAccrued', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2568, 3), )

    
    NumberofDaysAccrued = property(__NumberofDaysAccrued.value, __NumberofDaysAccrued.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_A uses Python identifier Rate_A
    __Rate_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_A'), 'Rate_A', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comRate_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2570, 4), )

    
    Rate_A = property(__Rate_A.value, __Rate_A.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_F uses Python identifier Rate_F
    __Rate_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_F'), 'Rate_F', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comRate_F', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2571, 4), )

    
    Rate_F = property(__Rate_F.value, __Rate_F.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_K uses Python identifier Rate_K
    __Rate_K = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_K'), 'Rate_K', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comRate_K', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2572, 4), )

    
    Rate_K = property(__Rate_K.value, __Rate_K.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_P uses Python identifier Rate_P
    __Rate_P = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_P'), 'Rate_P', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comRate_P', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2573, 4), )

    
    Rate_P = property(__Rate_P.value, __Rate_P.set, None, None)

    
    # Element {http://www.w3schools.com}Price_A uses Python identifier Price_A
    __Price_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_A'), 'Price_A', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comPrice_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2576, 4), )

    
    Price_A = property(__Price_A.value, __Price_A.set, None, None)

    
    # Element {http://www.w3schools.com}Price_B uses Python identifier Price_B
    __Price_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_B'), 'Price_B', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comPrice_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2577, 4), )

    
    Price_B = property(__Price_B.value, __Price_B.set, None, None)

    
    # Element {http://www.w3schools.com}Price_E uses Python identifier Price_E
    __Price_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_E'), 'Price_E', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comPrice_E', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2578, 4), )

    
    Price_E = property(__Price_E.value, __Price_E.set, None, None)

    
    # Element {http://www.w3schools.com}Price_L uses Python identifier Price_L
    __Price_L = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_L'), 'Price_L', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comPrice_L', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2579, 4), )

    
    Price_L = property(__Price_L.value, __Price_L.set, None, None)

    
    # Element {http://www.w3schools.com}QuantityOfFinancialInstrument_B uses Python identifier QuantityOfFinancialInstrument_B
    __QuantityOfFinancialInstrument_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument_B'), 'QuantityOfFinancialInstrument_B', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comQuantityOfFinancialInstrument_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2582, 4), )

    
    QuantityOfFinancialInstrument_B = property(__QuantityOfFinancialInstrument_B.value, __QuantityOfFinancialInstrument_B.set, None, None)

    
    # Element {http://www.w3schools.com}QuantityOfFinancialInstrument_C uses Python identifier QuantityOfFinancialInstrument_C
    __QuantityOfFinancialInstrument_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument_C'), 'QuantityOfFinancialInstrument_C', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comQuantityOfFinancialInstrument_C', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2583, 4), )

    
    QuantityOfFinancialInstrument_C = property(__QuantityOfFinancialInstrument_C.value, __QuantityOfFinancialInstrument_C.set, None, None)

    
    # Element {http://www.w3schools.com}CouponNumber_A uses Python identifier CouponNumber_A
    __CouponNumber_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CouponNumber_A'), 'CouponNumber_A', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comCouponNumber_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2586, 4), )

    
    CouponNumber_A = property(__CouponNumber_A.value, __CouponNumber_A.set, None, None)

    
    # Element {http://www.w3schools.com}CouponNumber_B uses Python identifier CouponNumber_B
    __CouponNumber_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CouponNumber_B'), 'CouponNumber_B', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comCouponNumber_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2587, 4), )

    
    CouponNumber_B = property(__CouponNumber_B.value, __CouponNumber_B.set, None, None)

    
    # Element {http://www.w3schools.com}Flag uses Python identifier Flag
    __Flag = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Flag'), 'Flag', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comFlag', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2589, 3), )

    
    Flag = property(__Flag.value, __Flag.set, None, None)

    
    # Element {http://www.w3schools.com}Indicator uses Python identifier Indicator
    __Indicator = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Indicator'), 'Indicator', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comIndicator', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2590, 3), )

    
    Indicator = property(__Indicator.value, __Indicator.set, None, None)

    
    # Element {http://www.w3schools.com}Place uses Python identifier Place
    __Place = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Place'), 'Place', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comPlace', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2591, 3), )

    
    Place = property(__Place.value, __Place.set, None, None)

    
    # Element {http://www.w3schools.com}Narrative_E uses Python identifier Narrative_E
    __Narrative_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Narrative_E'), 'Narrative_E', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comNarrative_E', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2593, 4), )

    
    Narrative_E = property(__Narrative_E.value, __Narrative_E.set, None, None)

    
    # Element {http://www.w3schools.com}Narrative_G uses Python identifier Narrative_G
    __Narrative_G = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Narrative_G'), 'Narrative_G', '__httpwww_w3schools_com_MT564_CADETL_httpwww_w3schools_comNarrative_G', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2594, 4), )

    
    Narrative_G = property(__Narrative_G.value, __Narrative_G.set, None, None)

    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='16R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2597, 2)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2597, 2)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2598, 2)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2598, 2)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    
    # Attribute formatTag uses Python identifier formatTag
    __formatTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'formatTag'), 'formatTag', '__httpwww_w3schools_com_MT564_CADETL_formatTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='CADETL')
    __formatTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2599, 2)
    __formatTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2599, 2)
    
    formatTag = property(__formatTag.value, __formatTag.set, None, None)

    _ElementMap.update({
        __DateTime_A.name() : __DateTime_A,
        __DateTime_B.name() : __DateTime_B,
        __DateTime_C.name() : __DateTime_C,
        __DateTime_E.name() : __DateTime_E,
        __Period_A.name() : __Period_A,
        __Period_B.name() : __Period_B,
        __Period_C.name() : __Period_C,
        __Period_D.name() : __Period_D,
        __Period_E.name() : __Period_E,
        __Period_F.name() : __Period_F,
        __Period_J.name() : __Period_J,
        __NumberofDaysAccrued.name() : __NumberofDaysAccrued,
        __Rate_A.name() : __Rate_A,
        __Rate_F.name() : __Rate_F,
        __Rate_K.name() : __Rate_K,
        __Rate_P.name() : __Rate_P,
        __Price_A.name() : __Price_A,
        __Price_B.name() : __Price_B,
        __Price_E.name() : __Price_E,
        __Price_L.name() : __Price_L,
        __QuantityOfFinancialInstrument_B.name() : __QuantityOfFinancialInstrument_B,
        __QuantityOfFinancialInstrument_C.name() : __QuantityOfFinancialInstrument_C,
        __CouponNumber_A.name() : __CouponNumber_A,
        __CouponNumber_B.name() : __CouponNumber_B,
        __Flag.name() : __Flag,
        __Indicator.name() : __Indicator,
        __Place.name() : __Place,
        __Narrative_E.name() : __Narrative_E,
        __Narrative_G.name() : __Narrative_G
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory,
        __formatTag.name() : __formatTag
    })
_module_typeBindings.MT564_CADETL = MT564_CADETL
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL', MT564_CADETL)


# Complex type {http://www.w3schools.com}MT564_CAOPTN with content type ELEMENT_ONLY
class MT564_CAOPTN (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2601, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.w3schools.com}NumberIdentification uses Python identifier NumberIdentification
    __NumberIdentification = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'NumberIdentification'), 'NumberIdentification', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comNumberIdentification', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2603, 3), )

    
    NumberIdentification = property(__NumberIdentification.value, __NumberIdentification.set, None, None)

    
    # Element {http://www.w3schools.com}Indicator uses Python identifier Indicator
    __Indicator = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Indicator'), 'Indicator', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comIndicator', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2604, 3), )

    
    Indicator = property(__Indicator.value, __Indicator.set, None, None)

    
    # Element {http://www.w3schools.com}Place uses Python identifier Place
    __Place = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Place'), 'Place', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comPlace', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2605, 3), )

    
    Place = property(__Place.value, __Place.set, None, None)

    
    # Element {http://www.w3schools.com}CurrencyOption uses Python identifier CurrencyOption
    __CurrencyOption = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CurrencyOption'), 'CurrencyOption', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comCurrencyOption', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2606, 3), )

    
    CurrencyOption = property(__CurrencyOption.value, __CurrencyOption.set, None, None)

    
    # Element {http://www.w3schools.com}Flag uses Python identifier Flag
    __Flag = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Flag'), 'Flag', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comFlag', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2607, 3), )

    
    Flag = property(__Flag.value, __Flag.set, None, None)

    
    # Element {http://www.w3schools.com}IdentificationOfFinancialInstrument uses Python identifier IdentificationOfFinancialInstrument
    __IdentificationOfFinancialInstrument = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'IdentificationOfFinancialInstrument'), 'IdentificationOfFinancialInstrument', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comIdentificationOfFinancialInstrument', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2608, 3), )

    
    IdentificationOfFinancialInstrument = property(__IdentificationOfFinancialInstrument.value, __IdentificationOfFinancialInstrument.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_A uses Python identifier DateTime_A
    __DateTime_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A'), 'DateTime_A', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comDateTime_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2610, 4), )

    
    DateTime_A = property(__DateTime_A.value, __DateTime_A.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_B uses Python identifier DateTime_B
    __DateTime_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B'), 'DateTime_B', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comDateTime_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2611, 4), )

    
    DateTime_B = property(__DateTime_B.value, __DateTime_B.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_C uses Python identifier DateTime_C
    __DateTime_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_C'), 'DateTime_C', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comDateTime_C', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2612, 4), )

    
    DateTime_C = property(__DateTime_C.value, __DateTime_C.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_E uses Python identifier DateTime_E
    __DateTime_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_E'), 'DateTime_E', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comDateTime_E', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2613, 4), )

    
    DateTime_E = property(__DateTime_E.value, __DateTime_E.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_F uses Python identifier DateTime_F
    __DateTime_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_F'), 'DateTime_F', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comDateTime_F', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2614, 4), )

    
    DateTime_F = property(__DateTime_F.value, __DateTime_F.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_J uses Python identifier DateTime_J
    __DateTime_J = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_J'), 'DateTime_J', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comDateTime_J', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2615, 4), )

    
    DateTime_J = property(__DateTime_J.value, __DateTime_J.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_K uses Python identifier DateTime_K
    __DateTime_K = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_K'), 'DateTime_K', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comDateTime_K', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2616, 4), )

    
    DateTime_K = property(__DateTime_K.value, __DateTime_K.set, None, None)

    
    # Element {http://www.w3schools.com}Period_A uses Python identifier Period_A
    __Period_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Period_A'), 'Period_A', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comPeriod_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2619, 4), )

    
    Period_A = property(__Period_A.value, __Period_A.set, None, None)

    
    # Element {http://www.w3schools.com}Period_B uses Python identifier Period_B
    __Period_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Period_B'), 'Period_B', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comPeriod_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2620, 4), )

    
    Period_B = property(__Period_B.value, __Period_B.set, None, None)

    
    # Element {http://www.w3schools.com}Period_C uses Python identifier Period_C
    __Period_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Period_C'), 'Period_C', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comPeriod_C', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2621, 4), )

    
    Period_C = property(__Period_C.value, __Period_C.set, None, None)

    
    # Element {http://www.w3schools.com}Period_D uses Python identifier Period_D
    __Period_D = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Period_D'), 'Period_D', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comPeriod_D', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2622, 4), )

    
    Period_D = property(__Period_D.value, __Period_D.set, None, None)

    
    # Element {http://www.w3schools.com}Period_E uses Python identifier Period_E
    __Period_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Period_E'), 'Period_E', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comPeriod_E', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2623, 4), )

    
    Period_E = property(__Period_E.value, __Period_E.set, None, None)

    
    # Element {http://www.w3schools.com}Period_F uses Python identifier Period_F
    __Period_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Period_F'), 'Period_F', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comPeriod_F', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2624, 4), )

    
    Period_F = property(__Period_F.value, __Period_F.set, None, None)

    
    # Element {http://www.w3schools.com}Period_J uses Python identifier Period_J
    __Period_J = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Period_J'), 'Period_J', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comPeriod_J', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2625, 4), )

    
    Period_J = property(__Period_J.value, __Period_J.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_A uses Python identifier Rate_A
    __Rate_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_A'), 'Rate_A', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comRate_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2628, 4), )

    
    Rate_A = property(__Rate_A.value, __Rate_A.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_B uses Python identifier Rate_B
    __Rate_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_B'), 'Rate_B', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comRate_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2629, 4), )

    
    Rate_B = property(__Rate_B.value, __Rate_B.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_F uses Python identifier Rate_F
    __Rate_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_F'), 'Rate_F', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comRate_F', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2630, 4), )

    
    Rate_F = property(__Rate_F.value, __Rate_F.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_H uses Python identifier Rate_H
    __Rate_H = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_H'), 'Rate_H', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comRate_H', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2631, 4), )

    
    Rate_H = property(__Rate_H.value, __Rate_H.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_J uses Python identifier Rate_J
    __Rate_J = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_J'), 'Rate_J', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comRate_J', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2632, 4), )

    
    Rate_J = property(__Rate_J.value, __Rate_J.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_K uses Python identifier Rate_K
    __Rate_K = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_K'), 'Rate_K', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comRate_K', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2633, 4), )

    
    Rate_K = property(__Rate_K.value, __Rate_K.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_R uses Python identifier Rate_R
    __Rate_R = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_R'), 'Rate_R', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comRate_R', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2634, 4), )

    
    Rate_R = property(__Rate_R.value, __Rate_R.set, None, None)

    
    # Element {http://www.w3schools.com}Price_A uses Python identifier Price_A
    __Price_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_A'), 'Price_A', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comPrice_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2637, 4), )

    
    Price_A = property(__Price_A.value, __Price_A.set, None, None)

    
    # Element {http://www.w3schools.com}Price_B uses Python identifier Price_B
    __Price_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_B'), 'Price_B', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comPrice_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2638, 4), )

    
    Price_B = property(__Price_B.value, __Price_B.set, None, None)

    
    # Element {http://www.w3schools.com}Price_E uses Python identifier Price_E
    __Price_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_E'), 'Price_E', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comPrice_E', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2639, 4), )

    
    Price_E = property(__Price_E.value, __Price_E.set, None, None)

    
    # Element {http://www.w3schools.com}QuantityOfFinancialInstrument_B uses Python identifier QuantityOfFinancialInstrument_B
    __QuantityOfFinancialInstrument_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument_B'), 'QuantityOfFinancialInstrument_B', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comQuantityOfFinancialInstrument_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2642, 4), )

    
    QuantityOfFinancialInstrument_B = property(__QuantityOfFinancialInstrument_B.value, __QuantityOfFinancialInstrument_B.set, None, None)

    
    # Element {http://www.w3schools.com}QuantityOfFinancialInstrument_C uses Python identifier QuantityOfFinancialInstrument_C
    __QuantityOfFinancialInstrument_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument_C'), 'QuantityOfFinancialInstrument_C', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comQuantityOfFinancialInstrument_C', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2643, 4), )

    
    QuantityOfFinancialInstrument_C = property(__QuantityOfFinancialInstrument_C.value, __QuantityOfFinancialInstrument_C.set, None, None)

    
    # Element {http://www.w3schools.com}SECMOVE uses Python identifier SECMOVE
    __SECMOVE = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'SECMOVE'), 'SECMOVE', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comSECMOVE', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2645, 3), )

    
    SECMOVE = property(__SECMOVE.value, __SECMOVE.set, None, None)

    
    # Element {http://www.w3schools.com}CASHMOVE uses Python identifier CASHMOVE
    __CASHMOVE = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CASHMOVE'), 'CASHMOVE', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comCASHMOVE', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2646, 3), )

    
    CASHMOVE = property(__CASHMOVE.value, __CASHMOVE.set, None, None)

    
    # Element {http://www.w3schools.com}Narrative uses Python identifier Narrative
    __Narrative = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Narrative'), 'Narrative', '__httpwww_w3schools_com_MT564_CAOPTN_httpwww_w3schools_comNarrative', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2647, 3), )

    
    Narrative = property(__Narrative.value, __Narrative.set, None, None)

    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='16R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2649, 2)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2649, 2)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2650, 2)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2650, 2)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    
    # Attribute formatTag uses Python identifier formatTag
    __formatTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'formatTag'), 'formatTag', '__httpwww_w3schools_com_MT564_CAOPTN_formatTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='CAOPTN')
    __formatTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2651, 2)
    __formatTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2651, 2)
    
    formatTag = property(__formatTag.value, __formatTag.set, None, None)

    _ElementMap.update({
        __NumberIdentification.name() : __NumberIdentification,
        __Indicator.name() : __Indicator,
        __Place.name() : __Place,
        __CurrencyOption.name() : __CurrencyOption,
        __Flag.name() : __Flag,
        __IdentificationOfFinancialInstrument.name() : __IdentificationOfFinancialInstrument,
        __DateTime_A.name() : __DateTime_A,
        __DateTime_B.name() : __DateTime_B,
        __DateTime_C.name() : __DateTime_C,
        __DateTime_E.name() : __DateTime_E,
        __DateTime_F.name() : __DateTime_F,
        __DateTime_J.name() : __DateTime_J,
        __DateTime_K.name() : __DateTime_K,
        __Period_A.name() : __Period_A,
        __Period_B.name() : __Period_B,
        __Period_C.name() : __Period_C,
        __Period_D.name() : __Period_D,
        __Period_E.name() : __Period_E,
        __Period_F.name() : __Period_F,
        __Period_J.name() : __Period_J,
        __Rate_A.name() : __Rate_A,
        __Rate_B.name() : __Rate_B,
        __Rate_F.name() : __Rate_F,
        __Rate_H.name() : __Rate_H,
        __Rate_J.name() : __Rate_J,
        __Rate_K.name() : __Rate_K,
        __Rate_R.name() : __Rate_R,
        __Price_A.name() : __Price_A,
        __Price_B.name() : __Price_B,
        __Price_E.name() : __Price_E,
        __QuantityOfFinancialInstrument_B.name() : __QuantityOfFinancialInstrument_B,
        __QuantityOfFinancialInstrument_C.name() : __QuantityOfFinancialInstrument_C,
        __SECMOVE.name() : __SECMOVE,
        __CASHMOVE.name() : __CASHMOVE,
        __Narrative.name() : __Narrative
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory,
        __formatTag.name() : __formatTag
    })
_module_typeBindings.MT564_CAOPTN = MT564_CAOPTN
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN', MT564_CAOPTN)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE with content type ELEMENT_ONLY
class MT564_CAOPTN_SECMOVE (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2653, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.w3schools.com}Indicator_F uses Python identifier Indicator_F
    __Indicator_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Indicator_F'), 'Indicator_F', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comIndicator_F', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2656, 4), )

    
    Indicator_F = property(__Indicator_F.value, __Indicator_F.set, None, None)

    
    # Element {http://www.w3schools.com}Indicator_H uses Python identifier Indicator_H
    __Indicator_H = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Indicator_H'), 'Indicator_H', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comIndicator_H', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2657, 4), )

    
    Indicator_H = property(__Indicator_H.value, __Indicator_H.set, None, None)

    
    # Element {http://www.w3schools.com}IdentificationOfFinancialInstrument uses Python identifier IdentificationOfFinancialInstrument
    __IdentificationOfFinancialInstrument = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'IdentificationOfFinancialInstrument'), 'IdentificationOfFinancialInstrument', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comIdentificationOfFinancialInstrument', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2659, 3), )

    
    IdentificationOfFinancialInstrument = property(__IdentificationOfFinancialInstrument.value, __IdentificationOfFinancialInstrument.set, None, None)

    
    # Element {http://www.w3schools.com}FIA uses Python identifier FIA
    __FIA = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'FIA'), 'FIA', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comFIA', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2660, 3), )

    
    FIA = property(__FIA.value, __FIA.set, None, None)

    
    # Element {http://www.w3schools.com}EntitledQuantity uses Python identifier EntitledQuantity
    __EntitledQuantity = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'EntitledQuantity'), 'EntitledQuantity', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comEntitledQuantity', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2661, 3), )

    
    EntitledQuantity = property(__EntitledQuantity.value, __EntitledQuantity.set, None, None)

    
    # Element {http://www.w3schools.com}PlaceOfSafekeeping_B uses Python identifier PlaceOfSafekeeping_B
    __PlaceOfSafekeeping_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfSafekeeping_B'), 'PlaceOfSafekeeping_B', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comPlaceOfSafekeeping_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2663, 4), )

    
    PlaceOfSafekeeping_B = property(__PlaceOfSafekeeping_B.value, __PlaceOfSafekeeping_B.set, None, None)

    
    # Element {http://www.w3schools.com}PlaceOfSafekeeping_C uses Python identifier PlaceOfSafekeeping_C
    __PlaceOfSafekeeping_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfSafekeeping_C'), 'PlaceOfSafekeeping_C', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comPlaceOfSafekeeping_C', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2664, 4), )

    
    PlaceOfSafekeeping_C = property(__PlaceOfSafekeeping_C.value, __PlaceOfSafekeeping_C.set, None, None)

    
    # Element {http://www.w3schools.com}PlaceOfSafekeeping_F uses Python identifier PlaceOfSafekeeping_F
    __PlaceOfSafekeeping_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfSafekeeping_F'), 'PlaceOfSafekeeping_F', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comPlaceOfSafekeeping_F', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2665, 4), )

    
    PlaceOfSafekeeping_F = property(__PlaceOfSafekeeping_F.value, __PlaceOfSafekeeping_F.set, None, None)

    
    # Element {http://www.w3schools.com}CurrencyOption uses Python identifier CurrencyOption
    __CurrencyOption = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CurrencyOption'), 'CurrencyOption', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comCurrencyOption', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2668, 3), )

    
    CurrencyOption = property(__CurrencyOption.value, __CurrencyOption.set, None, None)

    
    # Element {http://www.w3schools.com}TradingPeriod_A uses Python identifier TradingPeriod_A
    __TradingPeriod_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_A'), 'TradingPeriod_A', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comTradingPeriod_A', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2670, 4), )

    
    TradingPeriod_A = property(__TradingPeriod_A.value, __TradingPeriod_A.set, None, None)

    
    # Element {http://www.w3schools.com}TradingPeriod_B uses Python identifier TradingPeriod_B
    __TradingPeriod_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_B'), 'TradingPeriod_B', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comTradingPeriod_B', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2671, 4), )

    
    TradingPeriod_B = property(__TradingPeriod_B.value, __TradingPeriod_B.set, None, None)

    
    # Element {http://www.w3schools.com}TradingPeriod_C uses Python identifier TradingPeriod_C
    __TradingPeriod_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_C'), 'TradingPeriod_C', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comTradingPeriod_C', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2672, 4), )

    
    TradingPeriod_C = property(__TradingPeriod_C.value, __TradingPeriod_C.set, None, None)

    
    # Element {http://www.w3schools.com}TradingPeriod_D uses Python identifier TradingPeriod_D
    __TradingPeriod_D = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_D'), 'TradingPeriod_D', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comTradingPeriod_D', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2673, 4), )

    
    TradingPeriod_D = property(__TradingPeriod_D.value, __TradingPeriod_D.set, None, None)

    
    # Element {http://www.w3schools.com}TradingPeriod_E uses Python identifier TradingPeriod_E
    __TradingPeriod_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_E'), 'TradingPeriod_E', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comTradingPeriod_E', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2674, 4), )

    
    TradingPeriod_E = property(__TradingPeriod_E.value, __TradingPeriod_E.set, None, None)

    
    # Element {http://www.w3schools.com}TradingPeriod_F uses Python identifier TradingPeriod_F
    __TradingPeriod_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_F'), 'TradingPeriod_F', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comTradingPeriod_F', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2675, 4), )

    
    TradingPeriod_F = property(__TradingPeriod_F.value, __TradingPeriod_F.set, None, None)

    
    # Element {http://www.w3schools.com}TradingPeriod_J uses Python identifier TradingPeriod_J
    __TradingPeriod_J = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_J'), 'TradingPeriod_J', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comTradingPeriod_J', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2676, 4), )

    
    TradingPeriod_J = property(__TradingPeriod_J.value, __TradingPeriod_J.set, None, None)

    
    # Element {http://www.w3schools.com}Price_A uses Python identifier Price_A
    __Price_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_A'), 'Price_A', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comPrice_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2679, 4), )

    
    Price_A = property(__Price_A.value, __Price_A.set, None, None)

    
    # Element {http://www.w3schools.com}Price_B uses Python identifier Price_B
    __Price_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_B'), 'Price_B', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comPrice_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2680, 4), )

    
    Price_B = property(__Price_B.value, __Price_B.set, None, None)

    
    # Element {http://www.w3schools.com}Price_E uses Python identifier Price_E
    __Price_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_E'), 'Price_E', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comPrice_E', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2681, 4), )

    
    Price_E = property(__Price_E.value, __Price_E.set, None, None)

    
    # Element {http://www.w3schools.com}Price_F uses Python identifier Price_F
    __Price_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_F'), 'Price_F', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comPrice_F', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2682, 4), )

    
    Price_F = property(__Price_F.value, __Price_F.set, None, None)

    
    # Element {http://www.w3schools.com}Price_J uses Python identifier Price_J
    __Price_J = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_J'), 'Price_J', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comPrice_J', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2683, 4), )

    
    Price_J = property(__Price_J.value, __Price_J.set, None, None)

    
    # Element {http://www.w3schools.com}Price_K uses Python identifier Price_K
    __Price_K = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_K'), 'Price_K', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comPrice_K', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2684, 4), )

    
    Price_K = property(__Price_K.value, __Price_K.set, None, None)

    
    # Element {http://www.w3schools.com}Price_L uses Python identifier Price_L
    __Price_L = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_L'), 'Price_L', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comPrice_L', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2685, 4), )

    
    Price_L = property(__Price_L.value, __Price_L.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_A uses Python identifier Rate_A
    __Rate_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_A'), 'Rate_A', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comRate_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2688, 4), )

    
    Rate_A = property(__Rate_A.value, __Rate_A.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_D uses Python identifier Rate_D
    __Rate_D = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_D'), 'Rate_D', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comRate_D', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2689, 4), )

    
    Rate_D = property(__Rate_D.value, __Rate_D.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_F uses Python identifier Rate_F
    __Rate_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_F'), 'Rate_F', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comRate_F', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2690, 4), )

    
    Rate_F = property(__Rate_F.value, __Rate_F.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_J uses Python identifier Rate_J
    __Rate_J = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_J'), 'Rate_J', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comRate_J', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2691, 4), )

    
    Rate_J = property(__Rate_J.value, __Rate_J.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_K uses Python identifier Rate_K
    __Rate_K = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_K'), 'Rate_K', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comRate_K', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2692, 4), )

    
    Rate_K = property(__Rate_K.value, __Rate_K.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_L uses Python identifier Rate_L
    __Rate_L = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_L'), 'Rate_L', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comRate_L', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2693, 4), )

    
    Rate_L = property(__Rate_L.value, __Rate_L.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_M uses Python identifier Rate_M
    __Rate_M = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_M'), 'Rate_M', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comRate_M', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2694, 4), )

    
    Rate_M = property(__Rate_M.value, __Rate_M.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_N uses Python identifier Rate_N
    __Rate_N = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_N'), 'Rate_N', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comRate_N', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2695, 4), )

    
    Rate_N = property(__Rate_N.value, __Rate_N.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_A uses Python identifier DateTime_A
    __DateTime_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A'), 'DateTime_A', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comDateTime_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2698, 4), )

    
    DateTime_A = property(__DateTime_A.value, __DateTime_A.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_B uses Python identifier DateTime_B
    __DateTime_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B'), 'DateTime_B', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comDateTime_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2699, 4), )

    
    DateTime_B = property(__DateTime_B.value, __DateTime_B.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_C uses Python identifier DateTime_C
    __DateTime_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_C'), 'DateTime_C', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comDateTime_C', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2700, 4), )

    
    DateTime_C = property(__DateTime_C.value, __DateTime_C.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_E uses Python identifier DateTime_E
    __DateTime_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_E'), 'DateTime_E', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_httpwww_w3schools_comDateTime_E', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2701, 4), )

    
    DateTime_E = property(__DateTime_E.value, __DateTime_E.set, None, None)

    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='16R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2704, 2)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2704, 2)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2705, 2)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2705, 2)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    
    # Attribute formatTag uses Python identifier formatTag
    __formatTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'formatTag'), 'formatTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_formatTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='SECMOVE')
    __formatTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2706, 2)
    __formatTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2706, 2)
    
    formatTag = property(__formatTag.value, __formatTag.set, None, None)

    _ElementMap.update({
        __Indicator_F.name() : __Indicator_F,
        __Indicator_H.name() : __Indicator_H,
        __IdentificationOfFinancialInstrument.name() : __IdentificationOfFinancialInstrument,
        __FIA.name() : __FIA,
        __EntitledQuantity.name() : __EntitledQuantity,
        __PlaceOfSafekeeping_B.name() : __PlaceOfSafekeeping_B,
        __PlaceOfSafekeeping_C.name() : __PlaceOfSafekeeping_C,
        __PlaceOfSafekeeping_F.name() : __PlaceOfSafekeeping_F,
        __CurrencyOption.name() : __CurrencyOption,
        __TradingPeriod_A.name() : __TradingPeriod_A,
        __TradingPeriod_B.name() : __TradingPeriod_B,
        __TradingPeriod_C.name() : __TradingPeriod_C,
        __TradingPeriod_D.name() : __TradingPeriod_D,
        __TradingPeriod_E.name() : __TradingPeriod_E,
        __TradingPeriod_F.name() : __TradingPeriod_F,
        __TradingPeriod_J.name() : __TradingPeriod_J,
        __Price_A.name() : __Price_A,
        __Price_B.name() : __Price_B,
        __Price_E.name() : __Price_E,
        __Price_F.name() : __Price_F,
        __Price_J.name() : __Price_J,
        __Price_K.name() : __Price_K,
        __Price_L.name() : __Price_L,
        __Rate_A.name() : __Rate_A,
        __Rate_D.name() : __Rate_D,
        __Rate_F.name() : __Rate_F,
        __Rate_J.name() : __Rate_J,
        __Rate_K.name() : __Rate_K,
        __Rate_L.name() : __Rate_L,
        __Rate_M.name() : __Rate_M,
        __Rate_N.name() : __Rate_N,
        __DateTime_A.name() : __DateTime_A,
        __DateTime_B.name() : __DateTime_B,
        __DateTime_C.name() : __DateTime_C,
        __DateTime_E.name() : __DateTime_E
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory,
        __formatTag.name() : __formatTag
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE = MT564_CAOPTN_SECMOVE
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE', MT564_CAOPTN_SECMOVE)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA with content type ELEMENT_ONLY
class MT564_CAOPTN_SECMOVE_FIA (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2708, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.w3schools.com}PlaceOfListing uses Python identifier PlaceOfListing
    __PlaceOfListing = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfListing'), 'PlaceOfListing', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_httpwww_w3schools_comPlaceOfListing', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2710, 3), )

    
    PlaceOfListing = property(__PlaceOfListing.value, __PlaceOfListing.set, None, None)

    
    # Element {http://www.w3schools.com}MethodOfInterestComputationIndicator uses Python identifier MethodOfInterestComputationIndicator
    __MethodOfInterestComputationIndicator = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'MethodOfInterestComputationIndicator'), 'MethodOfInterestComputationIndicator', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_httpwww_w3schools_comMethodOfInterestComputationIndicator', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2711, 3), )

    
    MethodOfInterestComputationIndicator = property(__MethodOfInterestComputationIndicator.value, __MethodOfInterestComputationIndicator.set, None, None)

    
    # Element {http://www.w3schools.com}TypeOfFinancialInstrument_A uses Python identifier TypeOfFinancialInstrument_A
    __TypeOfFinancialInstrument_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_A'), 'TypeOfFinancialInstrument_A', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_httpwww_w3schools_comTypeOfFinancialInstrument_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2713, 4), )

    
    TypeOfFinancialInstrument_A = property(__TypeOfFinancialInstrument_A.value, __TypeOfFinancialInstrument_A.set, None, None)

    
    # Element {http://www.w3schools.com}TypeOfFinancialInstrument_B uses Python identifier TypeOfFinancialInstrument_B
    __TypeOfFinancialInstrument_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_B'), 'TypeOfFinancialInstrument_B', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_httpwww_w3schools_comTypeOfFinancialInstrument_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2714, 4), )

    
    TypeOfFinancialInstrument_B = property(__TypeOfFinancialInstrument_B.value, __TypeOfFinancialInstrument_B.set, None, None)

    
    # Element {http://www.w3schools.com}TypeOfFinancialInstrument_C uses Python identifier TypeOfFinancialInstrument_C
    __TypeOfFinancialInstrument_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_C'), 'TypeOfFinancialInstrument_C', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_httpwww_w3schools_comTypeOfFinancialInstrument_C', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2715, 4), )

    
    TypeOfFinancialInstrument_C = property(__TypeOfFinancialInstrument_C.value, __TypeOfFinancialInstrument_C.set, None, None)

    
    # Element {http://www.w3schools.com}CurrencyOfDenomination uses Python identifier CurrencyOfDenomination
    __CurrencyOfDenomination = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CurrencyOfDenomination'), 'CurrencyOfDenomination', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_httpwww_w3schools_comCurrencyOfDenomination', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2717, 3), )

    
    CurrencyOfDenomination = property(__CurrencyOfDenomination.value, __CurrencyOfDenomination.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime uses Python identifier DateTime
    __DateTime = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime'), 'DateTime', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_httpwww_w3schools_comDateTime', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2718, 3), )

    
    DateTime = property(__DateTime.value, __DateTime.set, None, None)

    
    # Element {http://www.w3schools.com}IssuePrice_A uses Python identifier IssuePrice_A
    __IssuePrice_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'IssuePrice_A'), 'IssuePrice_A', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_httpwww_w3schools_comIssuePrice_A', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2720, 4), )

    
    IssuePrice_A = property(__IssuePrice_A.value, __IssuePrice_A.set, None, None)

    
    # Element {http://www.w3schools.com}IssuePrice_B uses Python identifier IssuePrice_B
    __IssuePrice_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'IssuePrice_B'), 'IssuePrice_B', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_httpwww_w3schools_comIssuePrice_B', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2721, 4), )

    
    IssuePrice_B = property(__IssuePrice_B.value, __IssuePrice_B.set, None, None)

    
    # Element {http://www.w3schools.com}IssuePrice_E uses Python identifier IssuePrice_E
    __IssuePrice_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'IssuePrice_E'), 'IssuePrice_E', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_httpwww_w3schools_comIssuePrice_E', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2722, 4), )

    
    IssuePrice_E = property(__IssuePrice_E.value, __IssuePrice_E.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_A uses Python identifier Rate_A
    __Rate_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_A'), 'Rate_A', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_httpwww_w3schools_comRate_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2725, 4), )

    
    Rate_A = property(__Rate_A.value, __Rate_A.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_K uses Python identifier Rate_K
    __Rate_K = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_K'), 'Rate_K', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_httpwww_w3schools_comRate_K', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2726, 4), )

    
    Rate_K = property(__Rate_K.value, __Rate_K.set, None, None)

    
    # Element {http://www.w3schools.com}QuantityOfFinancialInstrument uses Python identifier QuantityOfFinancialInstrument
    __QuantityOfFinancialInstrument = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument'), 'QuantityOfFinancialInstrument', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_httpwww_w3schools_comQuantityOfFinancialInstrument', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2728, 3), )

    
    QuantityOfFinancialInstrument = property(__QuantityOfFinancialInstrument.value, __QuantityOfFinancialInstrument.set, None, None)

    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='16R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2730, 2)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2730, 2)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2731, 2)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2731, 2)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    
    # Attribute formatTag uses Python identifier formatTag
    __formatTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'formatTag'), 'formatTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_formatTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='FIA')
    __formatTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2732, 2)
    __formatTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2732, 2)
    
    formatTag = property(__formatTag.value, __formatTag.set, None, None)

    _ElementMap.update({
        __PlaceOfListing.name() : __PlaceOfListing,
        __MethodOfInterestComputationIndicator.name() : __MethodOfInterestComputationIndicator,
        __TypeOfFinancialInstrument_A.name() : __TypeOfFinancialInstrument_A,
        __TypeOfFinancialInstrument_B.name() : __TypeOfFinancialInstrument_B,
        __TypeOfFinancialInstrument_C.name() : __TypeOfFinancialInstrument_C,
        __CurrencyOfDenomination.name() : __CurrencyOfDenomination,
        __DateTime.name() : __DateTime,
        __IssuePrice_A.name() : __IssuePrice_A,
        __IssuePrice_B.name() : __IssuePrice_B,
        __IssuePrice_E.name() : __IssuePrice_E,
        __Rate_A.name() : __Rate_A,
        __Rate_K.name() : __Rate_K,
        __QuantityOfFinancialInstrument.name() : __QuantityOfFinancialInstrument
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory,
        __formatTag.name() : __formatTag
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA = MT564_CAOPTN_SECMOVE_FIA
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA', MT564_CAOPTN_SECMOVE_FIA)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE with content type ELEMENT_ONLY
class MT564_CAOPTN_CASHMOVE (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2734, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.w3schools.com}Indicator_F uses Python identifier Indicator_F
    __Indicator_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Indicator_F'), 'Indicator_F', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comIndicator_F', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2737, 4), )

    
    Indicator_F = property(__Indicator_F.value, __Indicator_F.set, None, None)

    
    # Element {http://www.w3schools.com}Indicator_H uses Python identifier Indicator_H
    __Indicator_H = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Indicator_H'), 'Indicator_H', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comIndicator_H', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2738, 4), )

    
    Indicator_H = property(__Indicator_H.value, __Indicator_H.set, None, None)

    
    # Element {http://www.w3schools.com}Place uses Python identifier Place
    __Place = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Place'), 'Place', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comPlace', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2740, 3), )

    
    Place = property(__Place.value, __Place.set, None, None)

    
    # Element {http://www.w3schools.com}CashAccount_A uses Python identifier CashAccount_A
    __CashAccount_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CashAccount_A'), 'CashAccount_A', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comCashAccount_A', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2742, 4), )

    
    CashAccount_A = property(__CashAccount_A.value, __CashAccount_A.set, None, None)

    
    # Element {http://www.w3schools.com}CashAccount_E uses Python identifier CashAccount_E
    __CashAccount_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CashAccount_E'), 'CashAccount_E', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comCashAccount_E', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2743, 4), )

    
    CashAccount_E = property(__CashAccount_E.value, __CashAccount_E.set, None, None)

    
    # Element {http://www.w3schools.com}Amount uses Python identifier Amount
    __Amount = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Amount'), 'Amount', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comAmount', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2745, 3), )

    
    Amount = property(__Amount.value, __Amount.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_A uses Python identifier DateTime_A
    __DateTime_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A'), 'DateTime_A', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comDateTime_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2747, 4), )

    
    DateTime_A = property(__DateTime_A.value, __DateTime_A.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_B uses Python identifier DateTime_B
    __DateTime_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B'), 'DateTime_B', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comDateTime_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2748, 4), )

    
    DateTime_B = property(__DateTime_B.value, __DateTime_B.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_C uses Python identifier DateTime_C
    __DateTime_C = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_C'), 'DateTime_C', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comDateTime_C', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2749, 4), )

    
    DateTime_C = property(__DateTime_C.value, __DateTime_C.set, None, None)

    
    # Element {http://www.w3schools.com}DateTime_E uses Python identifier DateTime_E
    __DateTime_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'DateTime_E'), 'DateTime_E', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comDateTime_E', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2750, 4), )

    
    DateTime_E = property(__DateTime_E.value, __DateTime_E.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_A uses Python identifier Rate_A
    __Rate_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_A'), 'Rate_A', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comRate_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2753, 4), )

    
    Rate_A = property(__Rate_A.value, __Rate_A.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_B uses Python identifier Rate_B
    __Rate_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_B'), 'Rate_B', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comRate_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2754, 4), )

    
    Rate_B = property(__Rate_B.value, __Rate_B.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_F uses Python identifier Rate_F
    __Rate_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_F'), 'Rate_F', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comRate_F', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2755, 4), )

    
    Rate_F = property(__Rate_F.value, __Rate_F.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_H uses Python identifier Rate_H
    __Rate_H = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_H'), 'Rate_H', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comRate_H', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2756, 4), )

    
    Rate_H = property(__Rate_H.value, __Rate_H.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_J uses Python identifier Rate_J
    __Rate_J = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_J'), 'Rate_J', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comRate_J', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2757, 4), )

    
    Rate_J = property(__Rate_J.value, __Rate_J.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_K uses Python identifier Rate_K
    __Rate_K = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_K'), 'Rate_K', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comRate_K', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2758, 4), )

    
    Rate_K = property(__Rate_K.value, __Rate_K.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_M uses Python identifier Rate_M
    __Rate_M = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_M'), 'Rate_M', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comRate_M', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2759, 4), )

    
    Rate_M = property(__Rate_M.value, __Rate_M.set, None, None)

    
    # Element {http://www.w3schools.com}Rate_R uses Python identifier Rate_R
    __Rate_R = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Rate_R'), 'Rate_R', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comRate_R', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2760, 4), )

    
    Rate_R = property(__Rate_R.value, __Rate_R.set, None, None)

    
    # Element {http://www.w3schools.com}Price_A uses Python identifier Price_A
    __Price_A = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_A'), 'Price_A', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comPrice_A', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2763, 4), )

    
    Price_A = property(__Price_A.value, __Price_A.set, None, None)

    
    # Element {http://www.w3schools.com}Price_B uses Python identifier Price_B
    __Price_B = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_B'), 'Price_B', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comPrice_B', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2764, 4), )

    
    Price_B = property(__Price_B.value, __Price_B.set, None, None)

    
    # Element {http://www.w3schools.com}Price_E uses Python identifier Price_E
    __Price_E = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_E'), 'Price_E', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comPrice_E', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2765, 4), )

    
    Price_E = property(__Price_E.value, __Price_E.set, None, None)

    
    # Element {http://www.w3schools.com}Price_F uses Python identifier Price_F
    __Price_F = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_F'), 'Price_F', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comPrice_F', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2766, 4), )

    
    Price_F = property(__Price_F.value, __Price_F.set, None, None)

    
    # Element {http://www.w3schools.com}Price_J uses Python identifier Price_J
    __Price_J = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_J'), 'Price_J', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comPrice_J', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2767, 4), )

    
    Price_J = property(__Price_J.value, __Price_J.set, None, None)

    
    # Element {http://www.w3schools.com}Price_K uses Python identifier Price_K
    __Price_K = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_K'), 'Price_K', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comPrice_K', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2768, 4), )

    
    Price_K = property(__Price_K.value, __Price_K.set, None, None)

    
    # Element {http://www.w3schools.com}Price_L uses Python identifier Price_L
    __Price_L = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Price_L'), 'Price_L', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_httpwww_w3schools_comPrice_L', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2769, 4), )

    
    Price_L = property(__Price_L.value, __Price_L.set, None, None)

    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='16R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2772, 2)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2772, 2)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2773, 2)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2773, 2)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    
    # Attribute formatTag uses Python identifier formatTag
    __formatTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'formatTag'), 'formatTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_formatTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='CASHMOVE')
    __formatTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2774, 2)
    __formatTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2774, 2)
    
    formatTag = property(__formatTag.value, __formatTag.set, None, None)

    _ElementMap.update({
        __Indicator_F.name() : __Indicator_F,
        __Indicator_H.name() : __Indicator_H,
        __Place.name() : __Place,
        __CashAccount_A.name() : __CashAccount_A,
        __CashAccount_E.name() : __CashAccount_E,
        __Amount.name() : __Amount,
        __DateTime_A.name() : __DateTime_A,
        __DateTime_B.name() : __DateTime_B,
        __DateTime_C.name() : __DateTime_C,
        __DateTime_E.name() : __DateTime_E,
        __Rate_A.name() : __Rate_A,
        __Rate_B.name() : __Rate_B,
        __Rate_F.name() : __Rate_F,
        __Rate_H.name() : __Rate_H,
        __Rate_J.name() : __Rate_J,
        __Rate_K.name() : __Rate_K,
        __Rate_M.name() : __Rate_M,
        __Rate_R.name() : __Rate_R,
        __Price_A.name() : __Price_A,
        __Price_B.name() : __Price_B,
        __Price_E.name() : __Price_E,
        __Price_F.name() : __Price_F,
        __Price_J.name() : __Price_J,
        __Price_K.name() : __Price_K,
        __Price_L.name() : __Price_L
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory,
        __formatTag.name() : __formatTag
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE = MT564_CAOPTN_CASHMOVE
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE', MT564_CAOPTN_CASHMOVE)


# Complex type {http://www.w3schools.com}MT564_ADDINFO with content type ELEMENT_ONLY
class MT564_ADDINFO (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_ADDINFO with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_ADDINFO')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2776, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.w3schools.com}Narrative uses Python identifier Narrative
    __Narrative = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'Narrative'), 'Narrative', '__httpwww_w3schools_com_MT564_ADDINFO_httpwww_w3schools_comNarrative', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2778, 3), )

    
    Narrative = property(__Narrative.value, __Narrative.set, None, None)

    
    # Element {http://www.w3schools.com}PARTY_L uses Python identifier PARTY_L
    __PARTY_L = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PARTY_L'), 'PARTY_L', '__httpwww_w3schools_com_MT564_ADDINFO_httpwww_w3schools_comPARTY_L', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2780, 4), )

    
    PARTY_L = property(__PARTY_L.value, __PARTY_L.set, None, None)

    
    # Element {http://www.w3schools.com}PARTY_P uses Python identifier PARTY_P
    __PARTY_P = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PARTY_P'), 'PARTY_P', '__httpwww_w3schools_com_MT564_ADDINFO_httpwww_w3schools_comPARTY_P', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2781, 4), )

    
    PARTY_P = property(__PARTY_P.value, __PARTY_P.set, None, None)

    
    # Element {http://www.w3schools.com}PARTY_Q uses Python identifier PARTY_Q
    __PARTY_Q = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PARTY_Q'), 'PARTY_Q', '__httpwww_w3schools_com_MT564_ADDINFO_httpwww_w3schools_comPARTY_Q', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2782, 4), )

    
    PARTY_Q = property(__PARTY_Q.value, __PARTY_Q.set, None, None)

    
    # Element {http://www.w3schools.com}PARTY_R uses Python identifier PARTY_R
    __PARTY_R = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'PARTY_R'), 'PARTY_R', '__httpwww_w3schools_com_MT564_ADDINFO_httpwww_w3schools_comPARTY_R', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2783, 4), )

    
    PARTY_R = property(__PARTY_R.value, __PARTY_R.set, None, None)

    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_ADDINFO_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='16R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2786, 2)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2786, 2)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_ADDINFO_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2787, 2)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2787, 2)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    
    # Attribute formatTag uses Python identifier formatTag
    __formatTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'formatTag'), 'formatTag', '__httpwww_w3schools_com_MT564_ADDINFO_formatTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='ADDINFO')
    __formatTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2788, 2)
    __formatTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2788, 2)
    
    formatTag = property(__formatTag.value, __formatTag.set, None, None)

    _ElementMap.update({
        __Narrative.name() : __Narrative,
        __PARTY_L.name() : __PARTY_L,
        __PARTY_P.name() : __PARTY_P,
        __PARTY_Q.name() : __PARTY_Q,
        __PARTY_R.name() : __PARTY_R
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory,
        __formatTag.name() : __formatTag
    })
_module_typeBindings.MT564_ADDINFO = MT564_ADDINFO
Namespace.addCategoryObject('typeBinding', 'MT564_ADDINFO', MT564_ADDINFO)


# Complex type [anonymous] with content type ELEMENT_ONLY
class CTD_ANON (pyxb.binding.basis.complexTypeDefinition):
    """Complex type [anonymous] with content type ELEMENT_ONLY"""
    _TypeDefinition = None
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_ELEMENT_ONLY
    _Abstract = False
    _ExpandedName = None
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2791, 2)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is pyxb.binding.datatypes.anyType
    
    # Element {http://www.w3schools.com}GENL uses Python identifier GENL
    __GENL = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'GENL'), 'GENL', '__httpwww_w3schools_com_CTD_ANON_httpwww_w3schools_comGENL', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2793, 4), )

    
    GENL = property(__GENL.value, __GENL.set, None, None)

    
    # Element {http://www.w3schools.com}USECU uses Python identifier USECU
    __USECU = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'USECU'), 'USECU', '__httpwww_w3schools_com_CTD_ANON_httpwww_w3schools_comUSECU', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2794, 4), )

    
    USECU = property(__USECU.value, __USECU.set, None, None)

    
    # Element {http://www.w3schools.com}INTSEC uses Python identifier INTSEC
    __INTSEC = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'INTSEC'), 'INTSEC', '__httpwww_w3schools_com_CTD_ANON_httpwww_w3schools_comINTSEC', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2795, 4), )

    
    INTSEC = property(__INTSEC.value, __INTSEC.set, None, None)

    
    # Element {http://www.w3schools.com}CADETL uses Python identifier CADETL
    __CADETL = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CADETL'), 'CADETL', '__httpwww_w3schools_com_CTD_ANON_httpwww_w3schools_comCADETL', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2796, 4), )

    
    CADETL = property(__CADETL.value, __CADETL.set, None, None)

    
    # Element {http://www.w3schools.com}CAOPTN uses Python identifier CAOPTN
    __CAOPTN = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'CAOPTN'), 'CAOPTN', '__httpwww_w3schools_com_CTD_ANON_httpwww_w3schools_comCAOPTN', True, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2797, 4), )

    
    CAOPTN = property(__CAOPTN.value, __CAOPTN.set, None, None)

    
    # Element {http://www.w3schools.com}ADDINFO uses Python identifier ADDINFO
    __ADDINFO = pyxb.binding.content.ElementDeclaration(pyxb.namespace.ExpandedName(Namespace, 'ADDINFO'), 'ADDINFO', '__httpwww_w3schools_com_CTD_ANON_httpwww_w3schools_comADDINFO', False, pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2798, 4), )

    
    ADDINFO = property(__ADDINFO.value, __ADDINFO.set, None, None)

    _ElementMap.update({
        __GENL.name() : __GENL,
        __USECU.name() : __USECU,
        __INTSEC.name() : __INTSEC,
        __CADETL.name() : __CADETL,
        __CAOPTN.name() : __CAOPTN,
        __ADDINFO.name() : __ADDINFO
    })
    _AttributeMap.update({
        
    })
_module_typeBindings.CTD_ANON = CTD_ANON


# Complex type {http://www.w3schools.com}MT564_GENL_28E_Type with content type SIMPLE
class MT564_GENL_28E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_GENL_28E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_GENL_28E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_28E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 8, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_GENL_28E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_GENL_28E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='28E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 11, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 11, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_GENL_28E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 12, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 12, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_GENL_28E_Type = MT564_GENL_28E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_28E_Type', MT564_GENL_28E_Type)


# Complex type {http://www.w3schools.com}MT564_GENL_20C_Type with content type SIMPLE
class MT564_GENL_20C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_GENL_20C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_GENL_20C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_20C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 21, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_GENL_20C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_GENL_20C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='20C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 24, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 24, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_GENL_20C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 25, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 25, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_GENL_20C_Type = MT564_GENL_20C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_20C_Type', MT564_GENL_20C_Type)


# Complex type {http://www.w3schools.com}MT564_GENL_23G_Type with content type SIMPLE
class MT564_GENL_23G_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_GENL_23G_Type with content type SIMPLE"""
    _TypeDefinition = MT564_GENL_23G_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_23G_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 34, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_GENL_23G_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_GENL_23G_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='23G')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 37, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 37, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_GENL_23G_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 38, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 38, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_GENL_23G_Type = MT564_GENL_23G_Type
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_23G_Type', MT564_GENL_23G_Type)


# Complex type {http://www.w3schools.com}MT564_GENL_22F_Type with content type SIMPLE
class MT564_GENL_22F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_GENL_22F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_GENL_22F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_22F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 47, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_GENL_22F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_GENL_22F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='22F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 50, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 50, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_GENL_22F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 51, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 51, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_GENL_22F_Type = MT564_GENL_22F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_22F_Type', MT564_GENL_22F_Type)


# Complex type {http://www.w3schools.com}MT564_GENL_98A_Type with content type SIMPLE
class MT564_GENL_98A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_GENL_98A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_GENL_98A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_98A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 60, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_GENL_98A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_GENL_98A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 63, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 63, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_GENL_98A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 64, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 64, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_GENL_98A_Type = MT564_GENL_98A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_98A_Type', MT564_GENL_98A_Type)


# Complex type {http://www.w3schools.com}MT564_GENL_98C_Type with content type SIMPLE
class MT564_GENL_98C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_GENL_98C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_GENL_98C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_98C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 73, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_GENL_98C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_GENL_98C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 76, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 76, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_GENL_98C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 77, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 77, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_GENL_98C_Type = MT564_GENL_98C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_98C_Type', MT564_GENL_98C_Type)


# Complex type {http://www.w3schools.com}MT564_GENL_25D_Type with content type SIMPLE
class MT564_GENL_25D_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_GENL_25D_Type with content type SIMPLE"""
    _TypeDefinition = MT564_GENL_25D_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_25D_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 86, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_GENL_25D_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_GENL_25D_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='25D')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 89, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 89, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_GENL_25D_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 90, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 90, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_GENL_25D_Type = MT564_GENL_25D_Type
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_25D_Type', MT564_GENL_25D_Type)


# Complex type {http://www.w3schools.com}MT564_GENL_LINK_22F_Type with content type SIMPLE
class MT564_GENL_LINK_22F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_GENL_LINK_22F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_GENL_LINK_22F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_LINK_22F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 99, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_GENL_LINK_22F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_GENL_LINK_22F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='22F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 102, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 102, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_GENL_LINK_22F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 103, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 103, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_GENL_LINK_22F_Type = MT564_GENL_LINK_22F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_LINK_22F_Type', MT564_GENL_LINK_22F_Type)


# Complex type {http://www.w3schools.com}MT564_GENL_LINK_13A_Type with content type SIMPLE
class MT564_GENL_LINK_13A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_GENL_LINK_13A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_GENL_LINK_13A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_LINK_13A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 112, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_GENL_LINK_13A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_GENL_LINK_13A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='13A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 115, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 115, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_GENL_LINK_13A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 116, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 116, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_GENL_LINK_13A_Type = MT564_GENL_LINK_13A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_LINK_13A_Type', MT564_GENL_LINK_13A_Type)


# Complex type {http://www.w3schools.com}MT564_GENL_LINK_13B_Type with content type SIMPLE
class MT564_GENL_LINK_13B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_GENL_LINK_13B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_GENL_LINK_13B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_LINK_13B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 125, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_GENL_LINK_13B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_GENL_LINK_13B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='13B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 128, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 128, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_GENL_LINK_13B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 129, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 129, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_GENL_LINK_13B_Type = MT564_GENL_LINK_13B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_LINK_13B_Type', MT564_GENL_LINK_13B_Type)


# Complex type {http://www.w3schools.com}MT564_GENL_LINK_20C_Type with content type SIMPLE
class MT564_GENL_LINK_20C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_GENL_LINK_20C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_GENL_LINK_20C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_GENL_LINK_20C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 138, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_GENL_LINK_20C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_GENL_LINK_20C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='20C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 141, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 141, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_GENL_LINK_20C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 142, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 142, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_GENL_LINK_20C_Type = MT564_GENL_LINK_20C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_GENL_LINK_20C_Type', MT564_GENL_LINK_20C_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_35B_Type with content type SIMPLE
class MT564_USECU_35B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_35B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_35B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_35B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 151, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_35B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_35B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='35B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 154, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 154, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_35B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 155, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 155, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_35B_Type = MT564_USECU_35B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_35B_Type', MT564_USECU_35B_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_FIA_94B_Type with content type SIMPLE
class MT564_USECU_FIA_94B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_FIA_94B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_FIA_94B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_94B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 164, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_FIA_94B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_FIA_94B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='94B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 167, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 167, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_FIA_94B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 168, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 168, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_FIA_94B_Type = MT564_USECU_FIA_94B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_94B_Type', MT564_USECU_FIA_94B_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_FIA_22F_Type with content type SIMPLE
class MT564_USECU_FIA_22F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_FIA_22F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_FIA_22F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_22F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 177, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_FIA_22F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_FIA_22F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='22F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 180, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 180, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_FIA_22F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 181, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 181, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_FIA_22F_Type = MT564_USECU_FIA_22F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_22F_Type', MT564_USECU_FIA_22F_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_FIA_12A_Type with content type SIMPLE
class MT564_USECU_FIA_12A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_FIA_12A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_FIA_12A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_12A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 190, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_FIA_12A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_FIA_12A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='12A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 193, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 193, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_FIA_12A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 194, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 194, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_FIA_12A_Type = MT564_USECU_FIA_12A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_12A_Type', MT564_USECU_FIA_12A_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_FIA_12B_Type with content type SIMPLE
class MT564_USECU_FIA_12B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_FIA_12B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_FIA_12B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_12B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 203, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_FIA_12B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_FIA_12B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='12B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 206, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 206, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_FIA_12B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 207, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 207, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_FIA_12B_Type = MT564_USECU_FIA_12B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_12B_Type', MT564_USECU_FIA_12B_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_FIA_12C_Type with content type SIMPLE
class MT564_USECU_FIA_12C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_FIA_12C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_FIA_12C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_12C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 216, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_FIA_12C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_FIA_12C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='12C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 219, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 219, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_FIA_12C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 220, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 220, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_FIA_12C_Type = MT564_USECU_FIA_12C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_12C_Type', MT564_USECU_FIA_12C_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_FIA_11A_Type with content type SIMPLE
class MT564_USECU_FIA_11A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_FIA_11A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_FIA_11A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_11A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 229, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_FIA_11A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_FIA_11A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='11A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 232, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 232, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_FIA_11A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 233, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 233, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_FIA_11A_Type = MT564_USECU_FIA_11A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_11A_Type', MT564_USECU_FIA_11A_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_FIA_98A_Type with content type SIMPLE
class MT564_USECU_FIA_98A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_FIA_98A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_FIA_98A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_98A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 242, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_FIA_98A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_FIA_98A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 245, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 245, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_FIA_98A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 246, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 246, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_FIA_98A_Type = MT564_USECU_FIA_98A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_98A_Type', MT564_USECU_FIA_98A_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_FIA_92A_Type with content type SIMPLE
class MT564_USECU_FIA_92A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_FIA_92A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_FIA_92A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_92A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 255, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_FIA_92A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_FIA_92A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 258, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 258, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_FIA_92A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 259, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 259, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_FIA_92A_Type = MT564_USECU_FIA_92A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_92A_Type', MT564_USECU_FIA_92A_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_FIA_92D_Type with content type SIMPLE
class MT564_USECU_FIA_92D_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_FIA_92D_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_FIA_92D_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_92D_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 268, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_FIA_92D_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_FIA_92D_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92D')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 271, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 271, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_FIA_92D_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 272, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 272, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_FIA_92D_Type = MT564_USECU_FIA_92D_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_92D_Type', MT564_USECU_FIA_92D_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_FIA_92K_Type with content type SIMPLE
class MT564_USECU_FIA_92K_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_FIA_92K_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_FIA_92K_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_92K_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 281, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_FIA_92K_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_FIA_92K_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92K')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 284, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 284, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_FIA_92K_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 285, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 285, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_FIA_92K_Type = MT564_USECU_FIA_92K_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_92K_Type', MT564_USECU_FIA_92K_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_FIA_36B_Type with content type SIMPLE
class MT564_USECU_FIA_36B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_FIA_36B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_FIA_36B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_FIA_36B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 294, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_FIA_36B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_FIA_36B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='36B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 297, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 297, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_FIA_36B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 298, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 298, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_FIA_36B_Type = MT564_USECU_FIA_36B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_FIA_36B_Type', MT564_USECU_FIA_36B_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_95P_Type with content type SIMPLE
class MT564_USECU_ACCTINFO_95P_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_95P_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_ACCTINFO_95P_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_95P_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 307, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_ACCTINFO_95P_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_95P_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='95P')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 310, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 310, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_95P_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 311, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 311, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_ACCTINFO_95P_Type = MT564_USECU_ACCTINFO_95P_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_95P_Type', MT564_USECU_ACCTINFO_95P_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_95R_Type with content type SIMPLE
class MT564_USECU_ACCTINFO_95R_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_95R_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_ACCTINFO_95R_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_95R_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 320, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_ACCTINFO_95R_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_95R_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='95R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 323, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 323, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_95R_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 324, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 324, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_ACCTINFO_95R_Type = MT564_USECU_ACCTINFO_95R_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_95R_Type', MT564_USECU_ACCTINFO_95R_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_97A_Type with content type SIMPLE
class MT564_USECU_ACCTINFO_97A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_97A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_ACCTINFO_97A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_97A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 333, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_ACCTINFO_97A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_97A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='97A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 336, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 336, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_97A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 337, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 337, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_ACCTINFO_97A_Type = MT564_USECU_ACCTINFO_97A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_97A_Type', MT564_USECU_ACCTINFO_97A_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_97C_Type with content type SIMPLE
class MT564_USECU_ACCTINFO_97C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_97C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_ACCTINFO_97C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_97C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 346, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_ACCTINFO_97C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_97C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='97C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 349, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 349, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_97C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 350, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 350, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_ACCTINFO_97C_Type = MT564_USECU_ACCTINFO_97C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_97C_Type', MT564_USECU_ACCTINFO_97C_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_94B_Type with content type SIMPLE
class MT564_USECU_ACCTINFO_94B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_94B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_ACCTINFO_94B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_94B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 359, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_ACCTINFO_94B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_94B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='94B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 362, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 362, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_94B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 363, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 363, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_ACCTINFO_94B_Type = MT564_USECU_ACCTINFO_94B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_94B_Type', MT564_USECU_ACCTINFO_94B_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_94C_Type with content type SIMPLE
class MT564_USECU_ACCTINFO_94C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_94C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_ACCTINFO_94C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_94C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 372, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_ACCTINFO_94C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_94C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='94C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 375, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 375, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_94C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 376, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 376, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_ACCTINFO_94C_Type = MT564_USECU_ACCTINFO_94C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_94C_Type', MT564_USECU_ACCTINFO_94C_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_94F_Type with content type SIMPLE
class MT564_USECU_ACCTINFO_94F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_94F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_ACCTINFO_94F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_94F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 385, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_ACCTINFO_94F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_94F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='94F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 388, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 388, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_94F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 389, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 389, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_ACCTINFO_94F_Type = MT564_USECU_ACCTINFO_94F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_94F_Type', MT564_USECU_ACCTINFO_94F_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_93B_Type with content type SIMPLE
class MT564_USECU_ACCTINFO_93B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_93B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_ACCTINFO_93B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_93B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 398, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_ACCTINFO_93B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_93B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='93B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 401, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 401, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_93B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 402, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 402, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_ACCTINFO_93B_Type = MT564_USECU_ACCTINFO_93B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_93B_Type', MT564_USECU_ACCTINFO_93B_Type)


# Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_93C_Type with content type SIMPLE
class MT564_USECU_ACCTINFO_93C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_USECU_ACCTINFO_93C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_USECU_ACCTINFO_93C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_USECU_ACCTINFO_93C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 411, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_USECU_ACCTINFO_93C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_93C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='93C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 414, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 414, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_USECU_ACCTINFO_93C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 415, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 415, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_USECU_ACCTINFO_93C_Type = MT564_USECU_ACCTINFO_93C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_USECU_ACCTINFO_93C_Type', MT564_USECU_ACCTINFO_93C_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_35B_Type with content type SIMPLE
class MT564_INTSEC_35B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_35B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_35B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_35B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 424, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_35B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_35B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='35B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 427, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 427, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_35B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 428, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 428, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_35B_Type = MT564_INTSEC_35B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_35B_Type', MT564_INTSEC_35B_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_36B_Type with content type SIMPLE
class MT564_INTSEC_36B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_36B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_36B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_36B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 437, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_36B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_36B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='36B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 440, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 440, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_36B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 441, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 441, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_36B_Type = MT564_INTSEC_36B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_36B_Type', MT564_INTSEC_36B_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_36E_Type with content type SIMPLE
class MT564_INTSEC_36E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_36E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_36E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_36E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 450, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_36E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_36E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='36E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 453, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 453, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_36E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 454, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 454, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_36E_Type = MT564_INTSEC_36E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_36E_Type', MT564_INTSEC_36E_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_93B_Type with content type SIMPLE
class MT564_INTSEC_93B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_93B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_93B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_93B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 463, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_93B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_93B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='93B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 466, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 466, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_93B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 467, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 467, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_93B_Type = MT564_INTSEC_93B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_93B_Type', MT564_INTSEC_93B_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_93C_Type with content type SIMPLE
class MT564_INTSEC_93C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_93C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_93C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_93C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 476, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_93C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_93C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='93C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 479, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 479, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_93C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 480, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 480, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_93C_Type = MT564_INTSEC_93C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_93C_Type', MT564_INTSEC_93C_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_22F-4!c_Type with content type SIMPLE
class MT564_INTSEC_22F_4c_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_22F-4!c_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_22F_4c_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_22F-4!c_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 489, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_22F_4c_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_22F_4c_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='22F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 492, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 492, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_22F_4c_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 493, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 493, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_22F_4c_Type = MT564_INTSEC_22F_4c_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_22F-4!c_Type', MT564_INTSEC_22F_4c_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_92D_Type with content type SIMPLE
class MT564_INTSEC_92D_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_92D_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_92D_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_92D_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 502, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_92D_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_92D_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92D')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 505, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 505, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_92D_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 506, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 506, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_92D_Type = MT564_INTSEC_92D_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_92D_Type', MT564_INTSEC_92D_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_90B_Type with content type SIMPLE
class MT564_INTSEC_90B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_90B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_90B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_90B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 515, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_90B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_90B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 518, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 518, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_90B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 519, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 519, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_90B_Type = MT564_INTSEC_90B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_90B_Type', MT564_INTSEC_90B_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_98A_Type with content type SIMPLE
class MT564_INTSEC_98A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_98A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_98A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_98A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 528, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_98A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_98A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 531, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 531, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_98A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 532, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 532, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_98A_Type = MT564_INTSEC_98A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_98A_Type', MT564_INTSEC_98A_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_98B_Type with content type SIMPLE
class MT564_INTSEC_98B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_98B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_98B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_98B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 541, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_98B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_98B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 544, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 544, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_98B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 545, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 545, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_98B_Type = MT564_INTSEC_98B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_98B_Type', MT564_INTSEC_98B_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_69A_Type with content type SIMPLE
class MT564_INTSEC_69A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_69A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_69A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_69A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 554, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_69A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_69A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 557, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 557, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_69A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 558, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 558, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_69A_Type = MT564_INTSEC_69A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_69A_Type', MT564_INTSEC_69A_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_69B_Type with content type SIMPLE
class MT564_INTSEC_69B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_69B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_69B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_69B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 567, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_69B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_69B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 570, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 570, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_69B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 571, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 571, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_69B_Type = MT564_INTSEC_69B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_69B_Type', MT564_INTSEC_69B_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_69C_Type with content type SIMPLE
class MT564_INTSEC_69C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_69C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_69C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_69C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 580, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_69C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_69C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 583, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 583, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_69C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 584, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 584, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_69C_Type = MT564_INTSEC_69C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_69C_Type', MT564_INTSEC_69C_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_69D_Type with content type SIMPLE
class MT564_INTSEC_69D_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_69D_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_69D_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_69D_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 593, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_69D_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_69D_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69D')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 596, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 596, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_69D_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 597, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 597, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_69D_Type = MT564_INTSEC_69D_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_69D_Type', MT564_INTSEC_69D_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_69E_Type with content type SIMPLE
class MT564_INTSEC_69E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_69E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_69E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_69E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 606, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_69E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_69E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 609, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 609, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_69E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 610, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 610, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_69E_Type = MT564_INTSEC_69E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_69E_Type', MT564_INTSEC_69E_Type)


# Complex type {http://www.w3schools.com}MT564_INTSEC_69F_Type with content type SIMPLE
class MT564_INTSEC_69F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_INTSEC_69F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_INTSEC_69F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_INTSEC_69F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 619, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_INTSEC_69F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_INTSEC_69F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 622, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 622, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_INTSEC_69F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 623, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 623, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_INTSEC_69F_Type = MT564_INTSEC_69F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_INTSEC_69F_Type', MT564_INTSEC_69F_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_98A_Type with content type SIMPLE
class MT564_CADETL_98A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_98A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_98A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_98A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 632, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_98A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_98A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 635, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 635, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_98A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 636, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 636, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_98A_Type = MT564_CADETL_98A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_98A_Type', MT564_CADETL_98A_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_98B_Type with content type SIMPLE
class MT564_CADETL_98B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_98B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_98B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_98B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 645, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_98B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_98B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 648, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 648, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_98B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 649, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 649, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_98B_Type = MT564_CADETL_98B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_98B_Type', MT564_CADETL_98B_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_98C_Type with content type SIMPLE
class MT564_CADETL_98C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_98C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_98C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_98C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 658, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_98C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_98C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 661, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 661, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_98C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 662, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 662, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_98C_Type = MT564_CADETL_98C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_98C_Type', MT564_CADETL_98C_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_98E_Type with content type SIMPLE
class MT564_CADETL_98E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_98E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_98E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_98E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 671, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_98E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_98E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 674, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 674, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_98E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 675, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 675, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_98E_Type = MT564_CADETL_98E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_98E_Type', MT564_CADETL_98E_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_69A_Type with content type SIMPLE
class MT564_CADETL_69A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_69A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_69A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_69A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 684, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_69A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_69A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 687, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 687, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_69A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 688, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 688, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_69A_Type = MT564_CADETL_69A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_69A_Type', MT564_CADETL_69A_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_69B_Type with content type SIMPLE
class MT564_CADETL_69B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_69B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_69B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_69B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 697, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_69B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_69B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 700, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 700, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_69B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 701, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 701, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_69B_Type = MT564_CADETL_69B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_69B_Type', MT564_CADETL_69B_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_69C_Type with content type SIMPLE
class MT564_CADETL_69C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_69C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_69C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_69C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 710, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_69C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_69C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 713, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 713, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_69C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 714, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 714, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_69C_Type = MT564_CADETL_69C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_69C_Type', MT564_CADETL_69C_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_69D_Type with content type SIMPLE
class MT564_CADETL_69D_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_69D_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_69D_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_69D_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 723, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_69D_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_69D_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69D')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 726, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 726, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_69D_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 727, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 727, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_69D_Type = MT564_CADETL_69D_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_69D_Type', MT564_CADETL_69D_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_69E_Type with content type SIMPLE
class MT564_CADETL_69E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_69E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_69E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_69E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 736, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_69E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_69E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 739, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 739, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_69E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 740, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 740, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_69E_Type = MT564_CADETL_69E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_69E_Type', MT564_CADETL_69E_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_69F_Type with content type SIMPLE
class MT564_CADETL_69F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_69F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_69F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_69F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 749, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_69F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_69F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 752, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 752, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_69F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 753, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 753, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_69F_Type = MT564_CADETL_69F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_69F_Type', MT564_CADETL_69F_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_69J_Type with content type SIMPLE
class MT564_CADETL_69J_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_69J_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_69J_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_69J_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 762, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_69J_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_69J_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69J')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 765, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 765, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_69J_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 766, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 766, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_69J_Type = MT564_CADETL_69J_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_69J_Type', MT564_CADETL_69J_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_99A_Type with content type SIMPLE
class MT564_CADETL_99A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_99A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_99A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_99A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 775, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_99A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_99A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='99A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 778, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 778, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_99A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 779, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 779, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_99A_Type = MT564_CADETL_99A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_99A_Type', MT564_CADETL_99A_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_92A_Type with content type SIMPLE
class MT564_CADETL_92A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_92A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_92A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_92A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 788, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_92A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_92A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 791, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 791, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_92A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 792, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 792, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_92A_Type = MT564_CADETL_92A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_92A_Type', MT564_CADETL_92A_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_92F_Type with content type SIMPLE
class MT564_CADETL_92F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_92F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_92F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_92F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 801, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_92F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_92F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 804, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 804, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_92F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 805, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 805, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_92F_Type = MT564_CADETL_92F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_92F_Type', MT564_CADETL_92F_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_92K_Type with content type SIMPLE
class MT564_CADETL_92K_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_92K_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_92K_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_92K_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 814, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_92K_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_92K_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92K')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 817, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 817, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_92K_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 818, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 818, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_92K_Type = MT564_CADETL_92K_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_92K_Type', MT564_CADETL_92K_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_92P_Type with content type SIMPLE
class MT564_CADETL_92P_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_92P_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_92P_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_92P_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 827, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_92P_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_92P_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92P')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 830, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 830, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_92P_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 831, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 831, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_92P_Type = MT564_CADETL_92P_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_92P_Type', MT564_CADETL_92P_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_90A_Type with content type SIMPLE
class MT564_CADETL_90A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_90A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_90A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_90A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 840, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_90A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_90A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 843, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 843, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_90A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 844, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 844, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_90A_Type = MT564_CADETL_90A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_90A_Type', MT564_CADETL_90A_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_90B_Type with content type SIMPLE
class MT564_CADETL_90B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_90B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_90B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_90B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 853, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_90B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_90B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 856, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 856, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_90B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 857, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 857, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_90B_Type = MT564_CADETL_90B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_90B_Type', MT564_CADETL_90B_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_90E_Type with content type SIMPLE
class MT564_CADETL_90E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_90E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_90E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_90E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 866, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_90E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_90E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 869, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 869, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_90E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 870, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 870, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_90E_Type = MT564_CADETL_90E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_90E_Type', MT564_CADETL_90E_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_90L_Type with content type SIMPLE
class MT564_CADETL_90L_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_90L_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_90L_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_90L_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 879, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_90L_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_90L_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90L')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 882, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 882, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_90L_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 883, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 883, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_90L_Type = MT564_CADETL_90L_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_90L_Type', MT564_CADETL_90L_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_36B_Type with content type SIMPLE
class MT564_CADETL_36B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_36B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_36B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_36B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 892, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_36B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_36B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='36B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 895, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 895, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_36B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 896, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 896, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_36B_Type = MT564_CADETL_36B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_36B_Type', MT564_CADETL_36B_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_36C_Type with content type SIMPLE
class MT564_CADETL_36C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_36C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_36C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_36C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 905, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_36C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_36C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='36C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 908, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 908, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_36C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 909, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 909, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_36C_Type = MT564_CADETL_36C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_36C_Type', MT564_CADETL_36C_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_13A_Type with content type SIMPLE
class MT564_CADETL_13A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_13A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_13A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_13A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 918, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_13A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_13A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='13A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 921, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 921, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_13A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 922, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 922, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_13A_Type = MT564_CADETL_13A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_13A_Type', MT564_CADETL_13A_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_13B_Type with content type SIMPLE
class MT564_CADETL_13B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_13B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_13B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_13B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 931, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_13B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_13B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='13B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 934, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 934, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_13B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 935, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 935, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_13B_Type = MT564_CADETL_13B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_13B_Type', MT564_CADETL_13B_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_17B_Type with content type SIMPLE
class MT564_CADETL_17B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_17B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_17B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_17B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 944, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_17B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_17B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='17B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 947, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 947, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_17B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 948, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 948, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_17B_Type = MT564_CADETL_17B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_17B_Type', MT564_CADETL_17B_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_22F_Type with content type SIMPLE
class MT564_CADETL_22F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_22F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_22F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_22F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 957, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_22F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_22F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='22F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 960, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 960, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_22F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 961, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 961, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_22F_Type = MT564_CADETL_22F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_22F_Type', MT564_CADETL_22F_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_94E_Type with content type SIMPLE
class MT564_CADETL_94E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_94E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_94E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_94E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 970, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_94E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_94E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='94E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 973, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 973, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_94E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 974, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 974, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_94E_Type = MT564_CADETL_94E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_94E_Type', MT564_CADETL_94E_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_70E_Type with content type SIMPLE
class MT564_CADETL_70E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_70E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_70E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_70E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 983, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_70E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_70E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='70E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 986, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 986, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_70E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 987, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 987, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_70E_Type = MT564_CADETL_70E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_70E_Type', MT564_CADETL_70E_Type)


# Complex type {http://www.w3schools.com}MT564_CADETL_70G_Type with content type SIMPLE
class MT564_CADETL_70G_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CADETL_70G_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CADETL_70G_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CADETL_70G_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 996, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CADETL_70G_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CADETL_70G_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='70G')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 999, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 999, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CADETL_70G_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1000, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1000, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CADETL_70G_Type = MT564_CADETL_70G_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CADETL_70G_Type', MT564_CADETL_70G_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_13A_Type with content type SIMPLE
class MT564_CAOPTN_13A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_13A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_13A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_13A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1009, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_13A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_13A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='13A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1012, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1012, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_13A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1013, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1013, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_13A_Type = MT564_CAOPTN_13A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_13A_Type', MT564_CAOPTN_13A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_22F_Type with content type SIMPLE
class MT564_CAOPTN_22F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_22F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_22F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_22F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1022, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_22F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_22F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='22F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1025, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1025, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_22F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1026, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1026, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_22F_Type = MT564_CAOPTN_22F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_22F_Type', MT564_CAOPTN_22F_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_94C_Type with content type SIMPLE
class MT564_CAOPTN_94C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_94C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_94C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_94C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1035, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_94C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_94C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='94C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1038, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1038, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_94C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1039, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1039, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_94C_Type = MT564_CAOPTN_94C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_94C_Type', MT564_CAOPTN_94C_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_11A_Type with content type SIMPLE
class MT564_CAOPTN_11A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_11A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_11A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_11A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1048, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_11A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_11A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='11A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1051, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1051, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_11A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1052, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1052, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_11A_Type = MT564_CAOPTN_11A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_11A_Type', MT564_CAOPTN_11A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_17B_Type with content type SIMPLE
class MT564_CAOPTN_17B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_17B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_17B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_17B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1061, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_17B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_17B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='17B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1064, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1064, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_17B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1065, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1065, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_17B_Type = MT564_CAOPTN_17B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_17B_Type', MT564_CAOPTN_17B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_35B_Type with content type SIMPLE
class MT564_CAOPTN_35B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_35B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_35B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_35B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1074, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_35B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_35B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='35B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1077, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1077, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_35B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1078, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1078, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_35B_Type = MT564_CAOPTN_35B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_35B_Type', MT564_CAOPTN_35B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_98A_Type with content type SIMPLE
class MT564_CAOPTN_98A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_98A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_98A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_98A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1087, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_98A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_98A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1090, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1090, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_98A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1091, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1091, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_98A_Type = MT564_CAOPTN_98A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_98A_Type', MT564_CAOPTN_98A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_98B_Type with content type SIMPLE
class MT564_CAOPTN_98B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_98B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_98B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_98B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1100, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_98B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_98B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1103, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1103, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_98B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1104, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1104, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_98B_Type = MT564_CAOPTN_98B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_98B_Type', MT564_CAOPTN_98B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_98C_Type with content type SIMPLE
class MT564_CAOPTN_98C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_98C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_98C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_98C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1113, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_98C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_98C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1116, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1116, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_98C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1117, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1117, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_98C_Type = MT564_CAOPTN_98C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_98C_Type', MT564_CAOPTN_98C_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_98E_Type with content type SIMPLE
class MT564_CAOPTN_98E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_98E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_98E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_98E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1126, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_98E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_98E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1129, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1129, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_98E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1130, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1130, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_98E_Type = MT564_CAOPTN_98E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_98E_Type', MT564_CAOPTN_98E_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_98F_Type with content type SIMPLE
class MT564_CAOPTN_98F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_98F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_98F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_98F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1139, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_98F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_98F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1142, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1142, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_98F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1143, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1143, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_98F_Type = MT564_CAOPTN_98F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_98F_Type', MT564_CAOPTN_98F_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_98J_Type with content type SIMPLE
class MT564_CAOPTN_98J_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_98J_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_98J_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_98J_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1152, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_98J_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_98J_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98J')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1155, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1155, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_98J_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1156, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1156, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_98J_Type = MT564_CAOPTN_98J_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_98J_Type', MT564_CAOPTN_98J_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_98K_Type with content type SIMPLE
class MT564_CAOPTN_98K_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_98K_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_98K_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_98K_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1165, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_98K_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_98K_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98K')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1168, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1168, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_98K_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1169, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1169, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_98K_Type = MT564_CAOPTN_98K_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_98K_Type', MT564_CAOPTN_98K_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_69A_Type with content type SIMPLE
class MT564_CAOPTN_69A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_69A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_69A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_69A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1178, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_69A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_69A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1181, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1181, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_69A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1182, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1182, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_69A_Type = MT564_CAOPTN_69A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_69A_Type', MT564_CAOPTN_69A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_69B_Type with content type SIMPLE
class MT564_CAOPTN_69B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_69B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_69B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_69B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1191, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_69B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_69B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1194, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1194, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_69B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1195, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1195, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_69B_Type = MT564_CAOPTN_69B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_69B_Type', MT564_CAOPTN_69B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_69C_Type with content type SIMPLE
class MT564_CAOPTN_69C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_69C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_69C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_69C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1204, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_69C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_69C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1207, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1207, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_69C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1208, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1208, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_69C_Type = MT564_CAOPTN_69C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_69C_Type', MT564_CAOPTN_69C_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_69D_Type with content type SIMPLE
class MT564_CAOPTN_69D_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_69D_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_69D_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_69D_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1217, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_69D_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_69D_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69D')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1220, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1220, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_69D_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1221, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1221, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_69D_Type = MT564_CAOPTN_69D_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_69D_Type', MT564_CAOPTN_69D_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_69E_Type with content type SIMPLE
class MT564_CAOPTN_69E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_69E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_69E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_69E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1230, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_69E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_69E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1233, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1233, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_69E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1234, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1234, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_69E_Type = MT564_CAOPTN_69E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_69E_Type', MT564_CAOPTN_69E_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_69F_Type with content type SIMPLE
class MT564_CAOPTN_69F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_69F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_69F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_69F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1243, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_69F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_69F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1246, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1246, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_69F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1247, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1247, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_69F_Type = MT564_CAOPTN_69F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_69F_Type', MT564_CAOPTN_69F_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_69J_Type with content type SIMPLE
class MT564_CAOPTN_69J_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_69J_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_69J_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_69J_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1256, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_69J_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_69J_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69J')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1259, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1259, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_69J_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1260, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1260, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_69J_Type = MT564_CAOPTN_69J_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_69J_Type', MT564_CAOPTN_69J_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_92A_Type with content type SIMPLE
class MT564_CAOPTN_92A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_92A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_92A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_92A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1269, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_92A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_92A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1272, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1272, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_92A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1273, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1273, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_92A_Type = MT564_CAOPTN_92A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_92A_Type', MT564_CAOPTN_92A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_92B_Type with content type SIMPLE
class MT564_CAOPTN_92B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_92B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_92B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_92B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1282, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_92B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_92B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1285, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1285, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_92B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1286, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1286, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_92B_Type = MT564_CAOPTN_92B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_92B_Type', MT564_CAOPTN_92B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_92F_Type with content type SIMPLE
class MT564_CAOPTN_92F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_92F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_92F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_92F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1295, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_92F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_92F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1298, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1298, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_92F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1299, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1299, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_92F_Type = MT564_CAOPTN_92F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_92F_Type', MT564_CAOPTN_92F_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_92H_Type with content type SIMPLE
class MT564_CAOPTN_92H_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_92H_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_92H_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_92H_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1308, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_92H_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_92H_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92H')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1311, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1311, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_92H_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1312, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1312, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_92H_Type = MT564_CAOPTN_92H_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_92H_Type', MT564_CAOPTN_92H_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_92J_Type with content type SIMPLE
class MT564_CAOPTN_92J_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_92J_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_92J_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_92J_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1321, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_92J_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_92J_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92J')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1324, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1324, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_92J_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1325, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1325, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_92J_Type = MT564_CAOPTN_92J_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_92J_Type', MT564_CAOPTN_92J_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_92K_Type with content type SIMPLE
class MT564_CAOPTN_92K_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_92K_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_92K_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_92K_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1334, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_92K_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_92K_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92K')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1337, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1337, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_92K_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1338, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1338, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_92K_Type = MT564_CAOPTN_92K_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_92K_Type', MT564_CAOPTN_92K_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_92R_Type with content type SIMPLE
class MT564_CAOPTN_92R_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_92R_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_92R_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_92R_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1347, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_92R_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_92R_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1350, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1350, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_92R_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1351, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1351, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_92R_Type = MT564_CAOPTN_92R_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_92R_Type', MT564_CAOPTN_92R_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_90A_Type with content type SIMPLE
class MT564_CAOPTN_90A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_90A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_90A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_90A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1360, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_90A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_90A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1363, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1363, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_90A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1364, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1364, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_90A_Type = MT564_CAOPTN_90A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_90A_Type', MT564_CAOPTN_90A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_90B_Type with content type SIMPLE
class MT564_CAOPTN_90B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_90B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_90B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_90B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1373, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_90B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_90B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1376, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1376, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_90B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1377, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1377, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_90B_Type = MT564_CAOPTN_90B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_90B_Type', MT564_CAOPTN_90B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_90E_Type with content type SIMPLE
class MT564_CAOPTN_90E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_90E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_90E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_90E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1386, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_90E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_90E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1389, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1389, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_90E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1390, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1390, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_90E_Type = MT564_CAOPTN_90E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_90E_Type', MT564_CAOPTN_90E_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_36B_Type with content type SIMPLE
class MT564_CAOPTN_36B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_36B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_36B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_36B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1399, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_36B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_36B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='36B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1402, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1402, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_36B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1403, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1403, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_36B_Type = MT564_CAOPTN_36B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_36B_Type', MT564_CAOPTN_36B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_36C_Type with content type SIMPLE
class MT564_CAOPTN_36C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_36C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_36C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_36C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1412, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_36C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_36C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='36C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1415, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1415, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_36C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1416, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1416, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_36C_Type = MT564_CAOPTN_36C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_36C_Type', MT564_CAOPTN_36C_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_22F_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_22F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_22F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_22F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_22F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1425, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_22F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_22F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='22F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1428, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1428, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_22F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1429, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1429, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_22F_Type = MT564_CAOPTN_SECMOVE_22F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_22F_Type', MT564_CAOPTN_SECMOVE_22F_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_22H_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_22H_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_22H_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_22H_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_22H_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1438, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_22H_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_22H_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='22H')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1441, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1441, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_22H_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1442, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1442, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_22H_Type = MT564_CAOPTN_SECMOVE_22H_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_22H_Type', MT564_CAOPTN_SECMOVE_22H_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_35B_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_35B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_35B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_35B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_35B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1451, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_35B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_35B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='35B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1454, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1454, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_35B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1455, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1455, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_35B_Type = MT564_CAOPTN_SECMOVE_35B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_35B_Type', MT564_CAOPTN_SECMOVE_35B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_94B_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_FIA_94B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_94B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_FIA_94B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_94B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1464, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_FIA_94B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_94B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='94B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1467, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1467, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_94B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1468, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1468, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_94B_Type = MT564_CAOPTN_SECMOVE_FIA_94B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_94B_Type', MT564_CAOPTN_SECMOVE_FIA_94B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_22F_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_FIA_22F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_22F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_FIA_22F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_22F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1477, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_FIA_22F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_22F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='22F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1480, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1480, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_22F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1481, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1481, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_22F_Type = MT564_CAOPTN_SECMOVE_FIA_22F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_22F_Type', MT564_CAOPTN_SECMOVE_FIA_22F_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_12A_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_FIA_12A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_12A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_FIA_12A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_12A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1490, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_FIA_12A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_12A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='12A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1493, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1493, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_12A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1494, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1494, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_12A_Type = MT564_CAOPTN_SECMOVE_FIA_12A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_12A_Type', MT564_CAOPTN_SECMOVE_FIA_12A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_12B_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_FIA_12B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_12B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_FIA_12B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_12B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1503, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_FIA_12B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_12B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='12B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1506, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1506, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_12B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1507, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1507, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_12B_Type = MT564_CAOPTN_SECMOVE_FIA_12B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_12B_Type', MT564_CAOPTN_SECMOVE_FIA_12B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_12C_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_FIA_12C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_12C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_FIA_12C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_12C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1516, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_FIA_12C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_12C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='12C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1519, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1519, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_12C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1520, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1520, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_12C_Type = MT564_CAOPTN_SECMOVE_FIA_12C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_12C_Type', MT564_CAOPTN_SECMOVE_FIA_12C_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_11A_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_FIA_11A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_11A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_FIA_11A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_11A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1529, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_FIA_11A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_11A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='11A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1532, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1532, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_11A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1533, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1533, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_11A_Type = MT564_CAOPTN_SECMOVE_FIA_11A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_11A_Type', MT564_CAOPTN_SECMOVE_FIA_11A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_98A_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_FIA_98A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_98A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_FIA_98A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_98A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1542, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_FIA_98A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_98A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1545, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1545, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_98A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1546, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1546, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_98A_Type = MT564_CAOPTN_SECMOVE_FIA_98A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_98A_Type', MT564_CAOPTN_SECMOVE_FIA_98A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_90A_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_FIA_90A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_90A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_FIA_90A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_90A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1555, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_FIA_90A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_90A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1558, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1558, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_90A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1559, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1559, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_90A_Type = MT564_CAOPTN_SECMOVE_FIA_90A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_90A_Type', MT564_CAOPTN_SECMOVE_FIA_90A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_90B_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_FIA_90B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_90B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_FIA_90B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_90B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1568, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_FIA_90B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_90B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1571, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1571, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_90B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1572, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1572, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_90B_Type = MT564_CAOPTN_SECMOVE_FIA_90B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_90B_Type', MT564_CAOPTN_SECMOVE_FIA_90B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_90E_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_FIA_90E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_90E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_FIA_90E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_90E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1581, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_FIA_90E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_90E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1584, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1584, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_90E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1585, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1585, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_90E_Type = MT564_CAOPTN_SECMOVE_FIA_90E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_90E_Type', MT564_CAOPTN_SECMOVE_FIA_90E_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_92A_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_FIA_92A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_92A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_FIA_92A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_92A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1594, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_FIA_92A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_92A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1597, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1597, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_92A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1598, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1598, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_92A_Type = MT564_CAOPTN_SECMOVE_FIA_92A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_92A_Type', MT564_CAOPTN_SECMOVE_FIA_92A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_92K_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_FIA_92K_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_92K_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_FIA_92K_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_92K_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1607, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_FIA_92K_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_92K_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92K')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1610, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1610, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_92K_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1611, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1611, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_92K_Type = MT564_CAOPTN_SECMOVE_FIA_92K_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_92K_Type', MT564_CAOPTN_SECMOVE_FIA_92K_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_36B_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_FIA_36B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_FIA_36B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_FIA_36B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_FIA_36B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1620, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_FIA_36B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_36B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='36B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1623, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1623, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_FIA_36B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1624, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1624, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_FIA_36B_Type = MT564_CAOPTN_SECMOVE_FIA_36B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_FIA_36B_Type', MT564_CAOPTN_SECMOVE_FIA_36B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_36B_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_36B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_36B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_36B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_36B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1633, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_36B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_36B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='36B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1636, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1636, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_36B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1637, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1637, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_36B_Type = MT564_CAOPTN_SECMOVE_36B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_36B_Type', MT564_CAOPTN_SECMOVE_36B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_94B_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_94B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_94B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_94B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_94B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1646, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_94B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_94B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='94B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1649, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1649, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_94B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1650, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1650, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_94B_Type = MT564_CAOPTN_SECMOVE_94B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_94B_Type', MT564_CAOPTN_SECMOVE_94B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_94C_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_94C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_94C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_94C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_94C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1659, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_94C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_94C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='94C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1662, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1662, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_94C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1663, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1663, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_94C_Type = MT564_CAOPTN_SECMOVE_94C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_94C_Type', MT564_CAOPTN_SECMOVE_94C_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_94F_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_94F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_94F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_94F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_94F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1672, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_94F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_94F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='94F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1675, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1675, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_94F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1676, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1676, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_94F_Type = MT564_CAOPTN_SECMOVE_94F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_94F_Type', MT564_CAOPTN_SECMOVE_94F_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_11A_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_11A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_11A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_11A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_11A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1685, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_11A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_11A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='11A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1688, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1688, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_11A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1689, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1689, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_11A_Type = MT564_CAOPTN_SECMOVE_11A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_11A_Type', MT564_CAOPTN_SECMOVE_11A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69A_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_69A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_69A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_69A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1698, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_69A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_69A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1701, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1701, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_69A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1702, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1702, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_69A_Type = MT564_CAOPTN_SECMOVE_69A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_69A_Type', MT564_CAOPTN_SECMOVE_69A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69B_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_69B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_69B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_69B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1711, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_69B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_69B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1714, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1714, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_69B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1715, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1715, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_69B_Type = MT564_CAOPTN_SECMOVE_69B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_69B_Type', MT564_CAOPTN_SECMOVE_69B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69C_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_69C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_69C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_69C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1724, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_69C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_69C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1727, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1727, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_69C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1728, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1728, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_69C_Type = MT564_CAOPTN_SECMOVE_69C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_69C_Type', MT564_CAOPTN_SECMOVE_69C_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69D_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_69D_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69D_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_69D_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_69D_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1737, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_69D_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_69D_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69D')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1740, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1740, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_69D_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1741, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1741, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_69D_Type = MT564_CAOPTN_SECMOVE_69D_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_69D_Type', MT564_CAOPTN_SECMOVE_69D_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69E_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_69E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_69E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_69E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1750, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_69E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_69E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1753, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1753, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_69E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1754, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1754, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_69E_Type = MT564_CAOPTN_SECMOVE_69E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_69E_Type', MT564_CAOPTN_SECMOVE_69E_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69F_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_69F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_69F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_69F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1763, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_69F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_69F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1766, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1766, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_69F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1767, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1767, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_69F_Type = MT564_CAOPTN_SECMOVE_69F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_69F_Type', MT564_CAOPTN_SECMOVE_69F_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69J_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_69J_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_69J_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_69J_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_69J_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1776, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_69J_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_69J_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='69J')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1779, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1779, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_69J_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1780, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1780, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_69J_Type = MT564_CAOPTN_SECMOVE_69J_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_69J_Type', MT564_CAOPTN_SECMOVE_69J_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90A_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_90A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_90A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_90A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1789, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_90A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_90A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1792, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1792, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_90A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1793, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1793, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_90A_Type = MT564_CAOPTN_SECMOVE_90A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_90A_Type', MT564_CAOPTN_SECMOVE_90A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90B_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_90B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_90B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_90B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1802, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_90B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_90B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1805, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1805, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_90B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1806, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1806, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_90B_Type = MT564_CAOPTN_SECMOVE_90B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_90B_Type', MT564_CAOPTN_SECMOVE_90B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90E_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_90E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_90E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_90E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1815, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_90E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_90E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1818, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1818, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_90E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1819, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1819, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_90E_Type = MT564_CAOPTN_SECMOVE_90E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_90E_Type', MT564_CAOPTN_SECMOVE_90E_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90F_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_90F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_90F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_90F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1828, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_90F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_90F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1831, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1831, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_90F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1832, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1832, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_90F_Type = MT564_CAOPTN_SECMOVE_90F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_90F_Type', MT564_CAOPTN_SECMOVE_90F_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90J_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_90J_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90J_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_90J_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_90J_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1841, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_90J_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_90J_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90J')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1844, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1844, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_90J_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1845, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1845, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_90J_Type = MT564_CAOPTN_SECMOVE_90J_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_90J_Type', MT564_CAOPTN_SECMOVE_90J_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90K_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_90K_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90K_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_90K_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_90K_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1854, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_90K_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_90K_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90K')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1857, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1857, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_90K_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1858, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1858, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_90K_Type = MT564_CAOPTN_SECMOVE_90K_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_90K_Type', MT564_CAOPTN_SECMOVE_90K_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90L_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_90L_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_90L_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_90L_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_90L_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1867, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_90L_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_90L_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90L')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1870, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1870, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_90L_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1871, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1871, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_90L_Type = MT564_CAOPTN_SECMOVE_90L_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_90L_Type', MT564_CAOPTN_SECMOVE_90L_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92A_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_92A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_92A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1880, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_92A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1883, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1883, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1884, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1884, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_92A_Type = MT564_CAOPTN_SECMOVE_92A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92A_Type', MT564_CAOPTN_SECMOVE_92A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92D_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_92D_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92D_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_92D_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92D_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1893, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_92D_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92D_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92D')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1896, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1896, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92D_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1897, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1897, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_92D_Type = MT564_CAOPTN_SECMOVE_92D_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92D_Type', MT564_CAOPTN_SECMOVE_92D_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92F_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_92F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_92F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1906, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_92F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1909, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1909, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1910, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1910, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_92F_Type = MT564_CAOPTN_SECMOVE_92F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92F_Type', MT564_CAOPTN_SECMOVE_92F_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92J_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_92J_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92J_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_92J_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92J_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1919, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_92J_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92J_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92J')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1922, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1922, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92J_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1923, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1923, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_92J_Type = MT564_CAOPTN_SECMOVE_92J_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92J_Type', MT564_CAOPTN_SECMOVE_92J_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92K_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_92K_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92K_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_92K_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92K_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1932, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_92K_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92K_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92K')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1935, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1935, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92K_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1936, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1936, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_92K_Type = MT564_CAOPTN_SECMOVE_92K_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92K_Type', MT564_CAOPTN_SECMOVE_92K_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92L_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_92L_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92L_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_92L_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92L_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1945, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_92L_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92L_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92L')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1948, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1948, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92L_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1949, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1949, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_92L_Type = MT564_CAOPTN_SECMOVE_92L_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92L_Type', MT564_CAOPTN_SECMOVE_92L_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92M_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_92M_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92M_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_92M_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92M_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1958, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_92M_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92M_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92M')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1961, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1961, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92M_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1962, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1962, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_92M_Type = MT564_CAOPTN_SECMOVE_92M_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92M_Type', MT564_CAOPTN_SECMOVE_92M_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92N_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_92N_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_92N_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_92N_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_92N_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1971, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_92N_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92N_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92N')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1974, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1974, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_92N_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1975, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1975, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_92N_Type = MT564_CAOPTN_SECMOVE_92N_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_92N_Type', MT564_CAOPTN_SECMOVE_92N_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_98A_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_98A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_98A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_98A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_98A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1984, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_98A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_98A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1987, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1987, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_98A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1988, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1988, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_98A_Type = MT564_CAOPTN_SECMOVE_98A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_98A_Type', MT564_CAOPTN_SECMOVE_98A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_98B_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_98B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_98B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_98B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_98B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 1997, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_98B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_98B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2000, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2000, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_98B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2001, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2001, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_98B_Type = MT564_CAOPTN_SECMOVE_98B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_98B_Type', MT564_CAOPTN_SECMOVE_98B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_98C_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_98C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_98C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_98C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_98C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2010, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_98C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_98C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2013, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2013, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_98C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2014, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2014, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_98C_Type = MT564_CAOPTN_SECMOVE_98C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_98C_Type', MT564_CAOPTN_SECMOVE_98C_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_98E_Type with content type SIMPLE
class MT564_CAOPTN_SECMOVE_98E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_SECMOVE_98E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_SECMOVE_98E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_SECMOVE_98E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2023, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_SECMOVE_98E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_98E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2026, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2026, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_SECMOVE_98E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2027, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2027, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_SECMOVE_98E_Type = MT564_CAOPTN_SECMOVE_98E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_SECMOVE_98E_Type', MT564_CAOPTN_SECMOVE_98E_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_22F_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_22F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_22F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_22F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_22F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2036, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_22F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_22F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='22F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2039, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2039, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_22F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2040, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2040, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_22F_Type = MT564_CAOPTN_CASHMOVE_22F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_22F_Type', MT564_CAOPTN_CASHMOVE_22F_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_22H_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_22H_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_22H_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_22H_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_22H_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2049, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_22H_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_22H_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='22H')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2052, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2052, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_22H_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2053, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2053, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_22H_Type = MT564_CAOPTN_CASHMOVE_22H_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_22H_Type', MT564_CAOPTN_CASHMOVE_22H_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_94C_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_94C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_94C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_94C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_94C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2062, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_94C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_94C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='94C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2065, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2065, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_94C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2066, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2066, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_94C_Type = MT564_CAOPTN_CASHMOVE_94C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_94C_Type', MT564_CAOPTN_CASHMOVE_94C_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_97A_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_97A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_97A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_97A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_97A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2075, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_97A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_97A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='97A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2078, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2078, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_97A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2079, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2079, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_97A_Type = MT564_CAOPTN_CASHMOVE_97A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_97A_Type', MT564_CAOPTN_CASHMOVE_97A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_97E_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_97E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_97E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_97E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_97E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2088, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_97E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_97E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='97E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2091, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2091, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_97E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2092, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2092, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_97E_Type = MT564_CAOPTN_CASHMOVE_97E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_97E_Type', MT564_CAOPTN_CASHMOVE_97E_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_19B_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_19B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_19B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_19B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_19B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2101, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_19B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_19B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='19B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2104, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2104, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_19B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2105, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2105, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_19B_Type = MT564_CAOPTN_CASHMOVE_19B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_19B_Type', MT564_CAOPTN_CASHMOVE_19B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_98A_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_98A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_98A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_98A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_98A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2114, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_98A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_98A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2117, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2117, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_98A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2118, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2118, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_98A_Type = MT564_CAOPTN_CASHMOVE_98A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_98A_Type', MT564_CAOPTN_CASHMOVE_98A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_98B_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_98B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_98B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_98B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_98B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2127, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_98B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_98B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2130, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2130, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_98B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2131, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2131, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_98B_Type = MT564_CAOPTN_CASHMOVE_98B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_98B_Type', MT564_CAOPTN_CASHMOVE_98B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_98C_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_98C_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_98C_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_98C_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_98C_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2140, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_98C_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_98C_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98C')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2143, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2143, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_98C_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2144, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2144, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_98C_Type = MT564_CAOPTN_CASHMOVE_98C_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_98C_Type', MT564_CAOPTN_CASHMOVE_98C_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_98E_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_98E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_98E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_98E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_98E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2153, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_98E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_98E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='98E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2156, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2156, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_98E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='True')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2157, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2157, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_98E_Type = MT564_CAOPTN_CASHMOVE_98E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_98E_Type', MT564_CAOPTN_CASHMOVE_98E_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92A_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_92A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_92A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2166, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_92A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2169, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2169, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2170, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2170, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92A_Type = MT564_CAOPTN_CASHMOVE_92A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92A_Type', MT564_CAOPTN_CASHMOVE_92A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92B_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_92B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_92B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2179, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_92B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2182, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2182, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2183, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2183, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92B_Type = MT564_CAOPTN_CASHMOVE_92B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92B_Type', MT564_CAOPTN_CASHMOVE_92B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92F_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_92F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_92F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2192, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_92F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2195, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2195, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2196, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2196, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92F_Type = MT564_CAOPTN_CASHMOVE_92F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92F_Type', MT564_CAOPTN_CASHMOVE_92F_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92H_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_92H_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92H_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_92H_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92H_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2205, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_92H_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92H_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92H')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2208, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2208, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92H_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2209, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2209, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92H_Type = MT564_CAOPTN_CASHMOVE_92H_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92H_Type', MT564_CAOPTN_CASHMOVE_92H_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92J_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_92J_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92J_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_92J_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92J_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2218, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_92J_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92J_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92J')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2221, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2221, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92J_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2222, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2222, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92J_Type = MT564_CAOPTN_CASHMOVE_92J_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92J_Type', MT564_CAOPTN_CASHMOVE_92J_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92K_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_92K_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92K_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_92K_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92K_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2231, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_92K_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92K_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92K')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2234, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2234, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92K_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2235, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2235, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92K_Type = MT564_CAOPTN_CASHMOVE_92K_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92K_Type', MT564_CAOPTN_CASHMOVE_92K_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92M_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_92M_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92M_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_92M_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92M_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2244, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_92M_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92M_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92M')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2247, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2247, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92M_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2248, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2248, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92M_Type = MT564_CAOPTN_CASHMOVE_92M_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92M_Type', MT564_CAOPTN_CASHMOVE_92M_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92R_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_92R_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_92R_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_92R_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_92R_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2257, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_92R_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92R_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='92R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2260, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2260, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_92R_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2261, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2261, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_92R_Type = MT564_CAOPTN_CASHMOVE_92R_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_92R_Type', MT564_CAOPTN_CASHMOVE_92R_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90A_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_90A_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90A_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_90A_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_90A_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2270, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_90A_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_90A_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90A')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2273, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2273, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_90A_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2274, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2274, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_90A_Type = MT564_CAOPTN_CASHMOVE_90A_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_90A_Type', MT564_CAOPTN_CASHMOVE_90A_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90B_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_90B_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90B_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_90B_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_90B_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2283, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_90B_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_90B_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90B')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2286, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2286, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_90B_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2287, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2287, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_90B_Type = MT564_CAOPTN_CASHMOVE_90B_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_90B_Type', MT564_CAOPTN_CASHMOVE_90B_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90E_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_90E_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90E_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_90E_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_90E_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2296, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_90E_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_90E_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2299, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2299, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_90E_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2300, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2300, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_90E_Type = MT564_CAOPTN_CASHMOVE_90E_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_90E_Type', MT564_CAOPTN_CASHMOVE_90E_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90F_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_90F_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90F_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_90F_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_90F_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2309, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_90F_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_90F_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90F')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2312, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2312, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_90F_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2313, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2313, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_90F_Type = MT564_CAOPTN_CASHMOVE_90F_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_90F_Type', MT564_CAOPTN_CASHMOVE_90F_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90J_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_90J_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90J_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_90J_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_90J_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2322, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_90J_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_90J_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90J')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2325, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2325, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_90J_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2326, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2326, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_90J_Type = MT564_CAOPTN_CASHMOVE_90J_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_90J_Type', MT564_CAOPTN_CASHMOVE_90J_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90K_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_90K_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90K_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_90K_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_90K_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2335, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_90K_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_90K_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90K')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2338, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2338, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_90K_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2339, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2339, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_90K_Type = MT564_CAOPTN_CASHMOVE_90K_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_90K_Type', MT564_CAOPTN_CASHMOVE_90K_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90L_Type with content type SIMPLE
class MT564_CAOPTN_CASHMOVE_90L_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_CASHMOVE_90L_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_CASHMOVE_90L_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_CASHMOVE_90L_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2348, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_CASHMOVE_90L_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_90L_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='90L')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2351, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2351, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_CASHMOVE_90L_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2352, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2352, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_CASHMOVE_90L_Type = MT564_CAOPTN_CASHMOVE_90L_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_CASHMOVE_90L_Type', MT564_CAOPTN_CASHMOVE_90L_Type)


# Complex type {http://www.w3schools.com}MT564_CAOPTN_70E-4!c_Type with content type SIMPLE
class MT564_CAOPTN_70E_4c_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_CAOPTN_70E-4!c_Type with content type SIMPLE"""
    _TypeDefinition = MT564_CAOPTN_70E_4c_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_CAOPTN_70E-4!c_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2361, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_CAOPTN_70E_4c_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_CAOPTN_70E_4c_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='70E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2364, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2364, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_CAOPTN_70E_4c_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2365, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2365, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_CAOPTN_70E_4c_Type = MT564_CAOPTN_70E_4c_Type
Namespace.addCategoryObject('typeBinding', 'MT564_CAOPTN_70E-4!c_Type', MT564_CAOPTN_70E_4c_Type)


# Complex type {http://www.w3schools.com}MT564_ADDINFO_70E-4!c_Type with content type SIMPLE
class MT564_ADDINFO_70E_4c_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_ADDINFO_70E-4!c_Type with content type SIMPLE"""
    _TypeDefinition = MT564_ADDINFO_70E_4c_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_ADDINFO_70E-4!c_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2374, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_ADDINFO_70E_4c_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_ADDINFO_70E_4c_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='70E')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2377, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2377, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_ADDINFO_70E_4c_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2378, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2378, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_ADDINFO_70E_4c_Type = MT564_ADDINFO_70E_4c_Type
Namespace.addCategoryObject('typeBinding', 'MT564_ADDINFO_70E-4!c_Type', MT564_ADDINFO_70E_4c_Type)


# Complex type {http://www.w3schools.com}MT564_ADDINFO_95L_Type with content type SIMPLE
class MT564_ADDINFO_95L_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_ADDINFO_95L_Type with content type SIMPLE"""
    _TypeDefinition = MT564_ADDINFO_95L_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_ADDINFO_95L_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2387, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_ADDINFO_95L_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_ADDINFO_95L_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='95L')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2390, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2390, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_ADDINFO_95L_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2391, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2391, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_ADDINFO_95L_Type = MT564_ADDINFO_95L_Type
Namespace.addCategoryObject('typeBinding', 'MT564_ADDINFO_95L_Type', MT564_ADDINFO_95L_Type)


# Complex type {http://www.w3schools.com}MT564_ADDINFO_95P_Type with content type SIMPLE
class MT564_ADDINFO_95P_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_ADDINFO_95P_Type with content type SIMPLE"""
    _TypeDefinition = MT564_ADDINFO_95P_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_ADDINFO_95P_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2400, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_ADDINFO_95P_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_ADDINFO_95P_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='95P')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2403, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2403, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_ADDINFO_95P_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2404, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2404, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_ADDINFO_95P_Type = MT564_ADDINFO_95P_Type
Namespace.addCategoryObject('typeBinding', 'MT564_ADDINFO_95P_Type', MT564_ADDINFO_95P_Type)


# Complex type {http://www.w3schools.com}MT564_ADDINFO_95Q_Type with content type SIMPLE
class MT564_ADDINFO_95Q_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_ADDINFO_95Q_Type with content type SIMPLE"""
    _TypeDefinition = MT564_ADDINFO_95Q_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_ADDINFO_95Q_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2413, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_ADDINFO_95Q_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_ADDINFO_95Q_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='95Q')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2416, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2416, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_ADDINFO_95Q_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2417, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2417, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_ADDINFO_95Q_Type = MT564_ADDINFO_95Q_Type
Namespace.addCategoryObject('typeBinding', 'MT564_ADDINFO_95Q_Type', MT564_ADDINFO_95Q_Type)


# Complex type {http://www.w3schools.com}MT564_ADDINFO_95R_Type with content type SIMPLE
class MT564_ADDINFO_95R_Type (pyxb.binding.basis.complexTypeDefinition):
    """Complex type {http://www.w3schools.com}MT564_ADDINFO_95R_Type with content type SIMPLE"""
    _TypeDefinition = MT564_ADDINFO_95R_Type_Pattern
    _ContentTypeTag = pyxb.binding.basis.complexTypeDefinition._CT_SIMPLE
    _Abstract = False
    _ExpandedName = pyxb.namespace.ExpandedName(Namespace, 'MT564_ADDINFO_95R_Type')
    _XSDLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2426, 1)
    _ElementMap = {}
    _AttributeMap = {}
    # Base type is MT564_ADDINFO_95R_Type_Pattern
    
    # Attribute swiftTag uses Python identifier swiftTag
    __swiftTag = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'swiftTag'), 'swiftTag', '__httpwww_w3schools_com_MT564_ADDINFO_95R_Type_swiftTag', pyxb.binding.datatypes.anySimpleType, fixed=True, unicode_default='95R')
    __swiftTag._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2429, 4)
    __swiftTag._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2429, 4)
    
    swiftTag = property(__swiftTag.value, __swiftTag.set, None, None)

    
    # Attribute isMandatory uses Python identifier isMandatory
    __isMandatory = pyxb.binding.content.AttributeUse(pyxb.namespace.ExpandedName(None, 'isMandatory'), 'isMandatory', '__httpwww_w3schools_com_MT564_ADDINFO_95R_Type_isMandatory', pyxb.binding.datatypes.anySimpleType, unicode_default='False')
    __isMandatory._DeclarationLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2430, 4)
    __isMandatory._UseLocation = pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2430, 4)
    
    isMandatory = property(__isMandatory.value, __isMandatory.set, None, None)

    _ElementMap.update({
        
    })
    _AttributeMap.update({
        __swiftTag.name() : __swiftTag,
        __isMandatory.name() : __isMandatory
    })
_module_typeBindings.MT564_ADDINFO_95R_Type = MT564_ADDINFO_95R_Type
Namespace.addCategoryObject('typeBinding', 'MT564_ADDINFO_95R_Type', MT564_ADDINFO_95R_Type)


MT564 = pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MT564'), CTD_ANON, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2790, 1))
Namespace.addCategoryObject('elementBinding', MT564.name().localName(), MT564)



MT564_GENL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ContinuationIndicator'), MT564_GENL_28E_Type, scope=MT564_GENL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2436, 3)))

MT564_GENL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Reference'), MT564_GENL_20C_Type, scope=MT564_GENL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2437, 3)))

MT564_GENL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'FunctionOfMessage'), MT564_GENL_23G_Type, scope=MT564_GENL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2438, 3)))

MT564_GENL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Indicator'), MT564_GENL_22F_Type, scope=MT564_GENL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2439, 3)))

MT564_GENL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PreparationDateTime_A'), MT564_GENL_98A_Type, scope=MT564_GENL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2441, 4)))

MT564_GENL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PreparationDateTime_C'), MT564_GENL_98C_Type, scope=MT564_GENL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2442, 4)))

MT564_GENL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ProcessingStatus'), MT564_GENL_25D_Type, scope=MT564_GENL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2444, 3)))

MT564_GENL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'LINK'), MT564_GENL_LINK, scope=MT564_GENL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2445, 3)))

def _BuildAutomaton ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton
    del _BuildAutomaton
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2436, 3))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2440, 3))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2441, 4))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2442, 4))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2445, 3))
    counters.add(cc_4)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_GENL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ContinuationIndicator')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2436, 3))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_GENL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Reference')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2437, 3))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_GENL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'FunctionOfMessage')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2438, 3))
    st_2 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_GENL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Indicator')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2439, 3))
    st_3 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_GENL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PreparationDateTime_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2441, 4))
    st_4 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_GENL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PreparationDateTime_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2442, 4))
    st_5 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_GENL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ProcessingStatus')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2444, 3))
    st_6 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(MT564_GENL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'LINK')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2445, 3))
    st_7 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
         ]))
    transitions.append(fac.Transition(st_2, [
         ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
         ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
         ]))
    transitions.append(fac.Transition(st_4, [
         ]))
    transitions.append(fac.Transition(st_5, [
         ]))
    transitions.append(fac.Transition(st_6, [
         ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False),
        fac.UpdateInstruction(cc_2, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False),
        fac.UpdateInstruction(cc_3, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
         ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, True) ]))
    st_7._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
MT564_GENL._Automaton = _BuildAutomaton()




MT564_GENL_LINK._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'LinkageTypeIndicator'), MT564_GENL_LINK_22F_Type, scope=MT564_GENL_LINK, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2453, 3)))

MT564_GENL_LINK._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'LinkedMessage_A'), MT564_GENL_LINK_13A_Type, scope=MT564_GENL_LINK, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2455, 4)))

MT564_GENL_LINK._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'LinkedMessage_B'), MT564_GENL_LINK_13B_Type, scope=MT564_GENL_LINK, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2456, 4)))

MT564_GENL_LINK._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Reference'), MT564_GENL_LINK_20C_Type, scope=MT564_GENL_LINK, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2458, 3)))

def _BuildAutomaton_ ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_
    del _BuildAutomaton_
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2453, 3))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2454, 3))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2455, 4))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2456, 4))
    counters.add(cc_3)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_GENL_LINK._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'LinkageTypeIndicator')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2453, 3))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_GENL_LINK._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'LinkedMessage_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2455, 4))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_GENL_LINK._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'LinkedMessage_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2456, 4))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_GENL_LINK._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Reference')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2458, 3))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False),
        fac.UpdateInstruction(cc_2, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False),
        fac.UpdateInstruction(cc_3, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    st_3._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
MT564_GENL_LINK._Automaton = _BuildAutomaton_()




MT564_USECU._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'IdentificationOfFinancialInstrument'), MT564_USECU_35B_Type, scope=MT564_USECU, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2466, 3)))

MT564_USECU._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'FIA'), MT564_USECU_FIA, scope=MT564_USECU, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2467, 3)))

MT564_USECU._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ACCTINFO'), MT564_USECU_ACCTINFO, scope=MT564_USECU, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2468, 3)))

def _BuildAutomaton_2 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_2
    del _BuildAutomaton_2
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2467, 3))
    counters.add(cc_0)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_USECU._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'IdentificationOfFinancialInstrument')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2466, 3))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_USECU._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'FIA')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2467, 3))
    st_1 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_USECU._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ACCTINFO')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2468, 3))
    st_2 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    transitions = []
    transitions.append(fac.Transition(st_1, [
         ]))
    transitions.append(fac.Transition(st_2, [
         ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
         ]))
    st_2._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
MT564_USECU._Automaton = _BuildAutomaton_2()




MT564_USECU_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfListing'), MT564_USECU_FIA_94B_Type, scope=MT564_USECU_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2476, 3)))

MT564_USECU_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MethodOfInterestComputationIndicator'), MT564_USECU_FIA_22F_Type, scope=MT564_USECU_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2477, 3)))

MT564_USECU_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_A'), MT564_USECU_FIA_12A_Type, scope=MT564_USECU_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2479, 4)))

MT564_USECU_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_B'), MT564_USECU_FIA_12B_Type, scope=MT564_USECU_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2480, 4)))

MT564_USECU_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_C'), MT564_USECU_FIA_12C_Type, scope=MT564_USECU_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2481, 4)))

MT564_USECU_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CurrencyOfDenomination'), MT564_USECU_FIA_11A_Type, scope=MT564_USECU_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2483, 3)))

MT564_USECU_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime'), MT564_USECU_FIA_98A_Type, scope=MT564_USECU_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2484, 3)))

MT564_USECU_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_A'), MT564_USECU_FIA_92A_Type, scope=MT564_USECU_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2486, 4)))

MT564_USECU_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_D'), MT564_USECU_FIA_92D_Type, scope=MT564_USECU_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2487, 4)))

MT564_USECU_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_K'), MT564_USECU_FIA_92K_Type, scope=MT564_USECU_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2488, 4)))

MT564_USECU_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument'), MT564_USECU_FIA_36B_Type, scope=MT564_USECU_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2490, 3)))

def _BuildAutomaton_3 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_3
    del _BuildAutomaton_3
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2476, 3))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2477, 3))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2478, 3))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2479, 4))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2480, 4))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2481, 4))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2483, 3))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2484, 3))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2485, 3))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2486, 4))
    counters.add(cc_9)
    cc_10 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2487, 4))
    counters.add(cc_10)
    cc_11 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2488, 4))
    counters.add(cc_11)
    cc_12 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2490, 3))
    counters.add(cc_12)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfListing')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2476, 3))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MethodOfInterestComputationIndicator')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2477, 3))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2479, 4))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2480, 4))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2481, 4))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CurrencyOfDenomination')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2483, 3))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2484, 3))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_9, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2486, 4))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_10, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_D')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2487, 4))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_11, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_K')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2488, 4))
    st_9 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_12, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2490, 3))
    st_10 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_7, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_9, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_10, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_11, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_12, True) ]))
    st_10._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
MT564_USECU_FIA._Automaton = _BuildAutomaton_3()




MT564_USECU_ACCTINFO._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AccountOwner_P'), MT564_USECU_ACCTINFO_95P_Type, scope=MT564_USECU_ACCTINFO, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2499, 4)))

MT564_USECU_ACCTINFO._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'AccountOwner_R'), MT564_USECU_ACCTINFO_95R_Type, scope=MT564_USECU_ACCTINFO, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2500, 4)))

MT564_USECU_ACCTINFO._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SafekeepingAccount_A'), MT564_USECU_ACCTINFO_97A_Type, scope=MT564_USECU_ACCTINFO, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2503, 4)))

MT564_USECU_ACCTINFO._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SafekeepingAccount_C'), MT564_USECU_ACCTINFO_97C_Type, scope=MT564_USECU_ACCTINFO, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2504, 4)))

MT564_USECU_ACCTINFO._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PlaceofSafekeeping_B'), MT564_USECU_ACCTINFO_94B_Type, scope=MT564_USECU_ACCTINFO, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2507, 4)))

MT564_USECU_ACCTINFO._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PlaceofSafekeeping_C'), MT564_USECU_ACCTINFO_94C_Type, scope=MT564_USECU_ACCTINFO, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2508, 4)))

MT564_USECU_ACCTINFO._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PlaceofSafekeeping_F'), MT564_USECU_ACCTINFO_94F_Type, scope=MT564_USECU_ACCTINFO, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2509, 4)))

MT564_USECU_ACCTINFO._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Balance_B'), MT564_USECU_ACCTINFO_93B_Type, scope=MT564_USECU_ACCTINFO, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2512, 4)))

MT564_USECU_ACCTINFO._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Balance_C'), MT564_USECU_ACCTINFO_93C_Type, scope=MT564_USECU_ACCTINFO, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2513, 4)))

def _BuildAutomaton_4 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_4
    del _BuildAutomaton_4
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2498, 3))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2499, 4))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2500, 4))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2506, 3))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2507, 4))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2508, 4))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2509, 4))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2511, 3))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2512, 4))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2513, 4))
    counters.add(cc_9)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_ACCTINFO._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AccountOwner_P')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2499, 4))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_ACCTINFO._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'AccountOwner_R')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2500, 4))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_ACCTINFO._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SafekeepingAccount_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2503, 4))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_ACCTINFO._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SafekeepingAccount_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2504, 4))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_ACCTINFO._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PlaceofSafekeeping_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2507, 4))
    st_4 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_ACCTINFO._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PlaceofSafekeeping_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2508, 4))
    st_5 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_ACCTINFO._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PlaceofSafekeeping_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2509, 4))
    st_6 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_7, False))
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_ACCTINFO._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Balance_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2512, 4))
    st_7 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_7, False))
    final_update.add(fac.UpdateInstruction(cc_9, False))
    symbol = pyxb.binding.content.ElementUse(MT564_USECU_ACCTINFO._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Balance_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2513, 4))
    st_8 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
         ]))
    transitions.append(fac.Transition(st_5, [
         ]))
    transitions.append(fac.Transition(st_6, [
         ]))
    transitions.append(fac.Transition(st_7, [
         ]))
    transitions.append(fac.Transition(st_8, [
         ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
         ]))
    transitions.append(fac.Transition(st_5, [
         ]))
    transitions.append(fac.Transition(st_6, [
         ]))
    transitions.append(fac.Transition(st_7, [
         ]))
    transitions.append(fac.Transition(st_8, [
         ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_7, True),
        fac.UpdateInstruction(cc_8, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_7, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_9, True) ]))
    st_8._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
MT564_USECU_ACCTINFO._Automaton = _BuildAutomaton_4()




MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'IdentificationOfFinancialInstrument'), MT564_INTSEC_35B_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2522, 3)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfIntermediateSecurities_B'), MT564_INTSEC_36B_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2524, 4)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfIntermediateSecurities_E'), MT564_INTSEC_36E_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2525, 4)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Balance_B'), MT564_INTSEC_93B_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2528, 4)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Balance_C'), MT564_INTSEC_93C_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2529, 4)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Indicator'), MT564_INTSEC_22F_4c_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2531, 3)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'IntermediateSecuritiesToUnderlying'), MT564_INTSEC_92D_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2532, 3)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MarketPrice'), MT564_INTSEC_90B_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2533, 3)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A'), MT564_INTSEC_98A_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2535, 4)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B'), MT564_INTSEC_98B_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2536, 4)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_A'), MT564_INTSEC_69A_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2539, 4)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_B'), MT564_INTSEC_69B_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2540, 4)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_C'), MT564_INTSEC_69C_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2541, 4)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_D'), MT564_INTSEC_69D_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2542, 4)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_E'), MT564_INTSEC_69E_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2543, 4)))

MT564_INTSEC._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_F'), MT564_INTSEC_69F_Type, scope=MT564_INTSEC, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2544, 4)))

def _BuildAutomaton_5 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_5
    del _BuildAutomaton_5
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2523, 3))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2524, 4))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2525, 4))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2527, 3))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2528, 4))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2529, 4))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2531, 3))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2532, 3))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2533, 3))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2538, 3))
    counters.add(cc_9)
    cc_10 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2539, 4))
    counters.add(cc_10)
    cc_11 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2540, 4))
    counters.add(cc_11)
    cc_12 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2541, 4))
    counters.add(cc_12)
    cc_13 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2542, 4))
    counters.add(cc_13)
    cc_14 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2543, 4))
    counters.add(cc_14)
    cc_15 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2544, 4))
    counters.add(cc_15)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'IdentificationOfFinancialInstrument')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2522, 3))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfIntermediateSecurities_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2524, 4))
    st_1 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfIntermediateSecurities_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2525, 4))
    st_2 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Balance_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2528, 4))
    st_3 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Balance_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2529, 4))
    st_4 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Indicator')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2531, 3))
    st_5 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'IntermediateSecuritiesToUnderlying')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2532, 3))
    st_6 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MarketPrice')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2533, 3))
    st_7 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2535, 4))
    st_8 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2536, 4))
    st_9 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_9, False))
    final_update.add(fac.UpdateInstruction(cc_10, False))
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2539, 4))
    st_10 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_9, False))
    final_update.add(fac.UpdateInstruction(cc_11, False))
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2540, 4))
    st_11 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_9, False))
    final_update.add(fac.UpdateInstruction(cc_12, False))
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2541, 4))
    st_12 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_12)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_9, False))
    final_update.add(fac.UpdateInstruction(cc_13, False))
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_D')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2542, 4))
    st_13 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_13)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_9, False))
    final_update.add(fac.UpdateInstruction(cc_14, False))
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2543, 4))
    st_14 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_14)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_9, False))
    final_update.add(fac.UpdateInstruction(cc_15, False))
    symbol = pyxb.binding.content.ElementUse(MT564_INTSEC._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2544, 4))
    st_15 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_15)
    transitions = []
    transitions.append(fac.Transition(st_1, [
         ]))
    transitions.append(fac.Transition(st_2, [
         ]))
    transitions.append(fac.Transition(st_3, [
         ]))
    transitions.append(fac.Transition(st_4, [
         ]))
    transitions.append(fac.Transition(st_5, [
         ]))
    transitions.append(fac.Transition(st_6, [
         ]))
    transitions.append(fac.Transition(st_7, [
         ]))
    transitions.append(fac.Transition(st_8, [
         ]))
    transitions.append(fac.Transition(st_9, [
         ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_7, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
         ]))
    transitions.append(fac.Transition(st_9, [
         ]))
    transitions.append(fac.Transition(st_10, [
         ]))
    transitions.append(fac.Transition(st_11, [
         ]))
    transitions.append(fac.Transition(st_12, [
         ]))
    transitions.append(fac.Transition(st_13, [
         ]))
    transitions.append(fac.Transition(st_14, [
         ]))
    transitions.append(fac.Transition(st_15, [
         ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
         ]))
    transitions.append(fac.Transition(st_9, [
         ]))
    transitions.append(fac.Transition(st_10, [
         ]))
    transitions.append(fac.Transition(st_11, [
         ]))
    transitions.append(fac.Transition(st_12, [
         ]))
    transitions.append(fac.Transition(st_13, [
         ]))
    transitions.append(fac.Transition(st_14, [
         ]))
    transitions.append(fac.Transition(st_15, [
         ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_10, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_10, False) ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_11, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_11, False) ]))
    st_11._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_12, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_12, False) ]))
    st_12._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_13, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_13, False) ]))
    st_13._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_14, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_14, False) ]))
    st_14._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_9, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_15, True) ]))
    st_15._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
MT564_INTSEC._Automaton = _BuildAutomaton_5()




MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A'), MT564_CADETL_98A_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2554, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B'), MT564_CADETL_98B_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2555, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_C'), MT564_CADETL_98C_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2556, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_E'), MT564_CADETL_98E_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2557, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Period_A'), MT564_CADETL_69A_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2560, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Period_B'), MT564_CADETL_69B_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2561, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Period_C'), MT564_CADETL_69C_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2562, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Period_D'), MT564_CADETL_69D_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2563, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Period_E'), MT564_CADETL_69E_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2564, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Period_F'), MT564_CADETL_69F_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2565, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Period_J'), MT564_CADETL_69J_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2566, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'NumberofDaysAccrued'), MT564_CADETL_99A_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2568, 3)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_A'), MT564_CADETL_92A_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2570, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_F'), MT564_CADETL_92F_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2571, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_K'), MT564_CADETL_92K_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2572, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_P'), MT564_CADETL_92P_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2573, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_A'), MT564_CADETL_90A_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2576, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_B'), MT564_CADETL_90B_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2577, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_E'), MT564_CADETL_90E_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2578, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_L'), MT564_CADETL_90L_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2579, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument_B'), MT564_CADETL_36B_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2582, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument_C'), MT564_CADETL_36C_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2583, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CouponNumber_A'), MT564_CADETL_13A_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2586, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CouponNumber_B'), MT564_CADETL_13B_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2587, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Flag'), MT564_CADETL_17B_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2589, 3)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Indicator'), MT564_CADETL_22F_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2590, 3)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Place'), MT564_CADETL_94E_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2591, 3)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Narrative_E'), MT564_CADETL_70E_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2593, 4)))

MT564_CADETL._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Narrative_G'), MT564_CADETL_70G_Type, scope=MT564_CADETL, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2594, 4)))

def _BuildAutomaton_6 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_6
    del _BuildAutomaton_6
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2553, 3))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2554, 4))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2555, 4))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2556, 4))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2557, 4))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2559, 3))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2560, 4))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2561, 4))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2562, 4))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2563, 4))
    counters.add(cc_9)
    cc_10 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2564, 4))
    counters.add(cc_10)
    cc_11 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2565, 4))
    counters.add(cc_11)
    cc_12 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2566, 4))
    counters.add(cc_12)
    cc_13 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2568, 3))
    counters.add(cc_13)
    cc_14 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2569, 3))
    counters.add(cc_14)
    cc_15 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2570, 4))
    counters.add(cc_15)
    cc_16 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2571, 4))
    counters.add(cc_16)
    cc_17 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2572, 4))
    counters.add(cc_17)
    cc_18 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2573, 4))
    counters.add(cc_18)
    cc_19 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2575, 3))
    counters.add(cc_19)
    cc_20 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2576, 4))
    counters.add(cc_20)
    cc_21 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2577, 4))
    counters.add(cc_21)
    cc_22 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2578, 4))
    counters.add(cc_22)
    cc_23 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2579, 4))
    counters.add(cc_23)
    cc_24 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2581, 3))
    counters.add(cc_24)
    cc_25 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2582, 4))
    counters.add(cc_25)
    cc_26 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2583, 4))
    counters.add(cc_26)
    cc_27 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2585, 3))
    counters.add(cc_27)
    cc_28 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2586, 4))
    counters.add(cc_28)
    cc_29 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2587, 4))
    counters.add(cc_29)
    cc_30 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2589, 3))
    counters.add(cc_30)
    cc_31 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2590, 3))
    counters.add(cc_31)
    cc_32 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2591, 3))
    counters.add(cc_32)
    cc_33 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2592, 3))
    counters.add(cc_33)
    cc_34 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2593, 4))
    counters.add(cc_34)
    cc_35 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2594, 4))
    counters.add(cc_35)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2554, 4))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2555, 4))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2556, 4))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2557, 4))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Period_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2560, 4))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Period_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2561, 4))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Period_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2562, 4))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_9, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Period_D')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2563, 4))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_10, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Period_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2564, 4))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_11, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Period_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2565, 4))
    st_9 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_12, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Period_J')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2566, 4))
    st_10 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_13, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'NumberofDaysAccrued')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2568, 3))
    st_11 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_14, False))
    final_update.add(fac.UpdateInstruction(cc_15, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2570, 4))
    st_12 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_12)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_14, False))
    final_update.add(fac.UpdateInstruction(cc_16, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2571, 4))
    st_13 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_13)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_14, False))
    final_update.add(fac.UpdateInstruction(cc_17, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_K')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2572, 4))
    st_14 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_14)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_14, False))
    final_update.add(fac.UpdateInstruction(cc_18, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_P')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2573, 4))
    st_15 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_15)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_19, False))
    final_update.add(fac.UpdateInstruction(cc_20, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2576, 4))
    st_16 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_16)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_19, False))
    final_update.add(fac.UpdateInstruction(cc_21, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2577, 4))
    st_17 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_17)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_19, False))
    final_update.add(fac.UpdateInstruction(cc_22, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2578, 4))
    st_18 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_18)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_19, False))
    final_update.add(fac.UpdateInstruction(cc_23, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_L')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2579, 4))
    st_19 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_19)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_24, False))
    final_update.add(fac.UpdateInstruction(cc_25, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2582, 4))
    st_20 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_20)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_24, False))
    final_update.add(fac.UpdateInstruction(cc_26, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2583, 4))
    st_21 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_21)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_27, False))
    final_update.add(fac.UpdateInstruction(cc_28, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CouponNumber_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2586, 4))
    st_22 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_22)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_27, False))
    final_update.add(fac.UpdateInstruction(cc_29, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CouponNumber_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2587, 4))
    st_23 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_23)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_30, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Flag')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2589, 3))
    st_24 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_24)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_31, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Indicator')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2590, 3))
    st_25 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_25)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_32, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Place')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2591, 3))
    st_26 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_26)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_33, False))
    final_update.add(fac.UpdateInstruction(cc_34, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Narrative_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2593, 4))
    st_27 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_27)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_33, False))
    final_update.add(fac.UpdateInstruction(cc_35, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CADETL._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Narrative_G')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2594, 4))
    st_28 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_28)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_1, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_2, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_3, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_0, False),
        fac.UpdateInstruction(cc_4, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_9, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_10, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_11, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_12, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_13, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_13, False) ]))
    st_11._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_15, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_15, False) ]))
    st_12._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_16, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_16, False) ]))
    st_13._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_17, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_17, False) ]))
    st_14._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_18, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_14, False),
        fac.UpdateInstruction(cc_18, False) ]))
    st_15._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_20, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    st_16._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_21, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    st_17._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_22, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    st_18._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_23, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    st_19._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_25, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_25, False) ]))
    st_20._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_26, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_26, False) ]))
    st_21._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_27, True),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_28, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_27, True),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_28, False) ]))
    st_22._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_27, True),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_27, True),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_29, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_29, False) ]))
    st_23._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_30, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_30, False) ]))
    st_24._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_31, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_31, False) ]))
    st_25._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_32, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_32, False) ]))
    st_26._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_33, True),
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_34, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_33, True),
        fac.UpdateInstruction(cc_34, False) ]))
    st_27._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_33, True),
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_33, True),
        fac.UpdateInstruction(cc_35, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_35, True) ]))
    st_28._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
MT564_CADETL._Automaton = _BuildAutomaton_6()




MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'NumberIdentification'), MT564_CAOPTN_13A_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2603, 3)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Indicator'), MT564_CAOPTN_22F_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2604, 3)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Place'), MT564_CAOPTN_94C_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2605, 3)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CurrencyOption'), MT564_CAOPTN_11A_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2606, 3)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Flag'), MT564_CAOPTN_17B_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2607, 3)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'IdentificationOfFinancialInstrument'), MT564_CAOPTN_35B_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2608, 3)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A'), MT564_CAOPTN_98A_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2610, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B'), MT564_CAOPTN_98B_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2611, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_C'), MT564_CAOPTN_98C_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2612, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_E'), MT564_CAOPTN_98E_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2613, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_F'), MT564_CAOPTN_98F_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2614, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_J'), MT564_CAOPTN_98J_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2615, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_K'), MT564_CAOPTN_98K_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2616, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Period_A'), MT564_CAOPTN_69A_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2619, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Period_B'), MT564_CAOPTN_69B_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2620, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Period_C'), MT564_CAOPTN_69C_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2621, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Period_D'), MT564_CAOPTN_69D_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2622, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Period_E'), MT564_CAOPTN_69E_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2623, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Period_F'), MT564_CAOPTN_69F_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2624, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Period_J'), MT564_CAOPTN_69J_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2625, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_A'), MT564_CAOPTN_92A_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2628, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_B'), MT564_CAOPTN_92B_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2629, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_F'), MT564_CAOPTN_92F_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2630, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_H'), MT564_CAOPTN_92H_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2631, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_J'), MT564_CAOPTN_92J_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2632, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_K'), MT564_CAOPTN_92K_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2633, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_R'), MT564_CAOPTN_92R_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2634, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_A'), MT564_CAOPTN_90A_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2637, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_B'), MT564_CAOPTN_90B_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2638, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_E'), MT564_CAOPTN_90E_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2639, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument_B'), MT564_CAOPTN_36B_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2642, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument_C'), MT564_CAOPTN_36C_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2643, 4)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'SECMOVE'), MT564_CAOPTN_SECMOVE, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2645, 3)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CASHMOVE'), MT564_CAOPTN_CASHMOVE, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2646, 3)))

MT564_CAOPTN._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Narrative'), MT564_CAOPTN_70E_4c_Type, scope=MT564_CAOPTN, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2647, 3)))

def _BuildAutomaton_7 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_7
    del _BuildAutomaton_7
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2605, 3))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2606, 3))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2608, 3))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2609, 3))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2610, 4))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2611, 4))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2612, 4))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2613, 4))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2614, 4))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2615, 4))
    counters.add(cc_9)
    cc_10 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2616, 4))
    counters.add(cc_10)
    cc_11 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2618, 3))
    counters.add(cc_11)
    cc_12 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2619, 4))
    counters.add(cc_12)
    cc_13 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2620, 4))
    counters.add(cc_13)
    cc_14 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2621, 4))
    counters.add(cc_14)
    cc_15 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2622, 4))
    counters.add(cc_15)
    cc_16 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2623, 4))
    counters.add(cc_16)
    cc_17 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2624, 4))
    counters.add(cc_17)
    cc_18 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2625, 4))
    counters.add(cc_18)
    cc_19 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2627, 3))
    counters.add(cc_19)
    cc_20 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2628, 4))
    counters.add(cc_20)
    cc_21 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2629, 4))
    counters.add(cc_21)
    cc_22 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2630, 4))
    counters.add(cc_22)
    cc_23 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2631, 4))
    counters.add(cc_23)
    cc_24 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2632, 4))
    counters.add(cc_24)
    cc_25 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2633, 4))
    counters.add(cc_25)
    cc_26 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2634, 4))
    counters.add(cc_26)
    cc_27 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2636, 3))
    counters.add(cc_27)
    cc_28 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2637, 4))
    counters.add(cc_28)
    cc_29 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2638, 4))
    counters.add(cc_29)
    cc_30 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2639, 4))
    counters.add(cc_30)
    cc_31 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2641, 3))
    counters.add(cc_31)
    cc_32 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2642, 4))
    counters.add(cc_32)
    cc_33 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2643, 4))
    counters.add(cc_33)
    cc_34 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2645, 3))
    counters.add(cc_34)
    cc_35 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2646, 3))
    counters.add(cc_35)
    cc_36 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2647, 3))
    counters.add(cc_36)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'NumberIdentification')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2603, 3))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Indicator')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2604, 3))
    st_1 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Place')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2605, 3))
    st_2 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CurrencyOption')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2606, 3))
    st_3 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Flag')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2607, 3))
    st_4 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'IdentificationOfFinancialInstrument')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2608, 3))
    st_5 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2610, 4))
    st_6 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2611, 4))
    st_7 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2612, 4))
    st_8 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2613, 4))
    st_9 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2614, 4))
    st_10 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_9, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_J')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2615, 4))
    st_11 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    final_update.add(fac.UpdateInstruction(cc_10, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_K')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2616, 4))
    st_12 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_12)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_11, False))
    final_update.add(fac.UpdateInstruction(cc_12, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Period_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2619, 4))
    st_13 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_13)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_11, False))
    final_update.add(fac.UpdateInstruction(cc_13, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Period_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2620, 4))
    st_14 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_14)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_11, False))
    final_update.add(fac.UpdateInstruction(cc_14, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Period_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2621, 4))
    st_15 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_15)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_11, False))
    final_update.add(fac.UpdateInstruction(cc_15, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Period_D')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2622, 4))
    st_16 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_16)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_11, False))
    final_update.add(fac.UpdateInstruction(cc_16, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Period_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2623, 4))
    st_17 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_17)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_11, False))
    final_update.add(fac.UpdateInstruction(cc_17, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Period_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2624, 4))
    st_18 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_18)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_11, False))
    final_update.add(fac.UpdateInstruction(cc_18, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Period_J')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2625, 4))
    st_19 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_19)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_19, False))
    final_update.add(fac.UpdateInstruction(cc_20, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2628, 4))
    st_20 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_20)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_19, False))
    final_update.add(fac.UpdateInstruction(cc_21, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2629, 4))
    st_21 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_21)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_19, False))
    final_update.add(fac.UpdateInstruction(cc_22, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2630, 4))
    st_22 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_22)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_19, False))
    final_update.add(fac.UpdateInstruction(cc_23, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_H')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2631, 4))
    st_23 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_23)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_19, False))
    final_update.add(fac.UpdateInstruction(cc_24, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_J')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2632, 4))
    st_24 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_24)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_19, False))
    final_update.add(fac.UpdateInstruction(cc_25, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_K')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2633, 4))
    st_25 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_25)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_19, False))
    final_update.add(fac.UpdateInstruction(cc_26, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_R')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2634, 4))
    st_26 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_26)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_27, False))
    final_update.add(fac.UpdateInstruction(cc_28, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2637, 4))
    st_27 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_27)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_27, False))
    final_update.add(fac.UpdateInstruction(cc_29, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2638, 4))
    st_28 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_28)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_27, False))
    final_update.add(fac.UpdateInstruction(cc_30, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2639, 4))
    st_29 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_29)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_31, False))
    final_update.add(fac.UpdateInstruction(cc_32, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2642, 4))
    st_30 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_30)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_31, False))
    final_update.add(fac.UpdateInstruction(cc_33, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2643, 4))
    st_31 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_31)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_34, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'SECMOVE')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2645, 3))
    st_32 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_32)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_35, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CASHMOVE')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2646, 3))
    st_33 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_33)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_36, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Narrative')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2647, 3))
    st_34 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_34)
    transitions = []
    transitions.append(fac.Transition(st_1, [
         ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
         ]))
    transitions.append(fac.Transition(st_2, [
         ]))
    transitions.append(fac.Transition(st_3, [
         ]))
    transitions.append(fac.Transition(st_4, [
         ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
         ]))
    transitions.append(fac.Transition(st_5, [
         ]))
    transitions.append(fac.Transition(st_6, [
         ]))
    transitions.append(fac.Transition(st_7, [
         ]))
    transitions.append(fac.Transition(st_8, [
         ]))
    transitions.append(fac.Transition(st_9, [
         ]))
    transitions.append(fac.Transition(st_10, [
         ]))
    transitions.append(fac.Transition(st_11, [
         ]))
    transitions.append(fac.Transition(st_12, [
         ]))
    transitions.append(fac.Transition(st_13, [
         ]))
    transitions.append(fac.Transition(st_14, [
         ]))
    transitions.append(fac.Transition(st_15, [
         ]))
    transitions.append(fac.Transition(st_16, [
         ]))
    transitions.append(fac.Transition(st_17, [
         ]))
    transitions.append(fac.Transition(st_18, [
         ]))
    transitions.append(fac.Transition(st_19, [
         ]))
    transitions.append(fac.Transition(st_20, [
         ]))
    transitions.append(fac.Transition(st_21, [
         ]))
    transitions.append(fac.Transition(st_22, [
         ]))
    transitions.append(fac.Transition(st_23, [
         ]))
    transitions.append(fac.Transition(st_24, [
         ]))
    transitions.append(fac.Transition(st_25, [
         ]))
    transitions.append(fac.Transition(st_26, [
         ]))
    transitions.append(fac.Transition(st_27, [
         ]))
    transitions.append(fac.Transition(st_28, [
         ]))
    transitions.append(fac.Transition(st_29, [
         ]))
    transitions.append(fac.Transition(st_30, [
         ]))
    transitions.append(fac.Transition(st_31, [
         ]))
    transitions.append(fac.Transition(st_32, [
         ]))
    transitions.append(fac.Transition(st_33, [
         ]))
    transitions.append(fac.Transition(st_34, [
         ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_4, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_5, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_6, False) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_7, False) ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_8, False) ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_9, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_9, False) ]))
    st_11._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_3, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_10, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_3, False),
        fac.UpdateInstruction(cc_10, False) ]))
    st_12._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_12, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_12, False) ]))
    st_13._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_13, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_13, False) ]))
    st_14._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_14, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_14, False) ]))
    st_15._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_15, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_15, False) ]))
    st_16._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_16, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_16, False) ]))
    st_17._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_17, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_17, False) ]))
    st_18._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_11, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_18, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_11, False),
        fac.UpdateInstruction(cc_18, False) ]))
    st_19._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_20, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_20, False) ]))
    st_20._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_21, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_21, False) ]))
    st_21._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_22, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_22, False) ]))
    st_22._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_23, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_23, False) ]))
    st_23._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_24, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_24, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_24, False) ]))
    st_24._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_25, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_25, False) ]))
    st_25._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_19, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_26, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_19, False),
        fac.UpdateInstruction(cc_26, False) ]))
    st_26._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_27, True),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_28, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_27, True),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_27, True),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_28, False) ]))
    st_27._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_27, True),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_27, True),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_29, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_27, True),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_29, False) ]))
    st_28._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_27, True),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_27, True),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_27, True),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_30, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_27, False),
        fac.UpdateInstruction(cc_30, False) ]))
    st_29._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_31, True),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_32, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_31, True),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_31, False),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_31, False),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_31, False),
        fac.UpdateInstruction(cc_32, False) ]))
    st_30._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_31, True),
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_31, True),
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_33, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_31, False),
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_31, False),
        fac.UpdateInstruction(cc_33, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_31, False),
        fac.UpdateInstruction(cc_33, False) ]))
    st_31._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_34, True) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_34, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_34, False) ]))
    st_32._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_35, True) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_35, False) ]))
    st_33._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_36, True) ]))
    st_34._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
MT564_CAOPTN._Automaton = _BuildAutomaton_7()




MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Indicator_F'), MT564_CAOPTN_SECMOVE_22F_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2656, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Indicator_H'), MT564_CAOPTN_SECMOVE_22H_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2657, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'IdentificationOfFinancialInstrument'), MT564_CAOPTN_SECMOVE_35B_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2659, 3)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'FIA'), MT564_CAOPTN_SECMOVE_FIA, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2660, 3)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'EntitledQuantity'), MT564_CAOPTN_SECMOVE_36B_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2661, 3)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfSafekeeping_B'), MT564_CAOPTN_SECMOVE_94B_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2663, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfSafekeeping_C'), MT564_CAOPTN_SECMOVE_94C_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2664, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfSafekeeping_F'), MT564_CAOPTN_SECMOVE_94F_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2665, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CurrencyOption'), MT564_CAOPTN_SECMOVE_11A_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2668, 3)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_A'), MT564_CAOPTN_SECMOVE_69A_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2670, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_B'), MT564_CAOPTN_SECMOVE_69B_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2671, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_C'), MT564_CAOPTN_SECMOVE_69C_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2672, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_D'), MT564_CAOPTN_SECMOVE_69D_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2673, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_E'), MT564_CAOPTN_SECMOVE_69E_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2674, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_F'), MT564_CAOPTN_SECMOVE_69F_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2675, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_J'), MT564_CAOPTN_SECMOVE_69J_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2676, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_A'), MT564_CAOPTN_SECMOVE_90A_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2679, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_B'), MT564_CAOPTN_SECMOVE_90B_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2680, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_E'), MT564_CAOPTN_SECMOVE_90E_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2681, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_F'), MT564_CAOPTN_SECMOVE_90F_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2682, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_J'), MT564_CAOPTN_SECMOVE_90J_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2683, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_K'), MT564_CAOPTN_SECMOVE_90K_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2684, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_L'), MT564_CAOPTN_SECMOVE_90L_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2685, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_A'), MT564_CAOPTN_SECMOVE_92A_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2688, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_D'), MT564_CAOPTN_SECMOVE_92D_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2689, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_F'), MT564_CAOPTN_SECMOVE_92F_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2690, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_J'), MT564_CAOPTN_SECMOVE_92J_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2691, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_K'), MT564_CAOPTN_SECMOVE_92K_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2692, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_L'), MT564_CAOPTN_SECMOVE_92L_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2693, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_M'), MT564_CAOPTN_SECMOVE_92M_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2694, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_N'), MT564_CAOPTN_SECMOVE_92N_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2695, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A'), MT564_CAOPTN_SECMOVE_98A_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2698, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B'), MT564_CAOPTN_SECMOVE_98B_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2699, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_C'), MT564_CAOPTN_SECMOVE_98C_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2700, 4)))

MT564_CAOPTN_SECMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_E'), MT564_CAOPTN_SECMOVE_98E_Type, scope=MT564_CAOPTN_SECMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2701, 4)))

def _BuildAutomaton_8 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_8
    del _BuildAutomaton_8
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2660, 3))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2661, 3))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2662, 3))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2663, 4))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2664, 4))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2665, 4))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2667, 3))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2668, 3))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2669, 3))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2670, 4))
    counters.add(cc_9)
    cc_10 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2671, 4))
    counters.add(cc_10)
    cc_11 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2672, 4))
    counters.add(cc_11)
    cc_12 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2673, 4))
    counters.add(cc_12)
    cc_13 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2674, 4))
    counters.add(cc_13)
    cc_14 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2675, 4))
    counters.add(cc_14)
    cc_15 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2676, 4))
    counters.add(cc_15)
    cc_16 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2678, 3))
    counters.add(cc_16)
    cc_17 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2679, 4))
    counters.add(cc_17)
    cc_18 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2680, 4))
    counters.add(cc_18)
    cc_19 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2681, 4))
    counters.add(cc_19)
    cc_20 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2682, 4))
    counters.add(cc_20)
    cc_21 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2683, 4))
    counters.add(cc_21)
    cc_22 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2684, 4))
    counters.add(cc_22)
    cc_23 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2685, 4))
    counters.add(cc_23)
    cc_24 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2687, 3))
    counters.add(cc_24)
    cc_25 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2688, 4))
    counters.add(cc_25)
    cc_26 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2689, 4))
    counters.add(cc_26)
    cc_27 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2690, 4))
    counters.add(cc_27)
    cc_28 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2691, 4))
    counters.add(cc_28)
    cc_29 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2692, 4))
    counters.add(cc_29)
    cc_30 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2693, 4))
    counters.add(cc_30)
    cc_31 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2694, 4))
    counters.add(cc_31)
    cc_32 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2695, 4))
    counters.add(cc_32)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Indicator_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2656, 4))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Indicator_H')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2657, 4))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'IdentificationOfFinancialInstrument')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2659, 3))
    st_2 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'FIA')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2660, 3))
    st_3 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'EntitledQuantity')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2661, 3))
    st_4 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfSafekeeping_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2663, 4))
    st_5 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfSafekeeping_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2664, 4))
    st_6 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfSafekeeping_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2665, 4))
    st_7 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Indicator_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2667, 3))
    st_8 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CurrencyOption')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2668, 3))
    st_9 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2670, 4))
    st_10 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2671, 4))
    st_11 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2672, 4))
    st_12 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_12)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_D')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2673, 4))
    st_13 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_13)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2674, 4))
    st_14 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_14)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2675, 4))
    st_15 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_15)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TradingPeriod_J')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2676, 4))
    st_16 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_16)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2679, 4))
    st_17 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_17)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2680, 4))
    st_18 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_18)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2681, 4))
    st_19 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_19)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2682, 4))
    st_20 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_20)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_J')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2683, 4))
    st_21 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_21)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_K')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2684, 4))
    st_22 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_22)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_L')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2685, 4))
    st_23 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_23)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2688, 4))
    st_24 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_24)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_D')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2689, 4))
    st_25 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_25)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2690, 4))
    st_26 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_26)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_J')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2691, 4))
    st_27 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_27)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_K')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2692, 4))
    st_28 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_28)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_L')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2693, 4))
    st_29 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_29)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_M')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2694, 4))
    st_30 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_30)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_N')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2695, 4))
    st_31 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_31)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2698, 4))
    st_32 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_32)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2699, 4))
    st_33 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_33)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2700, 4))
    st_34 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_34)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2701, 4))
    st_35 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_35)
    transitions = []
    transitions.append(fac.Transition(st_0, [
         ]))
    transitions.append(fac.Transition(st_1, [
         ]))
    transitions.append(fac.Transition(st_2, [
         ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
         ]))
    transitions.append(fac.Transition(st_1, [
         ]))
    transitions.append(fac.Transition(st_2, [
         ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
         ]))
    transitions.append(fac.Transition(st_4, [
         ]))
    transitions.append(fac.Transition(st_5, [
         ]))
    transitions.append(fac.Transition(st_6, [
         ]))
    transitions.append(fac.Transition(st_7, [
         ]))
    transitions.append(fac.Transition(st_8, [
         ]))
    transitions.append(fac.Transition(st_9, [
         ]))
    transitions.append(fac.Transition(st_10, [
         ]))
    transitions.append(fac.Transition(st_11, [
         ]))
    transitions.append(fac.Transition(st_12, [
         ]))
    transitions.append(fac.Transition(st_13, [
         ]))
    transitions.append(fac.Transition(st_14, [
         ]))
    transitions.append(fac.Transition(st_15, [
         ]))
    transitions.append(fac.Transition(st_16, [
         ]))
    transitions.append(fac.Transition(st_17, [
         ]))
    transitions.append(fac.Transition(st_18, [
         ]))
    transitions.append(fac.Transition(st_19, [
         ]))
    transitions.append(fac.Transition(st_20, [
         ]))
    transitions.append(fac.Transition(st_21, [
         ]))
    transitions.append(fac.Transition(st_22, [
         ]))
    transitions.append(fac.Transition(st_23, [
         ]))
    transitions.append(fac.Transition(st_24, [
         ]))
    transitions.append(fac.Transition(st_25, [
         ]))
    transitions.append(fac.Transition(st_26, [
         ]))
    transitions.append(fac.Transition(st_27, [
         ]))
    transitions.append(fac.Transition(st_28, [
         ]))
    transitions.append(fac.Transition(st_29, [
         ]))
    transitions.append(fac.Transition(st_30, [
         ]))
    transitions.append(fac.Transition(st_31, [
         ]))
    transitions.append(fac.Transition(st_32, [
         ]))
    transitions.append(fac.Transition(st_33, [
         ]))
    transitions.append(fac.Transition(st_34, [
         ]))
    transitions.append(fac.Transition(st_35, [
         ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_7, False) ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_9, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_10, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    st_11._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_11, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    st_12._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_12, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_12, False) ]))
    st_13._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_13, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_13, False) ]))
    st_14._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_14, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_14, False) ]))
    st_15._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_15, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_15, False) ]))
    st_16._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_17, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_17, False) ]))
    st_17._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_18, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_18, False) ]))
    st_18._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_19, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_19, False) ]))
    st_19._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_20, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_20, False) ]))
    st_20._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_21, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_21, False) ]))
    st_21._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_22, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_22, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_22, False) ]))
    st_22._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_16, True),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_23, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_23, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_16, False),
        fac.UpdateInstruction(cc_23, False) ]))
    st_23._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_25, True) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_25, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_25, False) ]))
    st_24._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_26, True) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_26, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_26, False) ]))
    st_25._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_27, True) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_27, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_27, False) ]))
    st_26._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_28, True) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_28, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_28, False) ]))
    st_27._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_29, True) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_29, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_29, False) ]))
    st_28._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_30, True) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_30, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_30, False) ]))
    st_29._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_31, True) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_31, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_31, False) ]))
    st_30._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_25, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_26, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_27, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_28, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_29, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_30, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_24, True),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_31, [
        fac.UpdateInstruction(cc_32, True) ]))
    transitions.append(fac.Transition(st_32, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_33, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_34, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_32, False) ]))
    transitions.append(fac.Transition(st_35, [
        fac.UpdateInstruction(cc_24, False),
        fac.UpdateInstruction(cc_32, False) ]))
    st_31._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_32, [
         ]))
    transitions.append(fac.Transition(st_33, [
         ]))
    transitions.append(fac.Transition(st_34, [
         ]))
    transitions.append(fac.Transition(st_35, [
         ]))
    st_32._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_32, [
         ]))
    transitions.append(fac.Transition(st_33, [
         ]))
    transitions.append(fac.Transition(st_34, [
         ]))
    transitions.append(fac.Transition(st_35, [
         ]))
    st_33._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_32, [
         ]))
    transitions.append(fac.Transition(st_33, [
         ]))
    transitions.append(fac.Transition(st_34, [
         ]))
    transitions.append(fac.Transition(st_35, [
         ]))
    st_34._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_32, [
         ]))
    transitions.append(fac.Transition(st_33, [
         ]))
    transitions.append(fac.Transition(st_34, [
         ]))
    transitions.append(fac.Transition(st_35, [
         ]))
    st_35._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
MT564_CAOPTN_SECMOVE._Automaton = _BuildAutomaton_8()




MT564_CAOPTN_SECMOVE_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfListing'), MT564_CAOPTN_SECMOVE_FIA_94B_Type, scope=MT564_CAOPTN_SECMOVE_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2710, 3)))

MT564_CAOPTN_SECMOVE_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'MethodOfInterestComputationIndicator'), MT564_CAOPTN_SECMOVE_FIA_22F_Type, scope=MT564_CAOPTN_SECMOVE_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2711, 3)))

MT564_CAOPTN_SECMOVE_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_A'), MT564_CAOPTN_SECMOVE_FIA_12A_Type, scope=MT564_CAOPTN_SECMOVE_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2713, 4)))

MT564_CAOPTN_SECMOVE_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_B'), MT564_CAOPTN_SECMOVE_FIA_12B_Type, scope=MT564_CAOPTN_SECMOVE_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2714, 4)))

MT564_CAOPTN_SECMOVE_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_C'), MT564_CAOPTN_SECMOVE_FIA_12C_Type, scope=MT564_CAOPTN_SECMOVE_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2715, 4)))

MT564_CAOPTN_SECMOVE_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CurrencyOfDenomination'), MT564_CAOPTN_SECMOVE_FIA_11A_Type, scope=MT564_CAOPTN_SECMOVE_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2717, 3)))

MT564_CAOPTN_SECMOVE_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime'), MT564_CAOPTN_SECMOVE_FIA_98A_Type, scope=MT564_CAOPTN_SECMOVE_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2718, 3)))

MT564_CAOPTN_SECMOVE_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'IssuePrice_A'), MT564_CAOPTN_SECMOVE_FIA_90A_Type, scope=MT564_CAOPTN_SECMOVE_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2720, 4)))

MT564_CAOPTN_SECMOVE_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'IssuePrice_B'), MT564_CAOPTN_SECMOVE_FIA_90B_Type, scope=MT564_CAOPTN_SECMOVE_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2721, 4)))

MT564_CAOPTN_SECMOVE_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'IssuePrice_E'), MT564_CAOPTN_SECMOVE_FIA_90E_Type, scope=MT564_CAOPTN_SECMOVE_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2722, 4)))

MT564_CAOPTN_SECMOVE_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_A'), MT564_CAOPTN_SECMOVE_FIA_92A_Type, scope=MT564_CAOPTN_SECMOVE_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2725, 4)))

MT564_CAOPTN_SECMOVE_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_K'), MT564_CAOPTN_SECMOVE_FIA_92K_Type, scope=MT564_CAOPTN_SECMOVE_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2726, 4)))

MT564_CAOPTN_SECMOVE_FIA._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument'), MT564_CAOPTN_SECMOVE_FIA_36B_Type, scope=MT564_CAOPTN_SECMOVE_FIA, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2728, 3)))

def _BuildAutomaton_9 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_9
    del _BuildAutomaton_9
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2710, 3))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2711, 3))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2712, 3))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2713, 4))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2714, 4))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2715, 4))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2717, 3))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2718, 3))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2719, 3))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2720, 4))
    counters.add(cc_9)
    cc_10 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2721, 4))
    counters.add(cc_10)
    cc_11 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2722, 4))
    counters.add(cc_11)
    cc_12 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2724, 3))
    counters.add(cc_12)
    cc_13 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2725, 4))
    counters.add(cc_13)
    cc_14 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2726, 4))
    counters.add(cc_14)
    cc_15 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2728, 3))
    counters.add(cc_15)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PlaceOfListing')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2710, 3))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'MethodOfInterestComputationIndicator')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2711, 3))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2713, 4))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2714, 4))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'TypeOfFinancialInstrument_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2715, 4))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CurrencyOfDenomination')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2717, 3))
    st_5 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2718, 3))
    st_6 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_9, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'IssuePrice_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2720, 4))
    st_7 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_10, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'IssuePrice_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2721, 4))
    st_8 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_8, False))
    final_update.add(fac.UpdateInstruction(cc_11, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'IssuePrice_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2722, 4))
    st_9 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_12, False))
    final_update.add(fac.UpdateInstruction(cc_13, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2725, 4))
    st_10 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_12, False))
    final_update.add(fac.UpdateInstruction(cc_14, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_K')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2726, 4))
    st_11 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_15, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_SECMOVE_FIA._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'QuantityOfFinancialInstrument')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2728, 3))
    st_12 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_12)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_3, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_4, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_5, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_2, False),
        fac.UpdateInstruction(cc_5, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_6, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_7, False) ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_9, True) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_9, False) ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_10, True) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_10, False) ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_8, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_11, True) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, False),
        fac.UpdateInstruction(cc_11, False) ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_12, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_13, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_12, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_12, False),
        fac.UpdateInstruction(cc_13, False) ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_12, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_12, True),
        fac.UpdateInstruction(cc_14, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_14, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_12, False),
        fac.UpdateInstruction(cc_14, False) ]))
    st_11._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_15, True) ]))
    st_12._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
MT564_CAOPTN_SECMOVE_FIA._Automaton = _BuildAutomaton_9()




MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Indicator_F'), MT564_CAOPTN_CASHMOVE_22F_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2737, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Indicator_H'), MT564_CAOPTN_CASHMOVE_22H_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2738, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Place'), MT564_CAOPTN_CASHMOVE_94C_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2740, 3)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CashAccount_A'), MT564_CAOPTN_CASHMOVE_97A_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2742, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CashAccount_E'), MT564_CAOPTN_CASHMOVE_97E_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2743, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Amount'), MT564_CAOPTN_CASHMOVE_19B_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2745, 3)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A'), MT564_CAOPTN_CASHMOVE_98A_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2747, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B'), MT564_CAOPTN_CASHMOVE_98B_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2748, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_C'), MT564_CAOPTN_CASHMOVE_98C_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2749, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'DateTime_E'), MT564_CAOPTN_CASHMOVE_98E_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2750, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_A'), MT564_CAOPTN_CASHMOVE_92A_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2753, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_B'), MT564_CAOPTN_CASHMOVE_92B_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2754, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_F'), MT564_CAOPTN_CASHMOVE_92F_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2755, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_H'), MT564_CAOPTN_CASHMOVE_92H_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2756, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_J'), MT564_CAOPTN_CASHMOVE_92J_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2757, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_K'), MT564_CAOPTN_CASHMOVE_92K_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2758, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_M'), MT564_CAOPTN_CASHMOVE_92M_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2759, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Rate_R'), MT564_CAOPTN_CASHMOVE_92R_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2760, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_A'), MT564_CAOPTN_CASHMOVE_90A_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2763, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_B'), MT564_CAOPTN_CASHMOVE_90B_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2764, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_E'), MT564_CAOPTN_CASHMOVE_90E_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2765, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_F'), MT564_CAOPTN_CASHMOVE_90F_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2766, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_J'), MT564_CAOPTN_CASHMOVE_90J_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2767, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_K'), MT564_CAOPTN_CASHMOVE_90K_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2768, 4)))

MT564_CAOPTN_CASHMOVE._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Price_L'), MT564_CAOPTN_CASHMOVE_90L_Type, scope=MT564_CAOPTN_CASHMOVE, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2769, 4)))

def _BuildAutomaton_10 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_10
    del _BuildAutomaton_10
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2740, 3))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2741, 3))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2742, 4))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2743, 4))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2745, 3))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2752, 3))
    counters.add(cc_5)
    cc_6 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2753, 4))
    counters.add(cc_6)
    cc_7 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2754, 4))
    counters.add(cc_7)
    cc_8 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2755, 4))
    counters.add(cc_8)
    cc_9 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2756, 4))
    counters.add(cc_9)
    cc_10 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2757, 4))
    counters.add(cc_10)
    cc_11 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2758, 4))
    counters.add(cc_11)
    cc_12 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2759, 4))
    counters.add(cc_12)
    cc_13 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2760, 4))
    counters.add(cc_13)
    cc_14 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2762, 3))
    counters.add(cc_14)
    cc_15 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2763, 4))
    counters.add(cc_15)
    cc_16 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2764, 4))
    counters.add(cc_16)
    cc_17 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2765, 4))
    counters.add(cc_17)
    cc_18 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2766, 4))
    counters.add(cc_18)
    cc_19 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2767, 4))
    counters.add(cc_19)
    cc_20 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2768, 4))
    counters.add(cc_20)
    cc_21 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2769, 4))
    counters.add(cc_21)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Indicator_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2737, 4))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Indicator_H')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2738, 4))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Place')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2740, 3))
    st_2 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CashAccount_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2742, 4))
    st_3 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CashAccount_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2743, 4))
    st_4 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = None
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Amount')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2745, 3))
    st_5 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2747, 4))
    st_6 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_6)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2748, 4))
    st_7 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_7)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_C')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2749, 4))
    st_8 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_8)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'DateTime_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2750, 4))
    st_9 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_9)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_6, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2753, 4))
    st_10 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_10)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_7, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2754, 4))
    st_11 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_11)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_8, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2755, 4))
    st_12 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_12)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_9, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_H')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2756, 4))
    st_13 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_13)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_10, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_J')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2757, 4))
    st_14 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_14)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_11, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_K')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2758, 4))
    st_15 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_15)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_12, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_M')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2759, 4))
    st_16 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_16)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_5, False))
    final_update.add(fac.UpdateInstruction(cc_13, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Rate_R')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2760, 4))
    st_17 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_17)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_14, False))
    final_update.add(fac.UpdateInstruction(cc_15, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_A')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2763, 4))
    st_18 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_18)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_14, False))
    final_update.add(fac.UpdateInstruction(cc_16, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_B')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2764, 4))
    st_19 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_19)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_14, False))
    final_update.add(fac.UpdateInstruction(cc_17, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_E')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2765, 4))
    st_20 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_20)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_14, False))
    final_update.add(fac.UpdateInstruction(cc_18, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_F')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2766, 4))
    st_21 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_21)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_14, False))
    final_update.add(fac.UpdateInstruction(cc_19, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_J')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2767, 4))
    st_22 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_22)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_14, False))
    final_update.add(fac.UpdateInstruction(cc_20, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_K')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2768, 4))
    st_23 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_23)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_14, False))
    final_update.add(fac.UpdateInstruction(cc_21, False))
    symbol = pyxb.binding.content.ElementUse(MT564_CAOPTN_CASHMOVE._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Price_L')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2769, 4))
    st_24 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_24)
    transitions = []
    transitions.append(fac.Transition(st_0, [
         ]))
    transitions.append(fac.Transition(st_1, [
         ]))
    transitions.append(fac.Transition(st_2, [
         ]))
    transitions.append(fac.Transition(st_3, [
         ]))
    transitions.append(fac.Transition(st_4, [
         ]))
    transitions.append(fac.Transition(st_5, [
         ]))
    transitions.append(fac.Transition(st_6, [
         ]))
    transitions.append(fac.Transition(st_7, [
         ]))
    transitions.append(fac.Transition(st_8, [
         ]))
    transitions.append(fac.Transition(st_9, [
         ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_0, [
         ]))
    transitions.append(fac.Transition(st_1, [
         ]))
    transitions.append(fac.Transition(st_2, [
         ]))
    transitions.append(fac.Transition(st_3, [
         ]))
    transitions.append(fac.Transition(st_4, [
         ]))
    transitions.append(fac.Transition(st_5, [
         ]))
    transitions.append(fac.Transition(st_6, [
         ]))
    transitions.append(fac.Transition(st_7, [
         ]))
    transitions.append(fac.Transition(st_8, [
         ]))
    transitions.append(fac.Transition(st_9, [
         ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False),
        fac.UpdateInstruction(cc_2, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_1, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_1, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_1, False),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_1, False),
        fac.UpdateInstruction(cc_3, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_6, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_7, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_8, [
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_9, [
        fac.UpdateInstruction(cc_4, False) ]))
    st_5._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
         ]))
    transitions.append(fac.Transition(st_7, [
         ]))
    transitions.append(fac.Transition(st_8, [
         ]))
    transitions.append(fac.Transition(st_9, [
         ]))
    transitions.append(fac.Transition(st_10, [
         ]))
    transitions.append(fac.Transition(st_11, [
         ]))
    transitions.append(fac.Transition(st_12, [
         ]))
    transitions.append(fac.Transition(st_13, [
         ]))
    transitions.append(fac.Transition(st_14, [
         ]))
    transitions.append(fac.Transition(st_15, [
         ]))
    transitions.append(fac.Transition(st_16, [
         ]))
    transitions.append(fac.Transition(st_17, [
         ]))
    transitions.append(fac.Transition(st_18, [
         ]))
    transitions.append(fac.Transition(st_19, [
         ]))
    transitions.append(fac.Transition(st_20, [
         ]))
    transitions.append(fac.Transition(st_21, [
         ]))
    transitions.append(fac.Transition(st_22, [
         ]))
    transitions.append(fac.Transition(st_23, [
         ]))
    transitions.append(fac.Transition(st_24, [
         ]))
    st_6._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
         ]))
    transitions.append(fac.Transition(st_7, [
         ]))
    transitions.append(fac.Transition(st_8, [
         ]))
    transitions.append(fac.Transition(st_9, [
         ]))
    transitions.append(fac.Transition(st_10, [
         ]))
    transitions.append(fac.Transition(st_11, [
         ]))
    transitions.append(fac.Transition(st_12, [
         ]))
    transitions.append(fac.Transition(st_13, [
         ]))
    transitions.append(fac.Transition(st_14, [
         ]))
    transitions.append(fac.Transition(st_15, [
         ]))
    transitions.append(fac.Transition(st_16, [
         ]))
    transitions.append(fac.Transition(st_17, [
         ]))
    transitions.append(fac.Transition(st_18, [
         ]))
    transitions.append(fac.Transition(st_19, [
         ]))
    transitions.append(fac.Transition(st_20, [
         ]))
    transitions.append(fac.Transition(st_21, [
         ]))
    transitions.append(fac.Transition(st_22, [
         ]))
    transitions.append(fac.Transition(st_23, [
         ]))
    transitions.append(fac.Transition(st_24, [
         ]))
    st_7._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
         ]))
    transitions.append(fac.Transition(st_7, [
         ]))
    transitions.append(fac.Transition(st_8, [
         ]))
    transitions.append(fac.Transition(st_9, [
         ]))
    transitions.append(fac.Transition(st_10, [
         ]))
    transitions.append(fac.Transition(st_11, [
         ]))
    transitions.append(fac.Transition(st_12, [
         ]))
    transitions.append(fac.Transition(st_13, [
         ]))
    transitions.append(fac.Transition(st_14, [
         ]))
    transitions.append(fac.Transition(st_15, [
         ]))
    transitions.append(fac.Transition(st_16, [
         ]))
    transitions.append(fac.Transition(st_17, [
         ]))
    transitions.append(fac.Transition(st_18, [
         ]))
    transitions.append(fac.Transition(st_19, [
         ]))
    transitions.append(fac.Transition(st_20, [
         ]))
    transitions.append(fac.Transition(st_21, [
         ]))
    transitions.append(fac.Transition(st_22, [
         ]))
    transitions.append(fac.Transition(st_23, [
         ]))
    transitions.append(fac.Transition(st_24, [
         ]))
    st_8._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_6, [
         ]))
    transitions.append(fac.Transition(st_7, [
         ]))
    transitions.append(fac.Transition(st_8, [
         ]))
    transitions.append(fac.Transition(st_9, [
         ]))
    transitions.append(fac.Transition(st_10, [
         ]))
    transitions.append(fac.Transition(st_11, [
         ]))
    transitions.append(fac.Transition(st_12, [
         ]))
    transitions.append(fac.Transition(st_13, [
         ]))
    transitions.append(fac.Transition(st_14, [
         ]))
    transitions.append(fac.Transition(st_15, [
         ]))
    transitions.append(fac.Transition(st_16, [
         ]))
    transitions.append(fac.Transition(st_17, [
         ]))
    transitions.append(fac.Transition(st_18, [
         ]))
    transitions.append(fac.Transition(st_19, [
         ]))
    transitions.append(fac.Transition(st_20, [
         ]))
    transitions.append(fac.Transition(st_21, [
         ]))
    transitions.append(fac.Transition(st_22, [
         ]))
    transitions.append(fac.Transition(st_23, [
         ]))
    transitions.append(fac.Transition(st_24, [
         ]))
    st_9._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_6, True) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_6, False) ]))
    st_10._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_7, True) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_7, False) ]))
    st_11._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_8, True) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_8, False) ]))
    st_12._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_9, True) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_9, False) ]))
    st_13._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_10, True) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_10, False) ]))
    st_14._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_11, True) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_11, False) ]))
    st_15._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_12, True) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_12, False) ]))
    st_16._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_10, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_11, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_12, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_13, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_14, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_15, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_16, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_5, True),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_17, [
        fac.UpdateInstruction(cc_13, True) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_13, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_5, False),
        fac.UpdateInstruction(cc_13, False) ]))
    st_17._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_15, True) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_15, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_15, False) ]))
    st_18._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_16, True) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_16, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_16, False) ]))
    st_19._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_17, True) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_17, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_17, False) ]))
    st_20._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_18, True) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_18, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_18, False) ]))
    st_21._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_19, True) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_19, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_19, False) ]))
    st_22._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_20, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_20, True) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_20, False) ]))
    st_23._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_18, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_19, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_20, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_21, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_22, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_23, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_14, True),
        fac.UpdateInstruction(cc_21, False) ]))
    transitions.append(fac.Transition(st_24, [
        fac.UpdateInstruction(cc_21, True) ]))
    st_24._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
MT564_CAOPTN_CASHMOVE._Automaton = _BuildAutomaton_10()




MT564_ADDINFO._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'Narrative'), MT564_ADDINFO_70E_4c_Type, scope=MT564_ADDINFO, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2778, 3)))

MT564_ADDINFO._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PARTY_L'), MT564_ADDINFO_95L_Type, scope=MT564_ADDINFO, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2780, 4)))

MT564_ADDINFO._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PARTY_P'), MT564_ADDINFO_95P_Type, scope=MT564_ADDINFO, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2781, 4)))

MT564_ADDINFO._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PARTY_Q'), MT564_ADDINFO_95Q_Type, scope=MT564_ADDINFO, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2782, 4)))

MT564_ADDINFO._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'PARTY_R'), MT564_ADDINFO_95R_Type, scope=MT564_ADDINFO, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2783, 4)))

def _BuildAutomaton_11 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_11
    del _BuildAutomaton_11
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2778, 3))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2779, 3))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2780, 4))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2781, 4))
    counters.add(cc_3)
    cc_4 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2782, 4))
    counters.add(cc_4)
    cc_5 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2783, 4))
    counters.add(cc_5)
    states = []
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(MT564_ADDINFO._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'Narrative')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2778, 3))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(MT564_ADDINFO._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PARTY_L')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2780, 4))
    st_1 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(MT564_ADDINFO._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PARTY_P')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2781, 4))
    st_2 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    final_update.add(fac.UpdateInstruction(cc_4, False))
    symbol = pyxb.binding.content.ElementUse(MT564_ADDINFO._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PARTY_Q')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2782, 4))
    st_3 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    final_update.add(fac.UpdateInstruction(cc_5, False))
    symbol = pyxb.binding.content.ElementUse(MT564_ADDINFO._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'PARTY_R')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2783, 4))
    st_4 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    transitions = []
    transitions.append(fac.Transition(st_0, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_2, False) ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_3, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_3, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_4, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_4, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_4, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_1, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, True),
        fac.UpdateInstruction(cc_5, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_5, True) ]))
    st_4._set_transitionSet(transitions)
    return fac.Automaton(states, counters, True, containing_state=None)
MT564_ADDINFO._Automaton = _BuildAutomaton_11()




CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'GENL'), MT564_GENL, scope=CTD_ANON, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2793, 4)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'USECU'), MT564_USECU, scope=CTD_ANON, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2794, 4)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'INTSEC'), MT564_INTSEC, scope=CTD_ANON, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2795, 4)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CADETL'), MT564_CADETL, scope=CTD_ANON, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2796, 4)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'CAOPTN'), MT564_CAOPTN, scope=CTD_ANON, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2797, 4)))

CTD_ANON._AddElement(pyxb.binding.basis.element(pyxb.namespace.ExpandedName(Namespace, 'ADDINFO'), MT564_ADDINFO, scope=CTD_ANON, location=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2798, 4)))

def _BuildAutomaton_12 ():
    # Remove this helper function from the namespace after it is invoked
    global _BuildAutomaton_12
    del _BuildAutomaton_12
    import pyxb.utils.fac as fac

    counters = set()
    cc_0 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2795, 4))
    counters.add(cc_0)
    cc_1 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2796, 4))
    counters.add(cc_1)
    cc_2 = fac.CounterCondition(min=0, max=None, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2797, 4))
    counters.add(cc_2)
    cc_3 = fac.CounterCondition(min=0, max=1, metadata=pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2798, 4))
    counters.add(cc_3)
    states = []
    final_update = None
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'GENL')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2793, 4))
    st_0 = fac.State(symbol, is_initial=True, final_update=final_update, is_unordered_catenation=False)
    states.append(st_0)
    final_update = set()
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'USECU')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2794, 4))
    st_1 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_1)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_0, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'INTSEC')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2795, 4))
    st_2 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_2)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_1, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CADETL')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2796, 4))
    st_3 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_3)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_2, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'CAOPTN')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2797, 4))
    st_4 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_4)
    final_update = set()
    final_update.add(fac.UpdateInstruction(cc_3, False))
    symbol = pyxb.binding.content.ElementUse(CTD_ANON._UseForTag(pyxb.namespace.ExpandedName(Namespace, 'ADDINFO')), pyxb.utils.utility.Location('C:\\Projects\\Code\\SwiftMessagingSolution_Python3\\base\\extensions\\SwiftIntegration\\Utilities\\TemplateFiles\\MT564.xsd', 2798, 4))
    st_5 = fac.State(symbol, is_initial=False, final_update=final_update, is_unordered_catenation=False)
    states.append(st_5)
    transitions = []
    transitions.append(fac.Transition(st_1, [
         ]))
    st_0._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
         ]))
    transitions.append(fac.Transition(st_3, [
         ]))
    transitions.append(fac.Transition(st_4, [
         ]))
    transitions.append(fac.Transition(st_5, [
         ]))
    st_1._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_2, [
        fac.UpdateInstruction(cc_0, True) ]))
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_0, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_0, False) ]))
    st_2._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_3, [
        fac.UpdateInstruction(cc_1, True) ]))
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_1, False) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_1, False) ]))
    st_3._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_4, [
        fac.UpdateInstruction(cc_2, True) ]))
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_2, False) ]))
    st_4._set_transitionSet(transitions)
    transitions = []
    transitions.append(fac.Transition(st_5, [
        fac.UpdateInstruction(cc_3, True) ]))
    st_5._set_transitionSet(transitions)
    return fac.Automaton(states, counters, False, containing_state=None)
CTD_ANON._Automaton = _BuildAutomaton_12()


