[Core Pricing]FInstrumentAndTrades:domesticRateInTheoreticalPriceInverse = select(interestModelProviderCurveComponentInTheoreticalPrice, 
  nil->nil, 
  default->select(openInstrumentOrInstrument:hasInverseValueProviderInTheoreticalPrice [theoreticalPrice], 
    true->CreateInterestComponentWithSimulatedForeignRate(domesticRateInTheoreticalPriceInverseVariable, interestModelProviderCurveComponentInTheoreticalPrice, interestModelProviderStartDateInTheoreticalPrice, forwardValuationDateInTheoreticalPrice, foreignCurveRateType, foreignCurveDayCountMethod, foreignCurveCalendarInfo), 
    false->CreateInterestComponentWithSimulatedDomesticRate(domesticRateInTheoreticalPriceInverseVariable, interestModelProviderCurveComponentInTheoreticalPrice, interestModelProviderStartDateInTheoreticalPrice, forwardValuationDateInTheoreticalPrice, domesticCurveRateType, domesticCurveDayCountMethod, domesticCurveCalendarInfo, fxInterestModelProviderCurveComponentInTheoreticalPrice, fxInterestModelProviderStartDateInTheoreticalPrice)));
[Core Pricing]FMultiInstrumentAndTrades:domesticRateInTheoreticalPriceInverse = nil;
[Core Pricing]FPriceAggregate:domesticRateInTheoreticalPriceInverse = nil;