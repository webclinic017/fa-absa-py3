[Core Pricing]FInstrument:underlyingForwardValueInCalculationCurrency = select(forwardValueProviderTargetInPriceGreekRiskFactorsUnShifted, 
  nil->nil, 
  default->select(forwardValuationDateInPriceGreekRiskFactorsUnShifted, 
    nil->nil, 
    default->ProviderValue(forwardValueProviderTargetInPriceGreekRiskFactorsUnShifted, forwardValuationDateInPriceGreekRiskFactorsUnShifted, underlyingForwardValueCurrency)));
[Core Pricing]FInstrumentAndTrades:underlyingForwardValueInCalculationCurrency = select(instrument:underlyingForwardValueFromInterestComponent, 
  true->snoop01(theoreticalPrice, "underlyingForwardRate", alwaysMatchedFilter, lotIndex), 
  false->select(forwardValueProviderTargetInTheoreticalPrice, 
    nil->nil, 
    default->select(forwardValuationDateInTheoreticalPrice, 
      nil->nil, 
      default->select(useUnderlyingFutureProvider, 
        true->ProviderValue(forwardValueProviderTargetInTheoreticalPrice, forwardValuationDateInTheoreticalPrice, underlyingForUnderlyingForwardPriceInTheoreticalPriceCurrency) * underlyingForwardPriceFxConversion, 
        false->ProviderValue(forwardValueProviderTargetInTheoreticalPrice, forwardValuationDateInTheoreticalPrice, instrument:underlyingForwardValueCurrency)))));
[Core Pricing]FPriceAggregate:underlyingForwardValueInCalculationCurrency = select(forwardValueProviderTargetInPriceGreekRiskFactorsUnShifted, 
  nil->nil, 
  default->select(forwardValuationDateInPriceGreekRiskFactorsUnShifted, 
    nil->nil, 
    default->select(useUnderlyingFutureProvider, 
      true->ProviderValue(forwardValueProviderTargetInTheoreticalPrice, forwardValuationDateInTheoreticalPrice, underlyingForUnderlyingForwardPriceInTheoreticalPriceCurrency) * underlyingForwardPriceFxConversion, 
      false->ProviderValue(forwardValueProviderTargetInTheoreticalPrice, forwardValuationDateInTheoreticalPrice, instrument:underlyingForwardValueCurrency))));