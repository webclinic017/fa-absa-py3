[Core Pricing]FInstrumentAndTrades:carryCostInTheoreticalPriceInverse = select(collapse(interestModelProviderCurveComponentInTheoreticalPrice), 
  nil->nil, 
  default->CreateInterestComponentWithSimulatedCarryCost(carryCostInTheoreticalPriceInverseVariable, interestModelProviderCurveComponentInTheoreticalPrice, interestModelProviderStartDateInTheoreticalPrice, forwardValuationDateInTheoreticalPrice, domesticOrRepoCurveRateType, domesticOrRepoCurveDayCountMethod, domesticOrRepoCurveCalendarInfo, fxInterestModelProviderCurveComponentInTheoreticalPrice, fxInterestModelProviderStartDateInTheoreticalPrice, instrument:isReciprocal));
[Core Pricing]FMultiInstrumentAndTrades:carryCostInTheoreticalPriceInverse = nil;
[Core Pricing]FPriceAggregate:carryCostInTheoreticalPriceInverse = select(collapse(interestModelProviderCurveComponentInTheoreticalPrice), 
  nil->nil, 
  default->CreateInterestComponentWithSimulatedCarryCost(carryCostInTheoreticalPriceInverseVariable, interestModelProviderCurveComponentInTheoreticalPrice, interestModelProviderStartDateInTheoreticalPrice, forwardValuationDateInTheoreticalPrice, domesticOrRepoCurveRateType, domesticOrRepoCurveDayCountMethod, domesticOrRepoCurveCalendarInfo, fxInterestModelProviderCurveComponentInTheoreticalPrice, fxInterestModelProviderStartDateInTheoreticalPrice, instrument:isReciprocal));