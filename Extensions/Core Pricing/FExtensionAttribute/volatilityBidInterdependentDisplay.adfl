[Core Pricing]FInstrumentAndTrades:volatilityBidInterdependentDisplay = shunt(interdependentBidDriver, 
  "Price"->imply(volatilityInTheoreticalPrice, theoreticalPrice, interdependentBidDriverValue, instrument:impliedVolatilityAccuracy, instrument:impliedVolatilityMinValue, instrument:impliedVolatilityMaxValue, instrument:impliedVolatilityMaxIterations), 
  "Volatility"->interdependentBidDriverValue);
[Core Pricing]FMultiInstrumentAndTrades:volatilityBidInterdependentDisplay = nil;
[Core Pricing]FPriceAggregate:volatilityBidInterdependentDisplay = shunt(interdependentBidDriver, 
  "Price"->imply(volatilityInTheoreticalPrice, theoreticalPrice, interdependentBidDriverValue, instrument:impliedVolatilityAccuracy, instrument:impliedVolatilityMinValue, instrument:impliedVolatilityMaxValue, instrument:impliedVolatilityMaxIterations), 
  "Volatility"->interdependentBidDriverValue);