[Core Pricing]FInstrumentAndTrades:carryCostInTheoreticalPriceTransform = select(collapse(interestModelProviderCurveComponentInTheoreticalPrice), 
  nil->nil, 
  default->CarryCost(interestModelProviderCurveComponentInTheoreticalPrice, interestModelProviderStartDateInTheoreticalPrice, forwardValuationDateInTheoreticalPrice, domesticOrRepoCurveRateType, domesticOrRepoCurveDayCountMethod, domesticOrRepoCurveCalendarInfo, fxInterestModelProviderCurveComponentInTheoreticalPrice, fxInterestModelProviderStartDateInTheoreticalPrice, openInstrumentOrInstrument:hasInverseValueProviderInTheoreticalPrice [theoreticalPrice]));
[Core Pricing]FMultiInstrumentAndTrades:carryCostInTheoreticalPriceTransform = nil;
[Core Pricing]FPriceAggregate:carryCostInTheoreticalPriceTransform = select(collapse(interestModelProviderCurveComponentInTheoreticalPrice), 
  nil->nil, 
  default->CarryCost(interestModelProviderCurveComponentInTheoreticalPrice, interestModelProviderStartDateInTheoreticalPrice, forwardValuationDateInTheoreticalPrice, domesticOrRepoCurveRateType, domesticOrRepoCurveDayCountMethod, domesticOrRepoCurveCalendarInfo, fxInterestModelProviderCurveComponentInTheoreticalPrice, fxInterestModelProviderStartDateInTheoreticalPrice, instrument:hasInverseValueProviderInTheoreticalPrice [theoreticalPrice]));