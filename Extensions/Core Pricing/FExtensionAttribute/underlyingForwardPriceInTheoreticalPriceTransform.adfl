[Core Pricing]FInstrument:underlyingForwardPriceInTheoreticalPriceTransform = select(isReciprocal, 
  true->underlyingForwardPriceTransformedInverted, 
  false->underlyingForwardPriceTransformed);
[Core Pricing]FInstrumentAndTrades:underlyingForwardPriceInTheoreticalPriceTransform = openInstrumentOrInstrument:underlyingForwardPriceInTheoreticalPriceTransform [theoreticalPrice, usePerUnitQuotation];
[Core Pricing]FMultiInstrumentAndTrades:underlyingForwardPriceInTheoreticalPriceTransform = nil;
[Core Pricing]FPriceAggregate:underlyingForwardPriceInTheoreticalPriceTransform = instrument:underlyingForwardPriceInTheoreticalPriceTransform [theoreticalPrice, usePerUnitQuotation];