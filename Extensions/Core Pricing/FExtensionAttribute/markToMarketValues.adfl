[Core Pricing]FDeliverableLinkAndTrades:markToMarketValues = shunt[priceSource, isSplitAllGrouped, valuesOnSpotOverride, tradesInPosition, contractSize, useFallbackToTheoreticalValues, filterUnit, groupingSpotDiscountDate, plSpotGroupingReference, profitAndLossFXRateDateForForwardFxRateConversion](isOpenPosition and (0 <> timeDistributionFactor), 
  true->instrument :* "markToMarketValues" [priceSource, isSplitAllGrouped, valuesOnSpotOverride, tradesInPosition, contractSize, useFallbackToTheoreticalValues, profitAndLossParameters, filterUnit, groupingSpotDiscountDate, plSpotGroupingReference, profitAndLossFXRateDate := profitAndLossFXRateDateForForwardFxRateConversion], 
  false->spotHandlingZero);
[Core Pricing]FInstrument:markToMarketValues = select(forwardFxRateConversion, 
  true->discountAndConvertToCurrency(markToMarketValuesUndiscounted, discountAndConvertToBaseForwardFXConversionMoneyMarketCurve, discountAndConvertToBaseDate, 1.0, forwardFXConversionCurrencySymbol, filterUnit, discountAndConvertToBaseForwardFXConversionCurves, discountAndConvertToBaseForwardFXConversionFXRatesForProfitAndLoss, forwardFXConversionCurrencySymbol), 
  false->discountAndFilterCurrency(markToMarketValuesUndiscounted, discountAndConvertToBaseDiscountCurves, discountAndConvertToBaseDate, filterUnit));
[Core Pricing]FInstrumentAndTrades:markToMarketValues = sumOf(portfoliosForValuation :* "collapse(markToMarketValues)" [priceSource, isSplitAllGrouped, valuesOnSpotOverride, positionObject, useMarkToMarketPriceToday, useFallbackToTheoreticalValues, profitAndLossParameters, filterUnit, groupingSpotDiscountDate, plSpotGroupingReference, profitAndLossFXRateDate := profitAndLossFXRateDateForForwardFxRateConversion, instrument, valuesOnSpot, openPositionInstrumentProvider]);
[Core Pricing]FLegAndTrades:markToMarketValues = openInstrument :* "theoreticalLegValues" [priceSource, isSplitAllGrouped, valuesOnSpotOverride, positionObject, tradesInPosition, includeAllTrades, legs, profitAndLossParameters, filterUnit, groupingSpotDiscountDate, plSpotGroupingReference, profitAndLossFXRateDate := profitAndLossFXRateDateForForwardFxRateConversion];
[Core Pricing]FMultiInstrumentAndTrades:markToMarketValues = sumOf(flattenAndRemoveNil(portfoliosForValuation :* "collapse(markToMarketValuesOpenInstruments)" [priceSource, isSplitAllGrouped, valuesOnSpotOverride, positionObject, useMarkToMarketPriceToday, useFallbackToTheoreticalValues, profitAndLossParameters, filterUnit, groupingSpotDiscountDate, plSpotGroupingReference, profitAndLossFXRateDate := profitAndLossFXRateDateForForwardFxRateConversion, openPositions, onlySpotValuedInstruments]));
[Core Pricing]FPortfolio:markToMarketValues = openInstrument :* "markToMarketValues" [priceSource, isSplitAllGrouped, valuesOnSpotOverride, positionObject, useMarkToMarketPriceToday, useFallbackToTheoreticalValues, profitAndLossParameters, filterUnit, groupingSpotDiscountDate, plSpotGroupingReference, profitAndLossFXRateDate, accountingParameters, tradedPortfolio];
[Core Pricing]FTradeRow:markToMarketValues = openInstrumentOrTaxLotInstrument :* "markToMarketValues" [priceSource, isSplitAllGrouped, valuesOnSpotOverride, singleTradePosition, includeAllTrades, useMarkToMarketPriceToday, useFallbackToTheoreticalValues, profitAndLossParameters, filterUnit, groupingSpotDiscountDate, plSpotGroupingReference, profitAndLossFXRateDate := profitAndLossFXRateDateForForwardFxRateConversion, taxLotPositionObject, positionObject, taxLotValuation := taxLotPnL];