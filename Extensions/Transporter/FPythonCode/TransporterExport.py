"""-------------------------------------------------------------------------------------------------------
MODULE
    TransporterExport

    (c) Copyright 2009-2016 by SunGard Front Arena. All rights reserved.

VERSION
    3.3.0
DESCRIPTION
    An Export GUI for the Transporters Module

USAGE
    RunScriptCMD.py TransporterExport --basepath=dir --addfilepath=True --Python=mypythonmodule ...
    
    <?xml version="1.0" encoding="ISO-8859-1" ?> 
    <RunScriptCMD>
     <Command module="TransporterExport">
       <basepath>dir</basepath>
       <addfilepath>True</addfilepath>
       <Trade_Filter>mytradefilter</Trade_Filter>
       <Python>mypythonmodule</Python>
       <Extension_Module>mymodule</Extension_Module>
       <Task>mytask</Task>
       <Query_Folder>myquery</Query_Folder>
       <ASQL_Query>mysqlquery</ASQL_Query>
       <ASQL_Report>mysqlreport</ASQL_Report>
       <RS_Definition>myremotesheet</RS_Definition>
       <Python>mypythonmodule</Python>
       <TradingSheetTemplate>mysheet</TradingSheetTemplate>
       <Workbook>myworkbook</Workbook>
       <Workspace>myworkspace</Workspace>
     </Command>
    </RunScriptCMD>

MAJOR REVISIONS

    2008-04-21  RL  Initial implementation
-------------------------------------------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == '\x03\xf3\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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""")))
del base64, zlib, imp, marshal
exec(__pyc)
del __pyc
"""
ael_variables=[]
def ael_main(p):
    pass
"""
