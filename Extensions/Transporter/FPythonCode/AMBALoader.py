'''---------------------------------------------------------------------------------
 MODULE
     AMBALoader

     Copyright (c) 2011-2016 SunGard FRONT ARENA. All rights reserved.

 DESCRIPTION
    This tool loads simple AMBA messages
    
 USAGE
    It can be used within Prime or from RunScriptCMD:

    <?xml version="1.0" encoding="ISO-8859-1" ?> 
    <RunScriptCMD>

    <!-- Load AMBA message from a file-->
     <Command callback="False" exitOnError="False" module="AMBALoader">
       <inputfile>AMBAMessage.txt</inputfile>
     </Command>

    <!-- Load AMBA message directly in XML-->
     <Command callback="False" exitOnError="False" module="AMBALoader">
       <ambamessage>
[MESSAGE]
  [ACCOUNTINGPARAMETERS]
    NAME=TEST
    OPTION_ALLOC=PREMIUM_ALLOC_END
    IRA_ALLOC=PREMIUM_ALLOC_END
    BOND_ALLOC=PREMIUM_ALLOC_END
    ZERO_ALLOC=PREMIUM_ALLOC_END
    BILL_ALLOC=PREMIUM_ALLOC_END
    FRN_ALLOC=PREMIUM_ALLOC_END
    DEFAULT_ALLOC=PREMIUM_ALLOC_END
  [/ACCOUNTINGPARAMETERS]
[/MESSAGE]
    </ambamessage>
     </Command>

    </RunScriptCMD>


 REFERENCES

 ENDDESCRIPTION
---------------------------------------------------------------------------------'''
import base64, zlib, imp, marshal
if imp.get_magic() == '\x03\xf3\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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""")))
del base64, zlib, imp, marshal
exec(__pyc)
del __pyc
"""
ael_variables=[]
def ael_main(p):
    pass
"""
