from xml.etree import ElementTree
from os import path
from datetime import date
import uuid

def _getContractNoteElement(filename, uniqueKey, portfolio, description, fileType, reportDate):
    contractNote = ElementTree.Element('ContractNote')
    contractNote.set('Filename', filename)
    contractNote.set('UniqueKey', uniqueKey)
    contractNote.set('AcctID', portfolio)
    contractNote.set('Description', description)
    contractNote.set('FileType', fileType)
    contractNote.set('Date', reportDate)

    return contractNote

def PostProcessing(reportObj, param, xml):
    ''' the parameters passed to this function:
            reportObj   instance of FReportAPIBase.FReportBuilder
            param   string specified in Run Script GUI
            xml   xml generated by report
    '''

    #FReportAPI.FWorksheetReportGuiParameters
    reportParams = reportObj.params
    writeFile = False
    root = ElementTree.Element('GeneralStorageImportSchema')
    uniqueID = str(uuid.uuid4())

    parameters = param.split(',')
    if len(parameters) < 3:
        raise Exception('Report must contain the following in the processing parameter: portfolio, description, date')
    portfolio = parameters[0]
    description = parameters[1]
    reportDate = parameters[2]

    if reportParams.xmlToFile:
        root.append(_getContractNoteElement(reportParams.fileName + '.xml', uniqueID, portfolio, description, 'XML', reportDate))
        writeFile = True

    if reportParams.secondaryOutput:
        extension = reportParams.secondaryFileExtension.replace('.', '').upper()
        root.append(_getContractNoteElement(reportParams.fileName + reportParams.secondaryFileExtension, uniqueID, portfolio, description, extension, reportDate))
        writeFile = True

    if writeFile:
        with open(path.join(reportParams.filePath.SelectedDirectory().Text(), reportParams.fileName + '_info.xml'), 'w') as xmlFile:
            xmlFile.write(ElementTree.tostring(root))




