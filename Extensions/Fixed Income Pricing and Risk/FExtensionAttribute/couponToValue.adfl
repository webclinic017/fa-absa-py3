[Fixed Income Pricing and Risk]FBond:couponToValue = select(isSpreadOption, 
  true->fixLeg :* "forwardAssetSwapCouponFactor" [forwardValueDate], 
  default->couponFactor);
[Fixed Income Pricing and Risk]FCashFlowInstrument:couponToValue = select(fixLeg, 
  nil->1.0, 
  default->couponFactor);
[Fixed Income Pricing and Risk]FCln:couponToValue = select(isSpreadOption, 
  true->firstLeg :* "forwardAssetSwapCouponFactor" [forwardValueDate], 
  default->1.0);
[Fixed Income Pricing and Risk]FCurrencySwap:couponToValue = couponFactor;
[Fixed Income Pricing and Risk]FDeposit:couponToValue = couponFactor;
[Fixed Income Pricing and Risk]FFra:couponToValue = couponFactor;
[Fixed Income Pricing and Risk]FFrn:couponToValue = select(isSpreadOption, 
  true->floatLeg :* "forwardAssetSwapCouponFactor" [forwardValueDate], 
  default->1.0);
[Fixed Income Pricing and Risk]FFuture:couponToValue = select(underlyingType, 
  "Swap"->select(isCashSettledSwaption, 
    true->abs(object:cashSettledSwaptionUnderlyingValue [priceSource, forwardPriceDate = expiryDateForCouponToValue]), 
    false->abs(underlying :* "couponToValue" [forwardPriceDate := expiryDateForCouponToValue])), 
  default->select(underlyingIsRateIndex, 
    true->underlying.RateIndexPeriod, 
    false->1.0));
[Fixed Income Pricing and Risk]FFxSwap:couponToValue = -couponFactor * unitQuoteScaling;
[Fixed Income Pricing and Risk]FInstrument:couponToValue = 1.0;
[Fixed Income Pricing and Risk]FOption:couponToValue = select(underlyingIsRateIndex, 
  true->underlying.RateIndexPeriod, 
  false->select((underlyingQuotation == "Coupon") or isSpreadOption, 
    true->select(isCashSettledSwaption, 
      true->abs(object:cashSettledSwaptionUnderlyingValue [priceSource, forwardPriceDate = expiryDateForCouponToValue]), 
      false->underlying :* "couponToValue" [forwardPriceDate = expiryDateForCouponToValue, isSpreadOption]), 
    false->1.0));
[Fixed Income Pricing and Risk]FSwap:couponToValue = couponFactor;