"""------------------------------------------------------------------------
MODULE
    FFpMLACMMapper -
DESCRIPTION:
    This file is used to call the mapping of the Instrument and trade attributes for an incoming FpML
VERSION: 1.0.30
RESTRICTIONS/ LIMITATIONS:
    1. Any modifications to the scripts/ encrypted modules/ clear text code within the core is not supported. 
    2. This module is not customizable
    3. The component may not work as expected with any modifications done to this module at user end 
--------------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == '\x03\xf3\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec(__pyc)
del __pyc
