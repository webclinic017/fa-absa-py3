"""------------------------------------------------------------------------
MODULE
    FFpMLCrossCurrencyBasisSwap -
DESCRIPTION:
    This file is used to parse and map the Cross Currency Basis Swap details from the incoming FpML
VERSION: 1.0.30
RESTRICTIONS/ LIMITATIONS:
    1. Any modifications to the scripts/ encrypted modules/ clear text code within the core is not supported. 
    2. This module is not customizable
    3. The component may not work as expected with any modifications done to this module at user end 
--------------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == '\x03\xf3\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
f++oL3g=""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec(__pyc)
del __pyc
