"""------------------------------------------------------------------------
MODULE
    FFpMLExercise -
DESCRIPTION:
    This file is used to parse and map the exercise details from/to the incoming/outgoing FpML
VERSION: 1.0.30
RESTRICTIONS/ LIMITATIONS:
    1. Any modifications to the scripts/ encrypted modules/ clear text code within the core is not supported. 
    2. This module is not customizable
    3. The component may not work as expected with any modifications done to this module at user end 
--------------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == '\x03\xf3\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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
jMkfyffGJWkzieUlIYiXyc8eoLYPBL//C3W88OA=""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec(__pyc)
del __pyc
