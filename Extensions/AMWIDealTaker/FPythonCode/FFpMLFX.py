"""------------------------------------------------------------------------
MODULE
    FFpMLFX -
DESCRIPTION:
    This file is used to map the FX details to the FpML
VERSION: 1.0.30
RESTRICTIONS/ LIMITATIONS:
    1. Any modifications to the scripts/ encrypted modules/ clear text code within the core is not supported. 
    2. This module is not customizable
    3. The component may not work as expected with any modifications done to this module at user end 
--------------------------------------------------------------------------"""
import base64, zlib, imp, marshal
if imp.get_magic() == '\x03\xf3\r\n':
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
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""")))
else:
    __pyc = marshal.loads(zlib.decompress(base64.b64decode("""
The system cannot find the path specified.""")))
del base64, zlib, imp, marshal
exec(__pyc)
del __pyc
