"""-----------------------------------------------------------------------------
Date:                   2010-05-05
Purpose:                Pre processing of the Compass FWorksheetTask
                        Pre processing used to add columnIDs to the XML structure 
Department and Desk:    Cash Equities
Requester:              Nicole Dunlop
Developer:              Herman Hoon
CR Number:              313068
-----------------------------------------------------------------------------"""
import FPrimeXmlUtils

class ExtendedPrimeXmlBuilder(FPrimeXmlUtils.PrimeXmlBuilder):
    def __init__( self):
        FPrimeXmlUtils.PrimeXmlBuilder.__init__( self)
        
    def addColumnsToRows(self, xml):
        """Add the ColumnId to each Cell"""
        self.xml_reader = FPrimeXmlUtils.PrimeXmlReader( xml )
        columnElem = self.xml_reader.columns()
        columns = columnElem.getiterator("ColumnId")

        col = []
        for i in columns:
            col.append(i.text)
        
        rowElem = self.xml_reader.rows()
        rowIter = rowElem.getiterator("Row")
        for r in rowIter:
            k = 0
            cells = r.find("Cells")
            cellIter = cells.getiterator("Cell")    
            for c in cellIter:
                FPrimeXmlUtils.SubElement(c, "ColumnId").text = col[k]
                k = k+1
        
        return self.xml_reader.element


def pre_processing(reportObj, param, xml):
    """ the parameters passed to this function
        reportObj   instance of FWorksheetReportParaters
        param   string specified in Run Script GUI
        xml   xml generated by reporting
    """
    
    #Reset the XMLReportWriter object to stop it from creating multiple reports
    reportObj.xml_report_writer.reset()
    
    #Add the ColumnId to each Cell
    builder = ExtendedPrimeXmlBuilder()
    element = builder.addColumnsToRows(xml) 
    
    output = FPrimeXmlUtils.cStringIO.StringIO()
    FPrimeXmlUtils.ElementTree.ElementTree(element).write(output)
    value = output.getvalue()
    output.close()
    
    return value
