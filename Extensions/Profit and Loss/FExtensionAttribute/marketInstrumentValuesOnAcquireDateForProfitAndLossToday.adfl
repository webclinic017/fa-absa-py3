[Profit and Loss]FCashFlowInstrument:marketInstrumentValuesOnAcquireDateForProfitAndLossToday = select(isCredit, 
  true->select(isMultiCurrencyInstrument, 
    true->moveValuesHazard(marketSpotValuesForProfitAndLoss, valuationDate, instrumentSpotDate, positionAdjustmentDates, pLLegInformationsForMoveValue, staticLegInformations, creditDiscountCurvesForProfitAndLoss, riskFreeDiscountCurvesForProfitAndLoss, instrumentMoneyMarketCurvesForProfitAndLoss, useRepoForIntermediateCoupons, useDiscountCurveBetweenTodayAndSpot, timeApportionmentType, timeDistributionBucket, moveFixedAmounts, moveCoupons, nil, theoreticalModelCashFlowProjectedValueForProfitAndLoss, positionFlatAccruedAdjustment, roundingInformation, 0.0, observationDateForProfitAndLoss), 
    false->moveValueHazard(marketSpotValuesForProfitAndLoss, valuationDate, instrumentSpotDate, positionAdjustmentDates, pLLegInformationsForMoveValue, staticLegInformations, creditDiscountCurvesForProfitAndLoss, riskFreeDiscountCurvesForProfitAndLoss, repoCurveForProfitAndLoss, useRepoForIntermediateCoupons, useDiscountCurveBetweenTodayAndSpot, timeApportionmentType, timeDistributionBucket, moveFixedAmounts, moveCoupons, nil, theoreticalModelCashFlowProjectedValueForProfitAndLoss, positionFlatAccruedAdjustment, roundingInformation, 0.0, observationDateForProfitAndLoss)), 
  false->select(isMultiCurrencyInstrument, 
    true->moveValues(marketSpotValuesForProfitAndLoss, valuationDate, instrumentSpotDate, positionAdjustmentDates, pLLegInformationsForMoveValue, staticLegInformations, discountCurvesForProfitAndLoss, instrumentMoneyMarketCurvesForProfitAndLoss, useRepoForIntermediateCoupons, useDiscountCurveBetweenTodayAndSpot, timeApportionmentType, timeDistributionBucket, moveFixedAmounts, moveCoupons, 0, theoreticalModelCashFlowProjectedValueForProfitAndLoss, positionFlatAccruedAdjustment, roundingInformation, observationDateForProfitAndLoss), 
    false->moveValue(marketSpotValuesForProfitAndLoss, valuationDate, instrumentSpotDate, positionAdjustmentDates, pLLegInformationsForMoveValue, staticLegInformations, discountCurvesForProfitAndLoss, repoCurveForProfitAndLoss, useRepoForIntermediateCoupons, useDiscountCurveBetweenTodayAndSpot, timeApportionmentType, timeDistributionBucket, moveFixedAmounts, moveCoupons, 0, theoreticalModelCashFlowProjectedValueForProfitAndLoss, positionFlatAccruedAdjustment, roundingInformation, observationDateForProfitAndLoss)));
[Profit and Loss]FCombination:marketInstrumentValuesOnAcquireDateForProfitAndLossToday = select(needsLegInformation, 
  true->select(isCredit, 
    true->select(isMultiCurrencyInstrument, 
      true->moveValuesHazard(marketSpotValuesForProfitAndLoss, valuationDate, instrumentSpotDate, positionAdjustmentDates, pLCombinationLegInformationsForMoveValue, combinationStaticLegInformationsForMoveValue, combinationCreditCurvesForProfitLossMoveValue, combinationDiscountOrRiskFreeCurvesForProfitAndLossMoveValue, moneyMarketCurvesPerLegCurrencyForProfitAndLoss, useRepoForIntermediateCoupons, useDiscountCurveBetweenTodayAndSpot, timeApportionmentType, timeDistributionBucket, true, true, nil, nil, false, roundingInformation, contractSize, observationDateForProfitAndLoss), 
      false->moveValueHazard(marketSpotValuesForProfitAndLoss, valuationDate, instrumentSpotDate, positionAdjustmentDates, pLCombinationLegInformationsForMoveValue, combinationStaticLegInformationsForMoveValue, combinationCreditCurvesForProfitLossMoveValue, combinationDiscountOrRiskFreeCurvesForProfitAndLossMoveValue, repoCurveForProfitAndLoss, useRepoForIntermediateCoupons, useDiscountCurveBetweenTodayAndSpot, timeApportionmentType, timeDistributionBucket, true, true, nil, nil, false, roundingInformation, contractSize, observationDateForProfitAndLoss)), 
    false->select(isMultiCurrencyInstrument, 
      true->moveValues(marketSpotValuesForProfitAndLoss, valuationDate, instrumentSpotDate, positionAdjustmentDates, pLCombinationLegInformationsForMoveValue, combinationStaticLegInformationsForMoveValue, combinationDiscountCurvesForProfitAndLossMoveValue, moneyMarketCurvesPerLegCurrencyForProfitAndLoss, useRepoForIntermediateCoupons, useDiscountCurveBetweenTodayAndSpot, timeApportionmentType, timeDistributionBucket, moveFixedAmounts, moveCoupons, contractSize, nil, false, roundingInformation, observationDateForProfitAndLoss), 
      false->moveValue(marketSpotValuesForProfitAndLoss, valuationDate, instrumentSpotDate, positionAdjustmentDates, pLCombinationLegInformationsForMoveValue, combinationStaticLegInformationsForMoveValue, combinationDiscountCurvesForProfitAndLossMoveValue, repoCurveForProfitAndLoss, useRepoForIntermediateCoupons, useDiscountCurveBetweenTodayAndSpot, timeApportionmentType, timeDistributionBucket, moveFixedAmounts, moveCoupons, contractSize, nil, false, roundingInformation, observationDateForProfitAndLoss))), 
  false->select(isMultiCurrencyInstrument, 
    true->moveValues(marketSpotValuesForProfitAndLoss, valuationOrSpotDate, instrumentSpotDate, positionAdjustmentDates, moneyMarketCurvesPerInstrumentCurrencyForProfitAndLoss, roundingInformation, observationDateForProfitAndLoss), 
    false->moveValue(marketSpotValuesForProfitAndLoss, valuationOrSpotDate, instrumentSpotDate, positionAdjustmentDates, repoCurveForProfitAndLoss, roundingInformation, observationDateForProfitAndLoss)));
[Profit and Loss]FInstrument:marketInstrumentValuesOnAcquireDateForProfitAndLossToday = moveValue(marketSpotValuesForProfitAndLoss, valuationOrSpotDate, instrumentSpotDate, positionAdjustmentDates, repoCurveForProfitAndLoss);