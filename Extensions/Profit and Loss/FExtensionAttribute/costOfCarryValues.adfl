[Profit and Loss]FInstrument:costOfCarryValues = select(mappedFundingParameter <> nil, 
  true->costOfCarryFundingValues * T(costOfCarryFundingRates), 
  false->0);
[Profit and Loss]FInstrumentAndTrades:costOfCarryValues = instrument :* "costOfCarryValues" [positionObject, priceSource, isSplitAllGrouped, profitAndLossParameters, plSpotGroupingReference];
[Profit and Loss]FMultiInstrumentAndTrades:costOfCarryValues = sumOf(instruments :* "costOfCarryValues" [positionObject, priceSource, isSplitAllGrouped, profitAndLossParameters, plSpotGroupingReference]);