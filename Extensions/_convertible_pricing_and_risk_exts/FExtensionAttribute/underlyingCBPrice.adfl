[_convertible_pricing_and_risk_exts]FInstrument:underlyingCBPrice = snoop01(theoreticalPrice, "spotPriceAsUnderlying");
[_convertible_pricing_and_risk_exts]FInstrumentAndTrades:underlyingCBPrice = select((nil == snoop01(theoreticalPrice, "spotPriceAsUnderlying")) or instrument:baseValuationOnUnderlyingComponents, 
  true->select(nil == underlying, 
    true->underlyingPriceGivenNoUnderlying, 
    false->select(underlying:valuationModelHandlesCallable, 
      true->nil, 
      false->snoop01(instrument :* "underlyingSpotPriceAsUnderlying" [priceSource, isSplitAllGrouped], "spotPriceAsUnderlying"))), 
  false->snoop01(theoreticalPrice, "spotPriceAsUnderlying"));
[_convertible_pricing_and_risk_exts]FMultiInstrumentAndTrades:underlyingCBPrice = nil;
[_convertible_pricing_and_risk_exts]FOrderBook:underlyingCBPrice = snoop01(theoreticalPrice, "spotPriceAsUnderlying");
[_convertible_pricing_and_risk_exts]FPriceAggregate:underlyingCBPrice = priceFeed:underlyingCBPrice [priceSource];
[_convertible_pricing_and_risk_exts]FPriceFeed:underlyingCBPrice = snoop01(theoreticalPrice, "spotPriceAsUnderlying");