[Default]FCashFlowInstrument:impliedStrike = select(exerciseEventsExist, 
  true->shunt[priceSource]((nil <> storedStrike) and not isExpiredFullDay, 
    true->imply(snoop(theoreticalPriceForImpliedStrike, "storedStrike"), theoreticalPriceForImpliedStrike, marketPriceOrGoalValue, implyPrecision, lowerBoundForImpliedStrike, upperBoundForImpliedStrike, implyMaxIterations), 
    default->nil), 
  default->select(numberOfCapFloorLegs, 
    1->(floatLeg) :* "impliedStrike" [priceSource], 
    default->nil));
[Default]FInstrument:impliedStrike = nil;
[Default]FInstrumentAndTrades:impliedStrike = instrument :* "impliedStrike" [priceSource];
[Default]FLeg:impliedStrike = shunt[priceSource](object.IsCapFloorLeg and implyValid, 
  false->nil, 
  true->imply(uniqueStrikeInTheoreticalPrice, instrument:theoreticalPrice, marketPrice, implyPrecision, lowerBoundForImpliedStrike, upperBoundForImpliedStrike, implyMaxIterations));
[Default]FLegAndTrades:impliedStrike = leg :* "impliedStrike" [priceSource];
[Default]FMultiInstrumentAndTrades:impliedStrike = nil;
[Default]FOption:impliedStrike = shunt[priceSource]((nil <> storedStrike) and implyValid, 
  false->nil, 
  true->imply(storedStrike, theoreticalPriceForImpliedStrike, marketPrice, implyPrecision, lowerBoundForImpliedStrike, upperBoundForImpliedStrike, implyMaxIterations, useMlZbrak), 
  default->nil);