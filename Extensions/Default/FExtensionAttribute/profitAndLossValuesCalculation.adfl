[Default]FCreditBalance:profitAndLossValuesCalculation = profitAndLossValues(profitAndLossTrades, instrument, profitAndLossParametersOverride, valuationDate, useSelectedFundingDay, pLDividendComparisonMethod, calculateCash, pLLegInformationsExcludeCustomValued, staticLegInformationsExcludeCustomValued, customHistoricalCashFlowsForProfitAndLoss, plClearDate, legId, tradeStatusInclusionMaskDefault, profitAndLossTodayIsHistorical, plSpotGroupingReference, inclusionMethodIfPnLReportDateIsAccountingDate, roundingInformation, roundingInformationsPerLeg, inclusionCalendarOverride, plClearTrades, plClearFxTranslation, plClearRepoCurve, plClearMoneyMarketCurve, tradeInclusionDateTime, plPositionGroupingType, disableTradeMatching, positionSpecification, createClosingLotInfos, disregardRedemptionAdjustment, false);
[Default]FInstrument:profitAndLossValuesCalculation = profitAndLossValues(tradesInPosition, instrument, profitAndLossParametersOverride, valuationDate, useSelectedFundingDay, pLDividendComparisonMethod, calculateCash, pLLegInformationsExcludeCustomValued, staticLegInformationsExcludeCustomValued, customHistoricalCashFlowsForProfitAndLoss, plClearDate, legId, tradeStatusInclusionMaskDefault, profitAndLossTodayIsHistorical, plSpotGroupingReference, inclusionMethodIfPnLReportDateIsAccountingDate, roundingInformation, roundingInformationsPerLeg, inclusionCalendarOverride, plClearTrades, plClearFxTranslation, plClearRepoCurve, plClearMoneyMarketCurve, tradeInclusionDateTime, plPositionGroupingType, disableTradeMatching, positionSpecification, createClosingLotInfos, disregardRedemptionAdjustment, realizeFxAtValueDay);