[Default]FCashFlowInstrument:priceGammaPercentValues = select(priceGreekOnSpot and (not valuesOnSpot), 
  true->discountAndFilterCurrency(priceGammaPercentCashFlowValues, instrumentMoneyMarketCurvesNoDiscountingType, instrumentSpotDate, filterUnit), 
  false->priceGammaPercentCashFlowValues);
[Default]FCombInstrMapAndTrades:priceGammaPercentValues = shunt(isOpenPosition, 
  true->riskPosition * instrument :* "priceGammaPercentValuesInstrument" [isSplitAllGrouped, priceSource, priceGreekIncludeVolatilityMovement, priceGreekShiftSizeOverride, priceGreekDifferenceForm, priceGreekShiftFilter, priceGreekOnSpot, useGreekBetaFactors, groupingSpotDiscountDate], 
  false->instrumentSpotZero);
[Default]FInstrument:priceGammaPercentValues = select(priceGreekOnSpot or valuesOnSpot, 
  true->priceGammaPercentSpotValues, 
  false->discountAndFilterCurrency(priceGammaPercentSpotValues, instrumentMoneyMarketCurvesNoDiscountingType, discountAndConvertToBaseDate, filterUnit));
[Default]FInstrumentAndTrades:priceGammaPercentValues = openInstrument :* "collapse(priceGammaPercentValues)" [isSplitAllGrouped, priceSource, positionObject, priceGreekIncludeVolatilityMovement, priceGreekShiftSizeOverride, priceGreekDifferenceForm, priceGreekShiftFilter, priceGreekOnSpot, useGreekBetaFactors, filterUnit, groupingSpotDiscountDate];
[Default]FMultiInstrumentAndTrades:priceGammaPercentValues = sumOf(openInstruments :* "collapse(priceGammaPercentValues)" [isSplitAllGrouped, priceSource, positionObject, priceGreekIncludeVolatilityMovement, priceGreekShiftSizeOverride, priceGreekDifferenceForm, priceGreekShiftFilter, priceGreekOnSpot, useGreekBetaFactors, filterUnit, groupingSpotDiscountDate]);
[Default]FSingleInstrumentAndTrades:priceGammaPercentValues = openInstrument :* "collapse(priceGammaPercentValues)" [isSplitAllGrouped, priceSource, positionObject, priceGreekIncludeVolatilityMovement, priceGreekShiftSizeOverride, priceGreekDifferenceForm, priceGreekShiftFilter, priceGreekOnSpot, useGreekBetaFactors, filterUnit, groupingSpotDiscountDate];
[Default]FTradeRow:priceGammaPercentValues = openInstrument :* "priceGammaPercentValues" [isSplitAllGrouped, priceSource, singleTradePosition, includeAllTrades, priceGreekIncludeVolatilityMovement, priceGreekShiftSizeOverride, priceGreekDifferenceForm, priceGreekShiftFilter, priceGreekOnSpot, useGreekBetaFactors, filterUnit, groupingSpotDiscountDate];