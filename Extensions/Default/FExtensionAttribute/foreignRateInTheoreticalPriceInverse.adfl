[Default]FInstrumentAndTrades:foreignRateInTheoreticalPriceInverse = select(interestModelProviderCurveComponentInTheoreticalPrice, 
  nil->nil, 
  default->select(openInstrumentOrInstrument:hasInverseValueProviderInTheoreticalPrice [theoreticalPrice], 
    true->CreateInterestComponentWithSimulatedDomesticRate(foreignRateInTheoreticalPriceInverseVariable, interestModelProviderCurveComponentInTheoreticalPrice, interestModelProviderStartDateInTheoreticalPrice, forwardValuationDateInTheoreticalPrice, domesticCurveRateType, domesticCurveDayCountMethod, domesticCurveCalendarInfo, fxInterestModelProviderCurveComponentInTheoreticalPrice, fxInterestModelProviderStartDateInTheoreticalPrice), 
    false->CreateInterestComponentWithSimulatedForeignRate(foreignRateInTheoreticalPriceInverseVariable, interestModelProviderCurveComponentInTheoreticalPrice, interestModelProviderStartDateInTheoreticalPrice, forwardValuationDateInTheoreticalPrice, foreignCurveRateType, foreignCurveDayCountMethod, foreignCurveCalendarInfo)));
[Default]FMultiInstrumentAndTrades:foreignRateInTheoreticalPriceInverse = nil;
[Default]FPriceAggregate:foreignRateInTheoreticalPriceInverse = nil;