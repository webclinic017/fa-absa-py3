[Default]FInstrumentAndTrades:carryCostInTheoreticalPriceInverse = select(collapse(interestModelProviderCurveComponentInTheoreticalPrice), 
  nil->nil, 
  default->CreateInterestComponentWithSimulatedCarryCost(carryCostInTheoreticalPriceInverseVariable, interestModelProviderCurveComponentInTheoreticalPrice, interestModelProviderStartDateInTheoreticalPrice, forwardValuationDateInTheoreticalPrice, domesticOrRepoCurveRateType, domesticOrRepoCurveDayCountMethod, domesticOrRepoCurveCalendarInfo, fxInterestModelProviderCurveComponentInTheoreticalPrice, fxInterestModelProviderStartDateInTheoreticalPrice, instrument:isReciprocal));
[Default]FMultiInstrumentAndTrades:carryCostInTheoreticalPriceInverse = nil;
[Default]FPriceAggregate:carryCostInTheoreticalPriceInverse = select(collapse(interestModelProviderCurveComponentInTheoreticalPrice), 
  nil->nil, 
  default->CreateInterestComponentWithSimulatedCarryCost(carryCostInTheoreticalPriceInverseVariable, interestModelProviderCurveComponentInTheoreticalPrice, interestModelProviderStartDateInTheoreticalPrice, forwardValuationDateInTheoreticalPrice, domesticOrRepoCurveRateType, domesticOrRepoCurveDayCountMethod, domesticOrRepoCurveCalendarInfo, fxInterestModelProviderCurveComponentInTheoreticalPrice, fxInterestModelProviderStartDateInTheoreticalPrice, instrument:isReciprocal));