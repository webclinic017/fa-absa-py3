[Default]FCombInstrMapAndTrades:jumpToDefaultMtMValues = combinationInstrumentMapFactor * openInstrument :* "collapse(jumpToDefaultMtMValues)" [isSplitAllGrouped, priceSource, positionTradeQuantities, creditIssuerGroupingReference, filterUnit, groupingSpotDiscountDate, priceGreekShiftFilter = priceGreekShiftEquityFilter];
[Default]FInstrument:jumpToDefaultMtMValues = select(forwardFxRateConversion, 
  true->discountAndConvertToCurrency(jumpToDefaultMtMValuesUndiscounted, discountAndConvertToBaseForwardFXConversionMoneyMarketCurve, discountAndConvertToBaseDate, 1.0, forwardFXConversionCurrencySymbol, filterUnit, discountAndConvertToBaseForwardFXConversionCurves, discountAndConvertToBaseForwardFXConversionFXRates, forwardFXConversionCurrencySymbol), 
  false->discountAndFilterCurrency(jumpToDefaultMtMValuesUndiscounted, discountAndConvertToBaseDiscountCurves, discountAndConvertToBaseDate, filterUnit));
[Default]FInstrumentAndTrades:jumpToDefaultMtMValues = openInstrument :* "collapse(jumpToDefaultMtMValues)" [isSplitAllGrouped, priceSource, positionObject, creditIssuerGroupingReference, filterUnit, groupingSpotDiscountDate, priceGreekShiftFilter = priceGreekShiftEquityFilter];
[Default]FMultiInstrumentAndTrades:jumpToDefaultMtMValues = sumOf(openInstruments :* "collapse(jumpToDefaultMtMValues)" [isSplitAllGrouped, priceSource, positionObject, creditIssuerGroupingReference, filterUnit, groupingSpotDiscountDate, priceGreekShiftFilter = priceGreekShiftEquityFilter]);