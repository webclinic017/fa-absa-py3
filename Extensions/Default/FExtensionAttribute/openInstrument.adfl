[Default]FInstrumentAndTrades:openInstrument = openPositionInstrument(tradesInPosition, instrument, valuationBaseDateNoFuture, valuesOnSpot, tradeStatusInclusionMaskDefault, tradeCategoryInclusionMaskDefault, pLDividendComparisonMethod);
[Default]FPortfolio:openInstrument = openPositionInstrumentProvider.OpenPositionInstrument(tradesInPosition, valuationBaseDateNoFuture, valuesOnSpot, tradeInclusionDateTime, tradeStatusInclusionMaskDefault, tradeCategoryInclusionMaskDefault, pLDividendComparisonMethod, "", nil, false);
[Default]FSingleInstrumentAndTrades:openInstrument = object.OpenPositionInstrument(tradesInPosition, valuationBaseDateNoFuture, valuesOnSpot, tradeInclusionDateTime, tradeStatusInclusionMaskDefault, tradeCategoryInclusionMaskDefault, pLDividendComparisonMethod);
[Default]FTrade:openInstrument = openTradeInstrument(object, instrument, valuationBaseDateNoFuture, tradeInclusionDateTime);
[Default]FTradeRow:openInstrument = openTradeInstrument(trade, instrument, valuationBaseDateNoFuture, tradeInclusionDateTime);