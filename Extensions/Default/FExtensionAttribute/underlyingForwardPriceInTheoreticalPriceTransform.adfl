[Default]FInstrument:underlyingForwardPriceInTheoreticalPriceTransform = select(isReciprocal, 
  true->underlyingForwardPriceTransformedInverted, 
  false->underlyingForwardPriceTransformed);
[Default]FInstrumentAndTrades:underlyingForwardPriceInTheoreticalPriceTransform = openInstrumentOrInstrument:underlyingForwardPriceInTheoreticalPriceTransform [theoreticalPrice, usePerUnitQuotation];
[Default]FMultiInstrumentAndTrades:underlyingForwardPriceInTheoreticalPriceTransform = nil;
[Default]FPriceAggregate:underlyingForwardPriceInTheoreticalPriceTransform = instrument:underlyingForwardPriceInTheoreticalPriceTransform [theoreticalPrice, usePerUnitQuotation];