[Default]FCashFlowInstrument:moveValueOld = select(hasCustomMoveFunction, 
  true->customMoveValue, 
  false->select(isCredit, 
    true->select(isMultiCurrencyInstrument, 
      true->moveValuesHazard(moveStartValue, valuationDate, instrumentSpotDate, moveToDate, legInformations, staticLegInformations, creditDiscountCurves, riskFreeDiscountCurves, instrumentMoneyMarketCurves, useRepoForIntermediateCoupons, useDiscountCurveBetweenTodayAndSpot, timeApportionmentType, timeDistributionBucketForMoveValue, true, true, nil, theoreticalModelCashFlowProjectedValue, doFlatAccruedAdjustment, roundingInformation), 
      false->moveValueHazard(moveStartValue, valuationDate, instrumentSpotDate, moveToDate, legInformations, staticLegInformations, creditDiscountCurves, riskFreeDiscountCurves, repoCurve, useRepoForIntermediateCoupons, useDiscountCurveBetweenTodayAndSpot, timeApportionmentType, timeDistributionBucketForMoveValue, true, true, nil, theoreticalModelCashFlowProjectedValue, doFlatAccruedAdjustment, roundingInformation)), 
    false->select(isMultiCurrencyInstrument, 
      true->moveValues(moveStartValue, valuationDate, instrumentSpotDate, moveToDate, legInformations, staticLegInformations, discountCurves, instrumentMoneyMarketCurves, useRepoForIntermediateCoupons, useDiscountCurveBetweenTodayAndSpot, timeApportionmentType, timeDistributionBucketForMoveValue, moveFixedAmounts, moveCoupons, 0.0, theoreticalModelCashFlowProjectedValue, doFlatAccruedAdjustment, roundingInformation), 
      false->moveValue(moveStartValue, valuationDate, instrumentSpotDate, moveToDate, legInformations, staticLegInformations, discountCurves, repoCurve, useRepoForIntermediateCoupons, useDiscountCurveBetweenTodayAndSpot, timeApportionmentType, timeDistributionBucketForMoveValue, moveFixedAmounts, moveCoupons, 0.0, theoreticalModelCashFlowProjectedValue, doFlatAccruedAdjustment, roundingInformation))));
[Default]FCombination:moveValueOld = select(needsLegInformation, 
  true->select(isCredit, 
    true->moveValuesHazard(moveStartValue, valuationDate, instrumentSpotDate, moveToDate, combinationLegInformationsForMoveValue, combinationStaticLegInformationsForMoveValue, combinationCreditCurvesForMoveValue, combinationDiscountOrRiskFreeCurvesForMoveValue, moneyMarketCurvesPerLegCurrency, useRepoForIntermediateCoupons, useDiscountCurveBetweenTodayAndSpot, timeApportionmentType, timeDistributionBucketForMoveValue, true, true, nil, theoreticalModelCashFlowProjectedValue, false, roundingInformation), 
    false->moveValues(moveStartValue, valuationDate, instrumentSpotDate, moveToDate, combinationLegInformationsForMoveValue, combinationStaticLegInformationsForMoveValue, combinationDiscountCurvesForMoveValue, moneyMarketCurvesPerLegCurrency, useRepoForIntermediateCoupons, useDiscountCurveBetweenTodayAndSpot, timeApportionmentType, timeDistributionBucket, moveFixedAmounts, moveCoupons, contractSize, nil, false, roundingInformation)), 
  false->select(isMultiCurrencyInstrument, 
    true->moveValues(moveStartValue, valuationOrSpotDate, instrumentSpotDate, moveToDate, repoCurvesPerCurrency), 
    false->moveValue(moveStartValue, valuationOrSpotDate, instrumentSpotDate, moveToDate, repoCurve)));