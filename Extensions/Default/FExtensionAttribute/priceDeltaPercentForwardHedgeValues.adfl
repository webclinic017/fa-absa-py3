[Default]FCombInstrMapAndTrades:priceDeltaPercentForwardHedgeValues = shunt(isOpenPosition, 
  true->combinationInstrumentMapFactorForPriceGreeks * instrument :* "priceDeltaPercentForwardHedgeValues" [isSplitAllGrouped, priceSource, positionTradeQuantities, priceGreekIncludeVolatilityMovement, priceGreekShiftSizeOverride, priceGreekDifferenceForm, priceGreekShiftFilter, priceGreekOnSpot, groupingSpotDiscountDate], 
  false->spotHandlingZero);
[Default]FDerivative:priceDeltaPercentForwardHedgeValues = select(underlying:isFxRate, 
  true->priceDeltaPercentValues * (currencyPairForeignCurrency:fxDiscountCurve).Discount(carryEndDate, carryStartDate), 
  false->priceDeltaPercentValues);
[Default]FInstrument:priceDeltaPercentForwardHedgeValues = select(isSettled, 
  true->spotHandlingZero, 
  false->denominatedValueOrBasket(priceDeltaPercentValuesInstrument * priceDeltaForwardHedgeRiskPosition));
[Default]FInstrumentAndTrades:priceDeltaPercentForwardHedgeValues = openInstrument :* "collapse(priceDeltaPercentForwardHedgeValues)" [isSplitAllGrouped, priceSource, positionObject, priceGreekIncludeVolatilityMovement, priceGreekShiftSizeOverride, priceGreekDifferenceForm, priceGreekShiftFilter, priceGreekOnSpot, groupingSpotDiscountDate];
[Default]FMultiInstrumentAndTrades:priceDeltaPercentForwardHedgeValues = sumOf(openInstruments :* "collapse(priceDeltaPercentForwardHedgeValues)" [isSplitAllGrouped, priceSource, positionObject, priceGreekIncludeVolatilityMovement, priceGreekShiftSizeOverride, priceGreekDifferenceForm, priceGreekShiftFilter, priceGreekOnSpot, groupingSpotDiscountDate]);
[Default]FTradeRow:priceDeltaPercentForwardHedgeValues = openInstrument :* "priceDeltaPercentForwardHedgeValues" [isSplitAllGrouped, priceSource, singleTradePosition, priceGreekIncludeVolatilityMovement, priceGreekShiftSizeOverride, priceGreekDifferenceForm, priceGreekShiftFilter, priceGreekOnSpot, includeAllTrades, groupingSpotDiscountDate];