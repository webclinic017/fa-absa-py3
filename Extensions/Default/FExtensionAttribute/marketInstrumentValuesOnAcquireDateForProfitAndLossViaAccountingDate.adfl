[Default]FCashFlowInstrument:marketInstrumentValuesOnAcquireDateForProfitAndLossViaAccountingDate = select(isMultiCurrencyInstrument, 
  true->moveValuesViaDate(marketInstrumentValuesOnAcquireDateForProfitAndLossToday, valuationDate, instrumentSpotDate, positionAdjustmentDates, accountingInclusionDate, pLLegInformationsForMoveValue, staticLegInformations, nil, nil, false, false, timeApportionmentType, timeDistributionBucket, moveFixedAmounts, moveCoupons, 0, nil, positionFlatAccruedAdjustment, roundingInformation, observationDateForProfitAndLoss), 
  false->moveValueViaDate(marketInstrumentValuesOnAcquireDateForProfitAndLossToday, valuationDate, instrumentSpotDate, positionAdjustmentDates, accountingInclusionDate, pLLegInformationsForMoveValue, staticLegInformations, nil, nil, false, false, timeApportionmentType, timeDistributionBucket, moveFixedAmounts, moveCoupons, 0, nil, positionFlatAccruedAdjustment, roundingInformation, observationDateForProfitAndLoss));
[Default]FCombination:marketInstrumentValuesOnAcquireDateForProfitAndLossViaAccountingDate = select(isMultiCurrencyInstrument, 
  true->moveValuesViaDate(marketInstrumentValuesOnAcquireDateForProfitAndLossToday, valuationDate, instrumentSpotDate, positionAdjustmentDates, accountingInclusionDate, pLCombinationLegInformationsForMoveValue, combinationStaticLegInformationsForMoveValue, nil, nil, false, false, timeApportionmentType, timeDistributionBucket, moveFixedAmounts, moveCoupons, contractSize, nil, false, roundingInformation, observationDateForProfitAndLoss), 
  false->moveValueViaDate(marketInstrumentValuesOnAcquireDateForProfitAndLossToday, valuationDate, instrumentSpotDate, positionAdjustmentDates, accountingInclusionDate, pLCombinationLegInformationsForMoveValue, combinationStaticLegInformationsForMoveValue, nil, nil, false, false, timeApportionmentType, timeDistributionBucket, moveFixedAmounts, moveCoupons, contractSize, nil, false, roundingInformation, observationDateForProfitAndLoss));