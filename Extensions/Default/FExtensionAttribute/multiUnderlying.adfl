[Default]FCertificate:multiUnderlying = underlying:multiUnderlying;
[Default]FCombination:multiUnderlying = object.Instruments;
[Default]FDerivative:multiUnderlying = underlying:multiUnderlying;
[Default]FInstrument:multiUnderlying = [];
[Default]FOption:multiUnderlying = select(isOutsideBarrier, 
  false->underlying:multiUnderlying, 
  true->[underlying, barrierOutsideUnderlying]);