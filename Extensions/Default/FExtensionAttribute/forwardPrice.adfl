[Default]FExerciseEvent:forwardPrice = instrument :* "forwardPrice" [forwardPriceDate = expiryDateTime];
[Default]FInstrument:forwardPrice = select(isGenericCouponOrSpreadQuoted, 
  true->object:quoteConversionWrapperUnitValueToQuote [quoteConversionWrapperFromUnitValue = unitGoalValueForParOnParRateDate, priceSource, quoteConversionWrapperToQuotation = quotation, doSplitAll], 
  false->select(isPerUnitQuoted, 
    true->object.UnitValueToUnitQuote(forwardValue, forwardPriceDateCalculated, nominalFactor), 
    false->object:quoteConversionWrapperUnitValueToQuote [quoteConversionWrapperFromUnitValue = forwardValue, priceSource, quoteConversionWrapperToQuotation = quotation, doSplitAll]));
[Default]FInstrumentAndTrades:forwardPrice = instrument :* "forwardPrice" [priceSource, forwardPriceDate = forwardPriceDateCalculated];