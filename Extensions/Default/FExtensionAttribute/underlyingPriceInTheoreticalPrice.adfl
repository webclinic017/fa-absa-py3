[Default]FInstrument:underlyingPriceInTheoreticalPrice = select(snoop01(theoreticalPrice, marketPriceRiskFactorNames, ^underlyingForUnderlyingPriceInTheoreticalPrice), 
  nil->nil, 
  default->snoop01(theoreticalPrice, marketPriceRiskFactorNames, ^underlyingForUnderlyingPriceInTheoreticalPrice));
[Default]FInstrumentAndTrades:underlyingPriceInTheoreticalPrice = snoop01(theoreticalPrice, marketPriceRiskFactorNames, ^underlyingForUnderlyingPriceInTheoreticalPrice);
[Default]FMultiInstrumentAndTrades:underlyingPriceInTheoreticalPrice = select(snoop01(theoreticalValue, marketPriceRiskFactorNames, ^underlyingForUnderlyingPriceInTheoreticalPrice), 
  nil->nil, 
  default->snoop01(theoreticalValue, marketPriceRiskFactorNames, ^underlyingForUnderlyingPriceInTheoreticalPrice));
[Default]FOrderBook:underlyingPriceInTheoreticalPrice = select(snoop01(theoreticalPrice, marketPriceRiskFactorNames, ^underlyingForUnderlyingPriceInTheoreticalPrice), 
  nil->nil, 
  default->snoop01(theoreticalPrice, marketPriceRiskFactorNames, ^underlyingForUnderlyingPriceInTheoreticalPrice));
[Default]FPortfolioInstrumentAndTrades:underlyingPriceInTheoreticalPrice = nil;
[Default]FPriceAggregate:underlyingPriceInTheoreticalPrice = select(snoop01(theoreticalPrice, marketPriceRiskFactorNames, ^underlyingForUnderlyingPriceInTheoreticalPrice), 
  nil->nil, 
  default->snoop01(theoreticalPrice, marketPriceRiskFactorNames, ^underlyingForUnderlyingPriceInTheoreticalPrice));