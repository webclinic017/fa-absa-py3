[Default]FInstrumentAndTrades:volatilityAskInterdependentDisplay = shunt(interdependentAskDriver, 
  "Price"->imply(volatilityInTheoreticalPrice, theoreticalPrice, interdependentAskDriverValue, instrument:impliedVolatilityAccuracy, instrument:impliedVolatilityMinValue, instrument:impliedVolatilityMaxValue, instrument:impliedVolatilityMaxIterations), 
  "Volatility"->interdependentAskDriverValue);
[Default]FMultiInstrumentAndTrades:volatilityAskInterdependentDisplay = nil;
[Default]FPriceAggregate:volatilityAskInterdependentDisplay = shunt(interdependentAskDriver, 
  "Price"->imply(volatilityInTheoreticalPrice, theoreticalPrice, interdependentAskDriverValue, instrument:impliedVolatilityAccuracy, instrument:impliedVolatilityMinValue, instrument:impliedVolatilityMaxValue, instrument:impliedVolatilityMaxIterations), 
  "Volatility"->interdependentAskDriverValue);