[Equity Pricing and Risk]FInstrument:multiUnderlyingComponentPerformanceVolatility = select(volatilityInformationHasGenericValueFunction, 
  true->volatilityInformation:volatilityValue [volatilityValueVolatilityInformation = volatilityInformation, volatilityValueExpiryDate = optionParent:expiryDate, volatilityValueUnderlyingMaturity = 0, volatilityValueStrikePrice = multiUnderlyingPerformanceVolatilityStrikePrice.At(object), volatilityValueCallPutType = optionParent:callPutTypeForVolatility, volatilityValueInputToSurfaceStrikeConverters = surfaceDependentMultiVolatilityStrikeConverter, priceSource, doSplitAll], 
  false->volatilityInformation.Value(0, optionParent:expiryDate, multiUnderlyingPerformanceVolatilityStrikePrice.At(object), optionParent:isCall, false, true, multiUnderlyingComponentForwardPriceForVolatility, skewExpiriesMultiComponentForwardPriceForVolatility, foreignRateForVolatility, domesticRateForVolatility));