[Equity Pricing and Risk]FInstrument:multiUnderlyingComponentSpotToExpiryVolatilityUnadjusted = select(volatilityInformationHasGenericValueFunction, 
  true->volatilityInformation:volatilityValue [volatilityValueVolatilityInformation = volatilityInformation, volatilityValueExpiryDate = optionParent:expiryDate, volatilityValueUnderlyingMaturity = 0, volatilityValueStrikePrice = multiUnderlyingComponentSpotToForwardStartVolatilityStrikePrice, volatilityValueCallPutType = optionParent:callPutTypeForVolatility, volatilityValueInputToSurfaceStrikeConverters = surfaceDependentMultiVolatilityStrikeConverter, priceSource, doSplitAll], 
  false->volatilityInformation.Value(0, optionParent:expiryDate, multiUnderlyingComponentSpotToForwardStartVolatilityStrikePrice, optionParent:isCall, false, true, multiUnderlyingComponentForwardPriceForVolatility, skewExpiriesMultiComponentForwardPriceForVolatility, foreignRateForVolatility, domesticRateForVolatility));