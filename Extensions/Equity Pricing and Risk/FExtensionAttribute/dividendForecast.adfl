#grouping: risk factors/dividend forecast

[Equity Pricing and Risk]FBuySellBack:dividendForecast[doSplitAll, includeFutureDividends, includeHistoricalDividends] = underlying:dividendForecast [doSplitAll, includeFutureDividends, includeHistoricalDividends];
[Equity Pricing and Risk]FCashFlowDerivativeInstrument:dividendForecast[doSplitAll, includeFutureDividends, includeHistoricalDividends] = underlyingOrSelf:dividendForecast [doSplitAll, includeFutureDividends, includeHistoricalDividends];
[Equity Pricing and Risk]FCfd:dividendForecast[doSplitAll, includeFutureDividends, includeHistoricalDividends] = ref(dividendForecastNoRef, priceRiskReference(object, value(actualDividendStream)));
[Equity Pricing and Risk]FCombInstrMap:dividendForecast[doSplitAll, includeFutureDividends, includeHistoricalDividends] = instrument:dividendForecast [doSplitAll, includeFutureDividends, includeHistoricalDividends];
[Equity Pricing and Risk]FCombination:dividendForecast[doSplitAll, includeFutureDividends, includeHistoricalDividends] = ref(shunt[doSplitAll, includeFutureDividends, includeHistoricalDividends](object.DividendsRetreivedFromCombination(doSplitAll, instrumentHasDividends, splitCombination), 
  true->dividendForecastNoRef, 
  default->dividendForecast(object, actualDividendStream, nil, instrumentMapsDividendForecasts, valuationBaseDateNoFuture, historicalDividendsFromIndex, futureDividendsFromIndex)), priceRiskReference(object, value(actualDividendStream)));
[Equity Pricing and Risk]FConvertible:dividendForecast[doSplitAll, includeFutureDividends, includeHistoricalDividends] = underlying:dividendForecast [doSplitAll, includeFutureDividends, includeHistoricalDividends];
[Equity Pricing and Risk]FCreditIndex:dividendForecast = nil;
[Equity Pricing and Risk]FDepositaryReceipt:dividendForecast[doSplitAll, includeFutureDividends, includeHistoricalDividends] = ref(dividendForecastNoRef, priceRiskReference(object, value(actualDividendStream)));
[Equity Pricing and Risk]FDerivative:dividendForecast[doSplitAll, includeFutureDividends, includeHistoricalDividends] = underlying:dividendForecast [doSplitAll, includeFutureDividends, includeHistoricalDividends];
[Equity Pricing and Risk]FETF:dividendForecast[doSplitAll, includeFutureDividends, includeHistoricalDividends] = ref(dividendForecastNoRef, priceRiskReference(object, value(actualDividendStream)));
[Equity Pricing and Risk]FFxRate:dividendForecast = nil;
[Equity Pricing and Risk]FInstrument:dividendForecast = nil;
[Equity Pricing and Risk]FLeg:dividendForecast[doSplitAll, includeFutureDividends, includeHistoricalDividends] = select(useDividendForecast, 
  true->creditReference:dividendForecast [doSplitAll, includeFutureDividends, includeHistoricalDividends], 
  false->nil);
[Equity Pricing and Risk]FStock:dividendForecast[doSplitAll, includeFutureDividends, includeHistoricalDividends] = ref(dividendForecastNoRef, priceRiskReference(object, value(actualDividendStream)));