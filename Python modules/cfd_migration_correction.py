import time
import acm
import PS_new_fees

#list of trades for which to create execution fee payments
tradeList = (66923831,
66923830,
66923829,
66923828,
66923827,
66923826,
66923825,
66923824,
66923823,
66923748,
66923747,
66923746,
65510031,
65510030,
65509530,
65509529,
65509421,
65509420,
65509036,
65509034,
65485482,
65485481,
65485479,
65485478,
65485477,
65485317,
65485316,
65485315,
65485314,
65485313,
65485161,
65485160,
65485159,
65485158,
65485157,
65485062,
65485061,
65485060,
65485059,
65485058,
65242471,
65242470,
65242413,
65242412,
65006353,
65006352,
65006347,
65006346,
64895778,
64895726,
64895636,
64895624,
64895221,
64895220,
64895216,
64895215,
64839882,
64839881,
64839880,
64839879,
64839878,
64839877,
64839876,
64839875,
64839874,
64839871,
64839870,
64839869,
64839868,
64839867,
64839866,
64839865,
64839864,
64839863,
64839862,
64839861,
64839859,
64839858,
64839857,
64839856,
64839855,
64839854,
64839853,
64839852,
64839851,
64839850,
64839849,
64839848,
64839847,
64839846,
64839845,
64839844,
64839843,
64839842,
64839841,
64839840,
64839839,
64839838,
64839837,
64839836,
64839835,
64839834,
64839833,
64839831,
64839830,
64839829,
64839828,
64839827,
64839826,
64839825,
64839824,
64839823,
64839822,
64839821,
64839820,
64839819,
64839818,
64839816,
64839815,
64839814,
64839813,
64839812,
64839811,
64839810,
64839809,
64839808,
64839807,
64839806,
64839805,
64839804,
64839803,
64839802,
64839801,
64724933,
64724932,
64724928,
64724925,
61260933,
61260931,
59134668,
58420553,
58354740,
58354739,
58288546,
58288545,
58288544,
58288543,
58288542,
58288541,
58288540,
58288538,
58288537,
58288536,
58288535,
58288534,
58288533,
58288532,
58288531,
58288530,
58288529,
58288528,
58288527,
58288526,
58288523,
58288521,
58288519,
58288518,
58288517,
58288516,
58288515,
58288514,
58288513,
58288512,
58288511,
58288510,
58288508,
58288507,
58288506,
58288505,
58288504,
58288503,
58288502,
58288501,
58288500,
58288499,
58288498,
58288497,
58288496,
58288495,
58288494,
58288493,
58288492,
58288491,
58288489,
58288486,
58288483,
58288482,
58288480,
58288479,
58288478,
58288477,
58288476,
58288475,
58288474,
58288473,
58288472,
58288471,
58288470,
58288469,
58288467,
58288466,
58288465,
58288464,
58288463,
58288462,
58288461,
58288460,
58288459,
58288457,
58288456,
58288455,
58288454,
58288453,
58288452,
58288451,
58288450,
58288449,
58288448,
58288447,
58288446,
58288445,
58288444,
58288443,
58288442,
58288441,
58288440,
58288439,
58288438,
58288437,
58288436,
58288435,
58288434,
58288433,
58288432,
58097720,
58097719,
58097718,
58097717,
57975072,
57975071,
57975070,
57975069,
57975068,
57975046,
57975045,
57975044,
57975040,
57975039,
57975032,
57975031,
57975030,
57975029,
57975028,
57975027,
57975026,
57975025,
57975024,
57975023,
57944995,
57917700,
57917699,
57917698,
57917697,
57917653,
57917650,
57917648,
57917646,
57917642,
57917637,
57917636,
57917634,
57917632,
57917630,
57917627,
57917615,
57917614,
57917612,
57917611,
57917610,
57917609,
56856753,
56856752,
56856751,
56856750,
56567910,
56567902,
56567879,
56567876,
56533380,
56533375,
56533368,
56533306,
56310709,
56310690,
56310677,
56310676,
55290473,
55290456,
55290455,
55290438,
54970662,
54970661,
54970629,
54970613,
54622137,
54622136,
54622135,
54622134,
54622133,
54622132,
54622131,
54622130,
54524208,
54524207,
54524205,
54524204,
54524203,
54524202,
54524201,
54524199,
54316677,
54316675,
54316668,
54316667,
54316648,
54316646,
54316632,
54316631,
54265271,
54265270,
54265269,
54265268,
54056628,
54056627,
54056626,
54056614,
54010065,
54010064,
54010061,
54010060,
54010057,
54010055,
54010054,
54010053,
53842912,
53842911,
53842910,
53842909,
53842907,
53842906,
53842905,
53842904,
53795442,
53795441,
53795180,
53795179,
53795178,
53795177,
53795176,
53795175,
53752444,
53752443,
53752442,
53752441,
53700839,
53700838,
53700837,
53700836,
53650906,
53650895,
53637325,
53637323,
53637003,
53636966,
53636929,
53636928,
53364389,
53364388,
53364368,
53364367,
53297026,
53297025,
53297024,
53297023,
52116462,
52116461,
52116437,
52116436,
52116412,
52116411,
52116387,
52116386,
49720543,
49235608,
49227149,
49227148,
49167699,
49167698,
48078933,
48078932,
48078931,
48078930,
48078707,
48078705,
48078704,
48078703,
48078676,
47997273,
47997267,
47581252,
46896900,
46896899,
46896898,
46023668,
45551293,
44586047,
44573915,
44573914,
44573913,
44573912,
44573911,
40900012,
40900011,
40900010,
40900009,
40900008,
40900007,
40900006,
40900005,
40900004,
40900003,
40390614,
40390241,
40211081,
40211080,
40211078,
40211077,
40177672,
40177671,
40177670,
40177669,
40143757,
40143756,
40143755,
40143754,
39829911,
39829910,
39829909,
39829908,
39556370,
39556369,
39556368,
39556367,
39159129,
39159128,
39159127,
39159126,
39159109,
39159108,
39159106,
39159102,
39039967,
39039964,
39039961,
39039958,
38835739,
38835738,
38835718,
38835598,
38733799,
38733798,
38733783,
38733782,
38655114,
38617531,
38617528,
38617519,
38601273,
38601272,
38601271,
38601270,
38601269,
38601268,
38601267,
38601266,
38601265,
38601264,
38601263,
38601262,
38601261,
38601260,
38601259,
38601258,
38601257,
38601255,
38601254,
38601253,
38601252,
38601251,
38601250,
38601249,
38601248,
38601247,
38601246,
38601245,
38601244,
38601243,
38601242,
38601241,
38601240,
38601238,
38601237,
38601236,
38601235,
38601234,
38601233,
38601232,
38601231,
38601230,
38601229,
38601228,
38601227,
38601226,
38601225,
38601224,
38601223,
38601222,
38601221,
38601220,
38601219,
38601218,
38601217,
38601216,
38601215,
38601214,
38601213,
38601212,
38601211,
38601210,
38601209,
38601208,
38601207,
38601206,
38601205,
38601204,
38601203,
38567926,
38567921,
37882306,
37882294,
37876915,
37876914,
37876913,
37876912,
37876911,
37876910,
37876905,
37876904,
37876903,
37876902,
37876901,
37876900,
37876899,
37876898,
37876894,
37876893,
37876892,
37876891,
37876890,
37876889,
37876886,
37876880,
37876879,
37876878,
37876877,
37876876,
37876875,
37876874,
36795655,
36795654,
36795653,
36795652,
36615323,
36615322,
36316939,
36316937,
36316921,
36316897,
36010936,
36010934,
36010924,
36010922,
34407577,
34407564,
34407551,
34407538,
33352498,
33352476,
33266398,
33266387,
33266367,
33266345,
33214304,
33214303,
33214302,
33214301,
31708441,
31708438,
31708431,
31651413,
31651409,
31651408,
29861502,
29861485,
29861479,
29752270,
29752252,
28486088,
28486087,
28486086,
28486085,
28279526,
28279525,
27954921,
27954096,
27947664,
27947655,
21280372,
79884722,
79884378,
79884358,
78789485,
78789484,
78788894,
78788892,
72094934,
72094895,
72094773,
95764568,
95764438,
95555157,
95555145,
94501223,
94107297,
94107296,
94107295,
94107294,
94107293,
94107292,
94107291,
94107290,
94107245,
94107244,
94107243,
94107242,
94107241,
94107240,
94107239,
94107238,
93973736,
93973595,
93334718,
93327748,
93255297,
93254819,
92038304,
92038303,
92038302,
92038301,
92038300,
92038299,
92038298,
92038297,
92038296,
92038295,
92038294,
92038293,
92038292,
92038291,
92038290,
92038289,
92038288,
92038287,
92038286,
92038199,
92038198,
92038197,
92038196,
92038195,
92038194,
92038193,
92038192,
92038191,
92038190,
92038189,
92038188,
92038187,
92038186,
92038185,
92038184,
92038183,
92038182,
91776716,
91776701,
91497106,
91496137,
91294904,
90178819,
90178818,
90178817,
90178444,
90178443,
90178442,
90178356,
90178355,
90178354,
89490142,
89490141,
89490140,
89489589,
88909838,
86994885,
86994884,
86189477,
85740716,
85740712,
85740665,
85740663,
85159828,
85159822,
85159814,
59134668,
49235608,
47581252,
45551293,
44586047,
59134668,
49235608,
47581252,
45551293,
44586047,
97833273,
97833272,
97833271,
97833270,
97833269,
97833268,
97833267,
97833266,
97833265,
97832768,
97832767,
97832766,
97832765,
97832764,
97832763,
97832762,
97832761,
97832760,
97792728,
97792726,
97792725,
97792724,
97792722,
97792721,
97792720,
97792718,
97792717,
97792716,
97792607,
97792605,
97792604,
97792603,
97792600,
97792599,
97792598,
97792596,
97792595,
97792594,
97792593,
59134668,
49235608,
47581252,
45551293,
44586047,
97887610,
97887609,
97887597,
97887595,
97814541,
97517847,
67957201,
98180913)




def functiontimer(f):
    def timed(*args, **kw):
        ts = time.time()
        result = f(*args, **kw)
        te = time.time()
        print('Function: %r took %2.4f seconds to execute.' % (f.__name__, te - ts))
        return result
    return timed
    


@functiontimer
def execute():
    counter = 1
    
    for tradeOid in tradeList:
        trade = acm.FTrade[tradeOid]
        execFee = PS_new_fees.add_cfd_execution_fee(trade)
        print(counter, tradeOid, execFee, trade.Portfolio().Name())
        counter = counter + 1
    
execute()
print('Done!')

