/* Usage code for this ASQL */
select
ael_i(p,'ASQL_log','TBC_SAIRD_BO_AMORTSWAPTIONCONFO') 'Name' 
 into  ASQL_LOG_TEMP 
 from TextObject p 
 where p.name = 'TBC_SAIRD_BO_AMORTSWAPTIONCONFO' and p.type = 'SQL Query' 
 
/*Fixed Rate Info*/

select

/*ael_f(t,'SACM_CASHFLOW_F_S.nominal_firstcf') 'EFFNotional',*/
/*t.optional_key  		'DevNbr',*/
l.type,
l.payleg,
i.insid				'Instrument',
und.insid			'Underlying',
i.exercise_type			'ExerciseType',
i.pay_offset_method		'Method',
nominal_amount(und,c.pay_day)		'Nominal',
t.premium			'Premium',
t.trdnbr			'Trdnbr',
t.bo_trdnbr			'BOTrdnbr',
time_to_day(t.time)		'Time',
l.start_day			'Start',
l.end_day			'End',
i.exp_day			'ExpDay',
t.value_day			'ValueDay',
p.fullname			'CP',
nominal_amount(t) > 0 ? 'ABSA BANK LIMITED' : p.fullname  'FixedPayer',
nominal_amount(t) < 0 ? 'ABSA BANK LIMITED' : p.fullname  'FloatPayer',
t.quantity < 0 ? 'ABSA BANK LIMITED' : p.fullname 	'OptionSeller',
t.quantity > 0 ? 'ABSA BANK LIMITED' : p.fullname 	'OptionBuyer',

p.address			'Address',
p.address2			'Address2',
p.zipcode			'Zipcode',
p.city				'City',
p.fax				'Fax',
c.pay_day			'Pay_Dates',
i.strike_price			'Rate',
''				'FloatRate',
''				'Spread1',
l.daycount_method		'Daycount',
display_id(l, 'pay_calnbr')	'Business_Days',
/*display_id(l, 'pay2_calnbr')	'Business_Days2',*/
p.swift				'Swift_Code',

p.country			'CP_Country',
display_id(p, 'document_type_chlnbr')	'Document',
t.status			'Status',
display_id(i,'curr')            'Curr',
l.rolling_period.count		'DesMaturity',
l.rolling_period.unit		'DesUnit',
l.spread ~= 0 ? l.spread : 'NONE'	'Spread'	


from

instrument			i,
trade				t,
leg				l,
cashflow			c,
party				p,
instrument			und

where
	i.insaddr=t.insaddr
and	i.und_insaddr = und.insaddr
and	l.insaddr =* und.insaddr
/*and 	match_filter(t, @TradeFilter{;tradefilter.fltid})*/
and	l.legnbr*=c.legnbr
and	l.type='fixed'
/*and	l.curr = 2*/
and 	i.instype='Option'
and	und.instype = 'Swap'
and	p.ptynbr=t.counterparty_ptynbr
and	(t.trdnbr in (@Trdnbr) or t.bo_trdnbr in (@BOTrdnbr))

/*and	ael_s(i,'BreakEventLD') = ''*/
/*and 	ael_s(i,'BreakEventFD') = ''*/
and	t.status not in ('Simulated','Terminated','Void')



order by 7


union



/*Float Rate Info*/

select

/*ael_f(t,'SACM_CASHFLOW_F_S.nominal_firstcf')   'EFFNotional',*/

/*t.optional_key  		'DevNbr',*/
l.type,
l.payleg,
i.insid				'Instrument',
und.insid			'Underlying',
i.exercise_type			'ExerciseType',
i.pay_offset_method		'Method',
nominal_amount(und,c.pay_day)		'Nominal',
t.premium			'Premium',
t.trdnbr			'Trdnbr',
t.bo_trdnbr			'BOTrdnbr',
time_to_day(t.time)		'Time',
l.start_day			'Start',
l.end_day			'End',
i.exp_day			'ExpDay',
t.value_day			'ValueDay',
p.fullname			'CP',
nominal_amount(t) > 0 ? 'ABSA BANK LIMITED' : p.fullname  'FixedPayer',
nominal_amount(t) < 0 ? 'ABSA BANK LIMITED' : p.fullname  'FloatPayer',
t.quantity < 0 ? 'ABSA BANK LIMITED' : p.fullname 	'OptionSeller',
t.quantity > 0 ? 'ABSA BANK LIMITED' : p.fullname 	'OptionBuyer',

p.address			'Address',
p.address2			'Address2',
p.zipcode			'Zipcode',
p.city				'City',
p.fax				'Fax',
c.pay_day			'Pay_Dates',
r.value				'Rate',
('Yes' ? display_id(l, 'float_rate') : '') like '%JIBAR%' ? 'ZAR-JIBAR-SAFEX' : ('Yes' ? display_id(l, 'float_rate') : '')		'FloatRate',
'YES' ? l.spread : ''		'Spread1',
l.daycount_method		'Daycount',
display_id(l, 'pay_calnbr')	'Business_Days',
/*display_id(l, 'pay2_calnbr')	'Business_Days2',*/
p.swift				'Swift_Code',

p.country			'CP_Country',
display_id(p, 'document_type_chlnbr')	'Document',
t.status			'Status',
display_id(i,'curr')            'Curr',
l.rolling_period.count		'DesMaturity',
l.rolling_period.unit		'DesUnit',
l.spread ~= 0 ? l.spread : 'NONE'	'Spread'

from

instrument			i,
trade				t,
leg				l,
cashflow			c,
reset				r,
party				p,
Instrument 			und


where
	i.insaddr=t.insaddr
and	i.und_insaddr = und.insaddr
and	l.insaddr =* und.insaddr
and	l.legnbr*=c.legnbr
and	l.type='float'
and 	r.type = 'Single'
and 	i.instype='Option'
and	und.instype = 'Swap'
/*and	l.curr = 2*/
and	r.cfwnbr=*c.cfwnbr
and	p.ptynbr=*t.counterparty_ptynbr
and	(t.trdnbr in (@Trdnbr) or t.bo_trdnbr in (@BOTrdnbr))

and	t.status not in ('Simulated','Terminated','Void')

/*and	ael_s(i,'BreakEventLD') = ''*/
/*and 	ael_s(i,'BreakEventFD')  = ''*/





